[{"authors":["admin"],"categories":null,"content":"I focus my research on machine learning applications applied to economics but in my spare time I generally enjoy playing around with different R packages. I set up this blog as a way to highlight my research results, organise my code and publish it along with comments for others.\n “Choose a job you love, and you will never have to work a day in your life.” ― Confucius  ","date":1569110400,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1569110400,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"I focus my research on machine learning applications applied to economics but in my spare time I generally enjoy playing around with different R packages. I set up this blog as a way to highlight my research results, organise my code and publish it along with comments for others.\n “Choose a job you love, and you will never have to work a day in your life.” ― Confucius  ","tags":null,"title":"Matthew Smith","type":"authors"},{"authors":null,"categories":null,"content":" Flexibility This feature can be used for publishing content such as:\n Online courses Project or software documentation Tutorials  The courses folder may be renamed. For example, we can rename it to docs for software/project documentation or tutorials for creating an online course.\nDelete tutorials To remove these pages, delete the courses folder and see below to delete the associated menu link.\nUpdate site menu After renaming or deleting the courses folder, you may wish to update any [[main]] menu links to it by editing your menu configuration at config/_default/menus.toml.\nFor example, if you delete this folder, you can remove the following from your menu configuration:\n[[main]] name = \u0026quot;Courses\u0026quot; url = \u0026quot;courses/\u0026quot; weight = 50  Or, if you are creating a software documentation site, you can rename the courses folder to docs and update the associated Courses menu configuration to:\n[[main]] name = \u0026quot;Docs\u0026quot; url = \u0026quot;docs/\u0026quot; weight = 50  Update the docs menu If you use the docs layout, note that the name of the menu in the front matter should be in the form [menu.X] where X is the folder name. Hence, if you rename the courses/example/ folder, you should also rename the menu definitions in the front matter of files within courses/example/ from [menu.example] to [menu.\u0026lt;NewFolderName\u0026gt;].\n","date":1536451200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536451200,"objectID":"59c3ce8e202293146a8a934d37a4070b","permalink":"/courses/example/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/courses/example/","section":"courses","summary":"Learn how to use Academic's docs layout for publishing online courses, software documentation, and tutorials.","tags":null,"title":"Overview","type":"docs"},{"authors":null,"categories":null,"content":" In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\nTip 2 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"74533bae41439377bd30f645c4677a27","permalink":"/courses/example/example1/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/courses/example/example1/","section":"courses","summary":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim.","tags":null,"title":"Example Page 1","type":"docs"},{"authors":null,"categories":null,"content":" Here are some more tips for getting started with Academic:\nTip 3 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\nTip 4 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"1c2b5a11257c768c90d5050637d77d6a","permalink":"/courses/example/example2/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/courses/example/example2/","section":"courses","summary":"Here are some more tips for getting started with Academic:\nTip 3 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus.","tags":null,"title":"Example Page 2","type":"docs"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Academic\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further talk details can easily be added to this page using Markdown and $\\rm \\LaTeX$ math code.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"96344c08df50a1b693cc40432115cbe3","permalink":"/talk/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example/","section":"talk","summary":"An example talk using Academic's Markdown slides feature.","tags":[],"title":"Example Talk","type":"talk"},{"authors":null,"categories":["financial time series"],"content":"\r\r::Note:: This is a long post but I talk about the procedure I took when dealing with a specific time series classification task.\nI was given a “Data Science” challenge as part of an interview in which I had to distinguish between real financial time series and synthetic time series. I document the results here, the data was anonymous and I have no idea which assets were which or from what time series the assets came from.\nTo conclude I obtained an in-sample-test-accuracy of 67% and an out-of-sample-test-accuracy of 65% (based on what the interviewers told me)\nAll I knew was that I had 12,000 real time series and 12,000 synthetically created time series. (apologies for no data but this was the companies data and not mine, I have uploaded the train and test data sets discussed later here where you should be able to run the final XGBoost model). In total there were 24,000 observations. I show the code here for methodological purposes and if you are interested in visualising time series in R and ggplot2. The time series features used here are taken from the following papers:\n\rLarge Scale Unusual Time Series Detection by R.Hyndman, E.Wang and N.Laptev\rVisualising forecasting algorithm performance using time series instance spaces by Y.Kang, Rob.Hyndman and Kate Smith-Miles\r\rYou can check out my Jupyter Notebook version here.\nI added a lot of notes to the code throughout the document which might be of additional interest.\nA brief overview of the notebook:\r\rPart 1 of the notebook:\r\rCleans the data and puts it into a better format for analysis. The data I recieved removed all dates, assest names etc. for anonymity.\rSimple plot of some returns for the Synthetic and Real financial time series.\rBox-plots of average returns and standard deviations.\rComputes the Durbin-Watson test statistics for both Synthetic and Real time series and box-plots.\rPlot the 10 day rolling mean and standard deviations for a random time series for Synthetic and real data.\rDickey Fuller test on both the Synthetic and real time series.\rJarque-Bera Test For Normality on the Synthetic and real time series.\rACF Plots for both the Synthetic and real time series.\r\r\rPart 2 of the notebook:\r\rCreates the time series features.\rSplits the train.csv into “train” and “validation” data sets.\rPuts the data into the correct format for XGBoost.\rSets up and searches over a parameter space to find the most optimal parameters for this data set (on the train data).\rOutputs these parameters into a data frame.\rTrain the model using the optimal parameters found from the grid-search.\rPlot the feature importance scores - i.e. the most “important” variables that the model found when making its predictions.\rAssign a cut-off on the probability scores (\u0026gt; 0.5 then assign a 1 - real time series, \u0026lt;= 0.5 then assign a 0 for Synthetic).\rCompute the Confusion Matrix and analyse the ‘in-sample’ validation results.\r\r\rPart 3 of the notebook:\r\rCreate the “test.csv” features just as before and save as “TSfeatures_test.csv”.\rLoad in the “TSfeatures_train_val.csv” and “TSfeatures_test.csv” which were created from “train.csv” and “test.csv”.\rSet up and run the XGBoost model using the optimal parameters found from the cross-validation grid search in “Part 2”.\rPlot the predicted probability density plot as before in “Part 2”.\rSet the cut-off threshold as the mean prediction score (0.465) which is close to the (0.500) score from “Part 2”.\rSave the results as “submission.csv”.\r\rLets get started…\nI often remove all other data in my environment before hand and turn scientific notation off which is what the first 2 lines does. The shhh command is useful for Jupyter Notebooks which outputs all the warning messages, adding shhh suppresses these warning messaged when loading in the packages. (In R markdown I can set warning = FALSE but there is no option on Notebooks. - that I know of - )\nrm(list = ls())\roptions(scipen=999)\rsetwd(\u0026#39;C:/Users/Matt/Desktop/Data Science Challenge\u0026#39;)\rshhh \u0026lt;- suppressPackageStartupMessages\rshhh(library(dplyr))\rlibrary(readr)\rlibrary(TSrepr)\rlibrary(ggplot2)\rlibrary(data.table)\rlibrary(cluster)\rlibrary(clusterCrit)\rlibrary(fractalrock)\rlibrary(cowplot)\rlibrary(tidyr)\rlibrary(tidyquant)\rlibrary(lmtest)\rlibrary(aTSA)\rlibrary(tsoutliers)\rlibrary(tsfeatures)\rlibrary(xgboost)\rlibrary(caret)\rlibrary(purrr)\rtrain_val \u0026lt;- read_csv(\u0026quot;train.csv\u0026quot;)\rtest \u0026lt;- read_csv(\u0026quot;test.csv\u0026quot;)\r\rNOTE:\rI have 2 data sets, the train_Val.csv for training and validation data set and the test.csv data set. I do not touch the test.csv data set until the very end in part 3. All the analysis and optimisation is performed only on the train_val.csv data set. The train_val.csv contains 12,000 observations and the test.csv contains 12,000 observations.\n\rPart 1\rThe data was given to me in this format:\nhead(train_val[, 1:5], 1)\r## # A tibble: 1 x 5\r## feature1 feature2 feature3 feature4 feature5\r## \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 0.00629 0.00441 -0.0381 0.0253 -0.00658\rThe names of the columns are as follows:\ncolnames(train_val) %\u0026gt;%\rdata.frame() %\u0026gt;%\rsetNames(c(\u0026quot;features\u0026quot;)) %\u0026gt;%\rsplit(as.integer(gl(nrow(.), 20, nrow(.)))) %\u0026gt;%\rkable(caption = \u0026quot;Time series variables\u0026quot;) %\u0026gt;%\rkable_styling(bootstrap_options = c(\u0026quot;striped\u0026quot;, \u0026quot;hover\u0026quot;, \u0026quot;condensed\u0026quot;, \u0026quot;responsive\u0026quot;), font_size = 12)\rTable 1: Time series variables\r\r\r\r\r\r\r\rfeatures\r\r\r\r\r\rfeature1\r\r\r\rfeature2\r\r\r\rfeature3\r\r\r\rfeature4\r\r\r\rfeature5\r\r\r\rfeature6\r\r\r\rfeature7\r\r\r\rfeature8\r\r\r\rfeature9\r\r\r\rfeature10\r\r\r\rfeature11\r\r\r\rfeature12\r\r\r\rfeature13\r\r\r\rfeature14\r\r\r\rfeature15\r\r\r\rfeature16\r\r\r\rfeature17\r\r\r\rfeature18\r\r\r\rfeature19\r\r\r\rfeature20\r\r\r\r\r\r\r\r\r\r\rfeatures\r\r\r\r\r\r21\r\rfeature21\r\r\r\r22\r\rfeature22\r\r\r\r23\r\rfeature23\r\r\r\r24\r\rfeature24\r\r\r\r25\r\rfeature25\r\r\r\r26\r\rfeature26\r\r\r\r27\r\rfeature27\r\r\r\r28\r\rfeature28\r\r\r\r29\r\rfeature29\r\r\r\r30\r\rfeature30\r\r\r\r31\r\rfeature31\r\r\r\r32\r\rfeature32\r\r\r\r33\r\rfeature33\r\r\r\r34\r\rfeature34\r\r\r\r35\r\rfeature35\r\r\r\r36\r\rfeature36\r\r\r\r37\r\rfeature37\r\r\r\r38\r\rfeature38\r\r\r\r39\r\rfeature39\r\r\r\r40\r\rfeature40\r\r\r\r\r\r\r\r\r\r\rfeatures\r\r\r\r\r\r41\r\rfeature41\r\r\r\r42\r\rfeature42\r\r\r\r43\r\rfeature43\r\r\r\r44\r\rfeature44\r\r\r\r45\r\rfeature45\r\r\r\r46\r\rfeature46\r\r\r\r47\r\rfeature47\r\r\r\r48\r\rfeature48\r\r\r\r49\r\rfeature49\r\r\r\r50\r\rfeature50\r\r\r\r51\r\rfeature51\r\r\r\r52\r\rfeature52\r\r\r\r53\r\rfeature53\r\r\r\r54\r\rfeature54\r\r\r\r55\r\rfeature55\r\r\r\r56\r\rfeature56\r\r\r\r57\r\rfeature57\r\r\r\r58\r\rfeature58\r\r\r\r59\r\rfeature59\r\r\r\r60\r\rfeature60\r\r\r\r\r\r\r\r\r\r\rfeatures\r\r\r\r\r\r61\r\rfeature61\r\r\r\r62\r\rfeature62\r\r\r\r63\r\rfeature63\r\r\r\r64\r\rfeature64\r\r\r\r65\r\rfeature65\r\r\r\r66\r\rfeature66\r\r\r\r67\r\rfeature67\r\r\r\r68\r\rfeature68\r\r\r\r69\r\rfeature69\r\r\r\r70\r\rfeature70\r\r\r\r71\r\rfeature71\r\r\r\r72\r\rfeature72\r\r\r\r73\r\rfeature73\r\r\r\r74\r\rfeature74\r\r\r\r75\r\rfeature75\r\r\r\r76\r\rfeature76\r\r\r\r77\r\rfeature77\r\r\r\r78\r\rfeature78\r\r\r\r79\r\rfeature79\r\r\r\r80\r\rfeature80\r\r\r\r\r\r\r\r\r\r\rfeatures\r\r\r\r\r\r81\r\rfeature81\r\r\r\r82\r\rfeature82\r\r\r\r83\r\rfeature83\r\r\r\r84\r\rfeature84\r\r\r\r85\r\rfeature85\r\r\r\r86\r\rfeature86\r\r\r\r87\r\rfeature87\r\r\r\r88\r\rfeature88\r\r\r\r89\r\rfeature89\r\r\r\r90\r\rfeature90\r\r\r\r91\r\rfeature91\r\r\r\r92\r\rfeature92\r\r\r\r93\r\rfeature93\r\r\r\r94\r\rfeature94\r\r\r\r95\r\rfeature95\r\r\r\r96\r\rfeature96\r\r\r\r97\r\rfeature97\r\r\r\r98\r\rfeature98\r\r\r\r99\r\rfeature99\r\r\r\r100\r\rfeature100\r\r\r\r\r\r\r\r\r\r\rfeatures\r\r\r\r\r\r101\r\rfeature101\r\r\r\r102\r\rfeature102\r\r\r\r103\r\rfeature103\r\r\r\r104\r\rfeature104\r\r\r\r105\r\rfeature105\r\r\r\r106\r\rfeature106\r\r\r\r107\r\rfeature107\r\r\r\r108\r\rfeature108\r\r\r\r109\r\rfeature109\r\r\r\r110\r\rfeature110\r\r\r\r111\r\rfeature111\r\r\r\r112\r\rfeature112\r\r\r\r113\r\rfeature113\r\r\r\r114\r\rfeature114\r\r\r\r115\r\rfeature115\r\r\r\r116\r\rfeature116\r\r\r\r117\r\rfeature117\r\r\r\r118\r\rfeature118\r\r\r\r119\r\rfeature119\r\r\r\r120\r\rfeature120\r\r\r\r\r\r\r\r\r\r\rfeatures\r\r\r\r\r\r121\r\rfeature121\r\r\r\r122\r\rfeature122\r\r\r\r123\r\rfeature123\r\r\r\r124\r\rfeature124\r\r\r\r125\r\rfeature125\r\r\r\r126\r\rfeature126\r\r\r\r127\r\rfeature127\r\r\r\r128\r\rfeature128\r\r\r\r129\r\rfeature129\r\r\r\r130\r\rfeature130\r\r\r\r131\r\rfeature131\r\r\r\r132\r\rfeature132\r\r\r\r133\r\rfeature133\r\r\r\r134\r\rfeature134\r\r\r\r135\r\rfeature135\r\r\r\r136\r\rfeature136\r\r\r\r137\r\rfeature137\r\r\r\r138\r\rfeature138\r\r\r\r139\r\rfeature139\r\r\r\r140\r\rfeature140\r\r\r\r\r\r\r\r\r\r\rfeatures\r\r\r\r\r\r141\r\rfeature141\r\r\r\r142\r\rfeature142\r\r\r\r143\r\rfeature143\r\r\r\r144\r\rfeature144\r\r\r\r145\r\rfeature145\r\r\r\r146\r\rfeature146\r\r\r\r147\r\rfeature147\r\r\r\r148\r\rfeature148\r\r\r\r149\r\rfeature149\r\r\r\r150\r\rfeature150\r\r\r\r151\r\rfeature151\r\r\r\r152\r\rfeature152\r\r\r\r153\r\rfeature153\r\r\r\r154\r\rfeature154\r\r\r\r155\r\rfeature155\r\r\r\r156\r\rfeature156\r\r\r\r157\r\rfeature157\r\r\r\r158\r\rfeature158\r\r\r\r159\r\rfeature159\r\r\r\r160\r\rfeature160\r\r\r\r\r\r\r\r\r\r\rfeatures\r\r\r\r\r\r161\r\rfeature161\r\r\r\r162\r\rfeature162\r\r\r\r163\r\rfeature163\r\r\r\r164\r\rfeature164\r\r\r\r165\r\rfeature165\r\r\r\r166\r\rfeature166\r\r\r\r167\r\rfeature167\r\r\r\r168\r\rfeature168\r\r\r\r169\r\rfeature169\r\r\r\r170\r\rfeature170\r\r\r\r171\r\rfeature171\r\r\r\r172\r\rfeature172\r\r\r\r173\r\rfeature173\r\r\r\r174\r\rfeature174\r\r\r\r175\r\rfeature175\r\r\r\r176\r\rfeature176\r\r\r\r177\r\rfeature177\r\r\r\r178\r\rfeature178\r\r\r\r179\r\rfeature179\r\r\r\r180\r\rfeature180\r\r\r\r\r\r\r\r\r\r\rfeatures\r\r\r\r\r\r181\r\rfeature181\r\r\r\r182\r\rfeature182\r\r\r\r183\r\rfeature183\r\r\r\r184\r\rfeature184\r\r\r\r185\r\rfeature185\r\r\r\r186\r\rfeature186\r\r\r\r187\r\rfeature187\r\r\r\r188\r\rfeature188\r\r\r\r189\r\rfeature189\r\r\r\r190\r\rfeature190\r\r\r\r191\r\rfeature191\r\r\r\r192\r\rfeature192\r\r\r\r193\r\rfeature193\r\r\r\r194\r\rfeature194\r\r\r\r195\r\rfeature195\r\r\r\r196\r\rfeature196\r\r\r\r197\r\rfeature197\r\r\r\r198\r\rfeature198\r\r\r\r199\r\rfeature199\r\r\r\r200\r\rfeature200\r\r\r\r\r\r\r\r\r\r\rfeatures\r\r\r\r\r\r201\r\rfeature201\r\r\r\r202\r\rfeature202\r\r\r\r203\r\rfeature203\r\r\r\r204\r\rfeature204\r\r\r\r205\r\rfeature205\r\r\r\r206\r\rfeature206\r\r\r\r207\r\rfeature207\r\r\r\r208\r\rfeature208\r\r\r\r209\r\rfeature209\r\r\r\r210\r\rfeature210\r\r\r\r211\r\rfeature211\r\r\r\r212\r\rfeature212\r\r\r\r213\r\rfeature213\r\r\r\r214\r\rfeature214\r\r\r\r215\r\rfeature215\r\r\r\r216\r\rfeature216\r\r\r\r217\r\rfeature217\r\r\r\r218\r\rfeature218\r\r\r\r219\r\rfeature219\r\r\r\r220\r\rfeature220\r\r\r\r\r\r\r\r\r\r\rfeatures\r\r\r\r\r\r221\r\rfeature221\r\r\r\r222\r\rfeature222\r\r\r\r223\r\rfeature223\r\r\r\r224\r\rfeature224\r\r\r\r225\r\rfeature225\r\r\r\r226\r\rfeature226\r\r\r\r227\r\rfeature227\r\r\r\r228\r\rfeature228\r\r\r\r229\r\rfeature229\r\r\r\r230\r\rfeature230\r\r\r\r231\r\rfeature231\r\r\r\r232\r\rfeature232\r\r\r\r233\r\rfeature233\r\r\r\r234\r\rfeature234\r\r\r\r235\r\rfeature235\r\r\r\r236\r\rfeature236\r\r\r\r237\r\rfeature237\r\r\r\r238\r\rfeature238\r\r\r\r239\r\rfeature239\r\r\r\r240\r\rfeature240\r\r\r\r\r\r\r\r\r\r\rfeatures\r\r\r\r\r\r241\r\rfeature241\r\r\r\r242\r\rfeature242\r\r\r\r243\r\rfeature243\r\r\r\r244\r\rfeature244\r\r\r\r245\r\rfeature245\r\r\r\r246\r\rfeature246\r\r\r\r247\r\rfeature247\r\r\r\r248\r\rfeature248\r\r\r\r249\r\rfeature249\r\r\r\r250\r\rfeature250\r\r\r\r251\r\rfeature251\r\r\r\r252\r\rfeature252\r\r\r\r253\r\rfeature253\r\r\r\r254\r\rfeature254\r\r\r\r255\r\rfeature255\r\r\r\r256\r\rfeature256\r\r\r\r257\r\rfeature257\r\r\r\r258\r\rfeature258\r\r\r\r259\r\rfeature259\r\r\r\r260\r\rfeature260\r\r\r\r\r\r\r\r\r\r\rfeatures\r\r\r\r\r\r261\r\rclass\r\r\r\r\r\r\r\r\rThere are 260 “features” in the train data along with a class variable which is excluded from the testing data. With ~253 trading days in a year the feature1, feature2, … featureN were daily time series. From my initial observation (and plots) I believed this data to be “returns” data. I firstly clean a little the data since time series does not do so well with feature1, feature2, … featureN as its input. I chose a year at random and renamed the columns with the function getTradingDates (there is always an R package for everything…).\n######################################################################\r################# Clean the data #####################################\r# Since the \u0026quot;features\u0026quot; are daily time series, I just choose a random year and rename the feautres into more meaningful names\r# Such as \u0026quot;2010-01-01\u0026quot;, \u0026quot;2010-01-02\u0026quot;, \u0026quot;2010-01-03\u0026quot; instead of \u0026quot;feature1\u0026quot;, \u0026quot;feature2\u0026quot;, \u0026quot;feature3\u0026quot; etc.\r# Theres a \u0026quot;trading dates\u0026quot; package in R to get only the dates which are trading dates.\rcolnames(train_val) \u0026lt;- getTradingDates(\u0026#39;2010-01-01\u0026#39;, obs = 260)\rcolnames(train_val)[ncol(train_val)] \u0026lt;- \u0026quot;class\u0026quot;\rcolnames(test) \u0026lt;- getTradingDates(\u0026#39;2010-01-01\u0026#39;, obs = 260)\rtest$dataset \u0026lt;- \u0026quot;test\u0026quot;\rtrain_val$dataset \u0026lt;- \u0026quot;train\u0026quot;\rHere (if I were to do things differently) I would keep to tidy data principles and use test %\u0026gt;% add_column(dataset = \"test) and train %\u0026gt;% add_colum(dataset = \"train\") instead of test$dataset \u0026lt;- \"test and train_val$dataset \u0026lt;- \"train\". But that doesn’t matter much.\n\rHow the training data looks after cleaning:\rTable 2: How the training set looks now (cleaned)\r\r\r\r2009-01-05\r\r2009-01-06\r\r2009-01-07\r\r2009-01-08\r\r2009-01-09\r\r\r\r\r\r0.0062865\r\r0.0044074\r\r-0.0380887\r\r0.0252850\r\r-0.0065788\r\r\r\r0.0008491\r\r0.0025729\r\r0.0013584\r\r-0.0054742\r\r-0.0098234\r\r\r\r0.0142292\r\r-0.0252533\r\r-0.0100752\r\r-0.0319871\r\r-0.0065087\r\r\r\r-0.0215930\r\r-0.0102866\r\r-0.0210674\r\r-0.0086876\r\r0.0371876\r\r\r\r0.0092523\r\r-0.0235778\r\r0.0170582\r\r0.0037303\r\r0.0171185\r\r\r\r0.0143528\r\r0.0094828\r\r0.0042109\r\r-0.0038064\r\r0.0084914\r\r\r\r\r\rHow the testing data looks after cleaning:\rTable 3: How the testing data looks (cleaned)\r\r\r\r2009-01-05\r\r2009-01-06\r\r2009-01-07\r\r2009-01-08\r\r2009-01-09\r\r\r\r\r\r0.0331039\r\r0.0086225\r\r0.0040622\r\r0.0082554\r\r0.0558741\r\r\r\r0.0020681\r\r-0.0034293\r\r0.0134305\r\r-0.0109182\r\r-0.0184851\r\r\r\r0.0147834\r\r-0.0113800\r\r-0.0046055\r\r-0.0008757\r\r-0.0011536\r\r\r\r-0.0094855\r\r0.0113410\r\r-0.0213286\r\r0.0033220\r\r-0.0111519\r\r\r\r0.0381690\r\r-0.0037092\r\r-0.0010865\r\r-0.0062307\r\r0.0232117\r\r\r\r0.0004257\r\r-0.0042553\r\r0.0029915\r\r0.0017043\r\r0.0012760\r\r\r\r\rThe goal: Was to classify which financial time series were real vs which were synthetically created (by some algorithm I have no knowledge of how it generated the synthetic time series)\nI re-arranged the data using the melt function in R, however I suggest anybody reading this to use the pivol_longer function from the tidyverse packages. The pivot_longer package was released a few weeks after writing the code for this problem.\n######################################################################\r################# Rearrange the data #################################\r# I melt the data for easier analysis, now the data is in a long format.\r# \u0026quot;Class\u0026quot; corresponds to whether the asset is Synthetic or Real\r# \u0026quot;Dataset\u0026quot; tells me where the data came from\r# \u0026quot;row_id\u0026quot; - corresponds to a unique ID assigned to each asset both \u0026quot;(Synthetic \u0026amp; Real)\u0026quot;\r# \u0026quot;Variable\u0026quot; is the column names of the original dataset (feature1, feature2, ... , featureN) converted to some date\r# \u0026quot;Value\u0026quot; is the daily returns\rdf \u0026lt;- train_val %\u0026gt;%\rmutate(row_id = row_number()) %\u0026gt;%\rmelt(., measure.vars = 1:260) %\u0026gt;%\rarrange(row_id)\rhead(df)\r## class dataset row_id variable value\r## 1 0 train 1 2009-01-05 0.006286455\r## 2 0 train 1 2009-01-06 0.004407363\r## 3 0 train 1 2009-01-07 -0.038088652\r## 4 0 train 1 2009-01-08 0.025285012\r## 5 0 train 1 2009-01-09 -0.006578773\r## 6 0 train 1 2009-01-12 0.005713677\rdim(df)\r## [1] 3120000 5\rNote: I call the training data df which in hindsight is probably bad practice and it should be called something related to the train_Val named data set. Just keep in mind that df refers to the train_Val data set. (and does not include the test.csv data set data)\nAs we can see the data has 3,120,000 rows which is 12,000 assets * 260 trading days. Next I plot the returns series using ggplot.\n# Plot some returns - I only plot a random sample of 20 assets for each Synthetic vs Real.\rret_plot0 \u0026lt;- df %\u0026gt;%\rfilter(class == 0) %\u0026gt;%\rgroup_by(row_id) %\u0026gt;%\rnest() %\u0026gt;%\rungroup() %\u0026gt;% sample_n(20) %\u0026gt;%\runnest() %\u0026gt;% ggplot(aes(x = variable, y = value)) +\rgeom_line(aes(group = factor(row_id), color = factor(row_id))) +\rggtitle(\u0026quot;Synthetic Financial Time Series\u0026quot;) +\rtheme_classic() +\rtheme(axis.text.x = element_blank(), legend.position = \u0026quot;bottom\u0026quot;, legend.title = element_blank())\rret_plot1 \u0026lt;- df %\u0026gt;%\rfilter(class == 1) %\u0026gt;%\rgroup_by(row_id) %\u0026gt;%\rnest() %\u0026gt;%\rungroup() %\u0026gt;%\rsample_n(20) %\u0026gt;%\runnest() %\u0026gt;%\rggplot(aes(x = variable, y = value)) +\rgeom_line(aes(group = factor(row_id), color = factor(row_id))) +\rggtitle(\u0026quot;Real Financial Time Series\u0026quot;) +\rtheme_classic() +\rtheme(axis.text.x = element_blank(), legend.position = \u0026quot;bottom\u0026quot;, legend.title = element_blank())\rplot_grid(ret_plot0, ret_plot1)\rNext I plot boxplots for the Average returns and secondly the standard deviations.\nave_box \u0026lt;- df %\u0026gt;%\rgroup_by(class, row_id) %\u0026gt;%\rsummarise(mean = mean(value)) %\u0026gt;%\rggplot(aes(x = factor(class), y = mean, color = factor(class))) +\rgeom_boxplot(show.legend = FALSE) +\rggtitle(\u0026quot;Syn vs Real Average Returns\u0026quot;) +\rxlab(\u0026quot;Class\u0026quot;) +\rylab(\u0026quot;Average Returns\u0026quot;) +\rtheme_tq()\rsd_box \u0026lt;- df %\u0026gt;%\rgroup_by(class, row_id) %\u0026gt;%\rsummarise(sd = sd(value)) %\u0026gt;%\rggplot(aes(x = factor(class), y = sd, color = factor(class))) +\rgeom_boxplot(show.legend = FALSE) +\rggtitle(\u0026quot;Syn vs Real Standard Deviations\u0026quot;) +\rxlab(\u0026quot;Class\u0026quot;) +\rylab(\u0026quot;Standard Deviation\u0026quot;) +\rtheme_tq()\rplot_grid(ave_box, sd_box)\rI next calculate the Durbin-Watson statistic. I mostly code using R’s tidy data principles and therefore use the tidy function from the broom package to tidy the output of the DW statistic up a little. I do this for both the synthetic time series and real time series.\n# I calculate the Durbin-Watson statistic and use the \u0026quot;tidy()\u0026quot; function to summarise the key information from the calculation.\rdw_test_class_zero \u0026lt;- df %\u0026gt;%\rdplyr::filter(class == 0) %\u0026gt;%\rnest(-row_id) %\u0026gt;%\rmutate(dw_res = map(data, ~ broom::tidy(lmtest::dwtest(value ~ 1, data = .x)))) %\u0026gt;%\runnest(dw_res) %\u0026gt;%\rmutate(class = \u0026quot;0\u0026quot;)\rdw_test_class_zero %\u0026gt;% head()\r## # A tibble: 6 x 7\r## row_id data statistic p.value method alternative class\r## \u0026lt;int\u0026gt; \u0026lt;list\u0026lt;df[,4\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt;\r## 1 1 [260 x 4] 1.98 0.426 Durbin-Wat~ true autocorrelation ~ 0 ## 2 2 [260 x 4] 2.01 0.521 Durbin-Wat~ true autocorrelation ~ 0 ## 3 4 [260 x 4] 2.08 0.747 Durbin-Wat~ true autocorrelation ~ 0 ## 4 5 [260 x 4] 2.49 1.000 Durbin-Wat~ true autocorrelation ~ 0 ## 5 6 [260 x 4] 1.90 0.214 Durbin-Wat~ true autocorrelation ~ 0 ## 6 9 [260 x 4] 1.87 0.138 Durbin-Wat~ true autocorrelation ~ 0\r# Here I do the exact same thing as above but this time for the class == 1 data.\rdw_test_class_one \u0026lt;- df %\u0026gt;%\rfilter(class == 1) %\u0026gt;%\rnest(-row_id) %\u0026gt;%\rmutate(dw_res = map(data, ~ broom::tidy(lmtest::dwtest(value ~ 1, data = .x)))) %\u0026gt;%\runnest(dw_res) %\u0026gt;%\rmutate(class = \u0026quot;1\u0026quot;)\rdw_test_class_one %\u0026gt;%\rhead()\r## # A tibble: 6 x 7\r## row_id data statistic p.value method alternative class\r## \u0026lt;int\u0026gt; \u0026lt;list\u0026lt;df[,4\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt;\r## 1 3 [260 x 4] 2.08 0.728 Durbin-Wat~ true autocorrelation ~ 1 ## 2 7 [260 x 4] 1.81 0.0654 Durbin-Wat~ true autocorrelation ~ 1 ## 3 8 [260 x 4] 1.93 0.296 Durbin-Wat~ true autocorrelation ~ 1 ## 4 13 [260 x 4] 2.05 0.644 Durbin-Wat~ true autocorrelation ~ 1 ## 5 15 [260 x 4] 2.07 0.715 Durbin-Wat~ true autocorrelation ~ 1 ## 6 16 [260 x 4] 2.07 0.709 Durbin-Wat~ true autocorrelation ~ 1\rNext I plot the boxplot statistics for each of the Durbin Watson tests.\n# I bind the rows together and plot a box-plot.\rbind_rows(dw_test_class_zero, dw_test_class_one) %\u0026gt;%\rgroup_by(class) %\u0026gt;%\rggplot(aes(x = factor(class), y = statistic, color = factor(class))) +\rgeom_boxplot(show.legend = FALSE) +\rggtitle(\u0026quot;Durbin Watson Box Plot Statistics\u0026quot;) +\rxlab(\u0026quot;Class\u0026quot;) +\rylab(\u0026quot;Durbin Watson\u0026quot;) +\rtheme_tq()\rI compute the 10 day rolling mean and standard deviation using the tq_mutate function from the tidyquant package. value corresponds to the returns of the financial time series and is plotted in blue with the 10 day rolling average and standard deviation plotted over the returns. (I use melt again here but look into the pivot_longer function for a more intuitive application)\n# Rolling mean and standard deviations\r# I only use a random sample of 1 of each class of the grouped observations to save on memory and to make the plot more readable.\r# The rollowing window is 10 days\r# I use the tq_mutate functionality from the \u0026quot;tidyquant\u0026quot; package to keep things in a \u0026quot;tidy\u0026quot; format as per the \u0026quot;tidyverse\u0026quot; \u0026#39;rules\u0026#39;.\r# In the plot \u0026quot;value\u0026quot; is the returns, \u0026quot;mean_10\u0026quot; is the 10 day rolling mean and \u0026quot;sd_10\u0026quot; is the 10 day rolling standard deviation.\rplot0 \u0026lt;- df %\u0026gt;%\rfilter(class == 0) %\u0026gt;%\ras_tibble() %\u0026gt;%\rgroup_by(row_id) %\u0026gt;%\rnest() %\u0026gt;%\rungroup() %\u0026gt;% sample_n(1) %\u0026gt;%\runnest() %\u0026gt;%\rmutate(variable = as.Date(variable)) %\u0026gt;%\rtq_mutate(\rselect = value,\rmutate_fun = rollapply,\rwidth = 10,\ralign = \u0026quot;right\u0026quot;,\rFUN = mean,\rna.rm = TRUE,\rcol_rename = \u0026quot;mean_10\u0026quot;\r) %\u0026gt;%\rtq_mutate(\rselect = value,\rmutate_fun = rollapply,\rwidth = 10,\ralign = \u0026quot;right\u0026quot;,\rFUN = sd,\rna.rm = TRUE,\rcol_rename = \u0026quot;sd_10\u0026quot;\r) %\u0026gt;%\rmelt(measure.vars = 5:7) %\u0026gt;%\rsetNames(c(\u0026quot;row_id\u0026quot;, \u0026quot;class\u0026quot;, \u0026quot;data set\u0026quot;, \u0026quot;date\u0026quot;, \u0026quot;variable\u0026quot;, \u0026quot;value\u0026quot;)) %\u0026gt;%\rggplot(aes(x = date)) +\rgeom_line(aes(y = value, colour = variable)) +\rggtitle(\u0026quot;Synthetic Financial Time Series Rolling Mean and Standard Deviation\u0026quot;) +\rtheme_classic() +\rscale_colour_manual(values = c(\u0026quot;#1f77b4\u0026quot;, \u0026quot;red\u0026quot;, \u0026quot;black\u0026quot;)) +\rtheme(axis.text.x = element_blank(), legend.position = \u0026quot;bottom\u0026quot;, legend.title = element_blank())\rplot1 \u0026lt;- df %\u0026gt;%\rfilter(class == 1) %\u0026gt;%\ras_tibble() %\u0026gt;%\rgroup_by(row_id) %\u0026gt;%\rnest() %\u0026gt;%\rungroup() %\u0026gt;% sample_n(1) %\u0026gt;%\runnest() %\u0026gt;%\rmutate(variable = as.Date(variable)) %\u0026gt;%\rtq_mutate(\rselect = value,\rmutate_fun = rollapply,\rwidth = 10,\ralign = \u0026quot;right\u0026quot;,\rFUN = mean,\rna.rm = TRUE,\rcol_rename = \u0026quot;mean_10\u0026quot;\r) %\u0026gt;%\rtq_mutate(\rselect = value,\rmutate_fun = rollapply,\rwidth = 10,\ralign = \u0026quot;right\u0026quot;,\rFUN = sd,\rna.rm = TRUE,\rcol_rename = \u0026quot;sd_10\u0026quot;\r) %\u0026gt;%\rmelt(measure.vars = 5:7) %\u0026gt;%\rsetNames(c(\u0026quot;row_id\u0026quot;, \u0026quot;class\u0026quot;, \u0026quot;data set\u0026quot;, \u0026quot;date\u0026quot;, \u0026quot;variable\u0026quot;, \u0026quot;value\u0026quot;)) %\u0026gt;%\rggplot(aes(x = date)) +\rgeom_line(aes(y = value, colour = variable)) +\rggtitle(\u0026quot;Real Financial Time Series Rolling Mean and Standard Deviation\u0026quot;) +\rtheme_classic() +\rscale_colour_manual(values = c(\u0026quot;#1f77b4\u0026quot;, \u0026quot;red\u0026quot;, \u0026quot;black\u0026quot;)) +\rtheme(axis.text.x = element_blank(), legend.position = \u0026quot;bottom\u0026quot;, legend.title = element_blank()) plot_grid(plot0, plot1)\rAn important note in the code here is that I randomly sample by group, that is, I do not take a random sample from all observations across all groups. Instead I group_by each time series (each of the 6,000 observations after I filtered by the class == 0, likewise when I filter by the class == 1), I then nest() the data to collapse the daily time series for each asset into a list. From here I will have 6,000 observations, each of which has their time series nested inside a list. Thus, I can sample 1 of the 6,000 observations and then unnest() and obtain a full time series set of one of the random assets selected, - instead of sampling randomly over all assets time series data (which would be completely wrong).\nFor example the following commented out code group_by() the ID variable and nest() the data, takes a random sample_n() of the grouped data and then unnest() the data to its original form, this time with a random sample of the IDs.\n# group_by(row_id) %\u0026gt;%\r# nest() %\u0026gt;%\r# ungroup() %\u0026gt;% # sample_n(1) %\u0026gt;%\r# unnest() %\u0026gt;%\rNext I compute the Dickey Fuller test on both series for a single random observation, hence the sample_n(1) argument (it’s too computationally expensive to compute it on all 12,000 observations).\nFor the synthetically created series.\n# Dickey Fuller test on the 0 class\r# I only randomly sample 1 of the assets for the 0 class to save on output space\rdf %\u0026gt;%\rfilter(class == 0) %\u0026gt;%\rgroup_by(row_id) %\u0026gt;%\rnest() %\u0026gt;%\rungroup() %\u0026gt;% sample_n(1) %\u0026gt;%\runnest() %\u0026gt;%\rnest(-row_id) %\u0026gt;%\rmutate(adf_res = map(data, ~ adf.test(.x$value))) %\u0026gt;%\runnest(adf_res)\r## Augmented Dickey-Fuller Test ## alternative: stationary ## ## Type 1: no drift no trend ## lag ADF p.value\r## [1,] 0 -17.94 0.01\r## [2,] 1 -11.75 0.01\r## [3,] 2 -8.66 0.01\r## [4,] 3 -7.62 0.01\r## [5,] 4 -7.13 0.01\r## Type 2: with drift no trend ## lag ADF p.value\r## [1,] 0 -17.94 0.01\r## [2,] 1 -11.76 0.01\r## [3,] 2 -8.67 0.01\r## [4,] 3 -7.64 0.01\r## [5,] 4 -7.15 0.01\r## Type 3: with drift and trend ## lag ADF p.value\r## [1,] 0 -18.00 0.01\r## [2,] 1 -11.83 0.01\r## [3,] 2 -8.77 0.01\r## [4,] 3 -7.74 0.01\r## [5,] 4 -7.26 0.01\r## ---- ## Note: in fact, p.value = 0.01 means p.value \u0026lt;= 0.01\r## # A tibble: 3 x 3\r## row_id data adf_res ## \u0026lt;int\u0026gt; \u0026lt;list\u0026lt;df[,4]\u0026gt;\u0026gt; \u0026lt;named list\u0026gt; ## 1 7807 [260 x 4] \u0026lt;dbl[,3] [5 x 3]\u0026gt;\r## 2 7807 [260 x 4] \u0026lt;dbl[,3] [5 x 3]\u0026gt;\r## 3 7807 [260 x 4] \u0026lt;dbl[,3] [5 x 3]\u0026gt;\rThe same but on the real financial series.\n# Dickey Fuller test on the 1 class\r# I only randomly sample 1 of the assets for the 1 class to save on output space\rdf %\u0026gt;%\rfilter(class == 1) %\u0026gt;%\rgroup_by(row_id) %\u0026gt;%\rnest() %\u0026gt;%\rungroup() %\u0026gt;% sample_n(1) %\u0026gt;%\runnest() %\u0026gt;%\rnest(-row_id) %\u0026gt;%\rmutate(adf_res = map(data, ~ adf.test(.x$value))) %\u0026gt;%\runnest(adf_res)\r## Augmented Dickey-Fuller Test ## alternative: stationary ## ## Type 1: no drift no trend ## lag ADF p.value\r## [1,] 0 -15.99 0.01\r## [2,] 1 -10.71 0.01\r## [3,] 2 -9.12 0.01\r## [4,] 3 -8.74 0.01\r## [5,] 4 -7.58 0.01\r## Type 2: with drift no trend ## lag ADF p.value\r## [1,] 0 -16.10 0.01\r## [2,] 1 -10.84 0.01\r## [3,] 2 -9.27 0.01\r## [4,] 3 -8.93 0.01\r## [5,] 4 -7.81 0.01\r## Type 3: with drift and trend ## lag ADF p.value\r## [1,] 0 -16.27 0.01\r## [2,] 1 -10.99 0.01\r## [3,] 2 -9.46 0.01\r## [4,] 3 -9.18 0.01\r## [5,] 4 -8.06 0.01\r## ---- ## Note: in fact, p.value = 0.01 means p.value \u0026lt;= 0.01\r## # A tibble: 3 x 3\r## row_id data adf_res ## \u0026lt;int\u0026gt; \u0026lt;list\u0026lt;df[,4]\u0026gt;\u0026gt; \u0026lt;named list\u0026gt; ## 1 10833 [260 x 4] \u0026lt;dbl[,3] [5 x 3]\u0026gt;\r## 2 10833 [260 x 4] \u0026lt;dbl[,3] [5 x 3]\u0026gt;\r## 3 10833 [260 x 4] \u0026lt;dbl[,3] [5 x 3]\u0026gt;\rNext the Jarque-Bera tests for normality. Firstly on the synthetically created series.\n# For both classes I take a random sample of 1 observation from each class (Synthetic and Real financial series)\rjb_zero \u0026lt;- df %\u0026gt;%\rfilter(class == 0) %\u0026gt;%\rgroup_by(row_id) %\u0026gt;%\rnest() %\u0026gt;%\rungroup() %\u0026gt;% sample_n(1) %\u0026gt;%\runnest() %\u0026gt;%\rnest(-row_id) %\u0026gt;%\rmutate(JarqueBeraTest = map(data, ~ JarqueBera.test(.x$value)))\rprint(\u0026quot;Jarque-Bera Test on the 0 - Synthetic class\u0026quot;)\r## [1] \u0026quot;Jarque-Bera Test on the 0 - Synthetic class\u0026quot;\rjb_zero$JarqueBeraTest\r## [[1]]\r## ## Jarque Bera Test\r## ## data: .x$value\r## X-squared = 0.3088, df = 2, p-value = 0.8569\r## ## ## Skewness\r## ## data: .x$value\r## statistic = 0.045794, p-value = 0.7631\r## ## ## Kurtosis\r## ## data: .x$value\r## statistic = 2.8582, p-value = 0.6406\rAlso on the real financial series.\njb_one \u0026lt;- df %\u0026gt;%\rfilter(class == 0) %\u0026gt;%\rgroup_by(row_id) %\u0026gt;%\rnest() %\u0026gt;%\rungroup() %\u0026gt;% sample_n(1) %\u0026gt;%\runnest() %\u0026gt;%\rnest(-row_id) %\u0026gt;%\rmutate(JarqueBeraTest = map(data, ~ JarqueBera.test(.x$value)))\rprint(\u0026quot;Jarque-Bera Test on the 1 - Real class\u0026quot;)\r## [1] \u0026quot;Jarque-Bera Test on the 1 - Real class\u0026quot;\rjb_one$JarqueBeraTest\r## [[1]]\r## ## Jarque Bera Test\r## ## data: .x$value\r## X-squared = 25.14, df = 2, p-value = 0.000003474\r## ## ## Skewness\r## ## data: .x$value\r## statistic = 0.084191, p-value = 0.5794\r## ## ## Kurtosis\r## ## data: .x$value\r## statistic = 4.514, p-value = 0.0000006251\r\rAutocorrelation plots:\rI plot the Autocorrelation Function for a “random” sample of observations time series. I selected 4 observations and filtered the data by them.\n######################################################################\r################# ACF plots ##########################################\r# I only use 4 observations for these plots, 2 from the \u0026quot;synthetic\u0026quot; class and 2 from the \u0026quot;real\u0026quot; class.\rdf %\u0026gt;%\rfilter(row_id == 6422 | row_id == 8967 | row_id == 6080 | row_id == 5734) %\u0026gt;%\rmutate(date = as.Date(variable)) %\u0026gt;%\rggplot(aes(x = date)) +\rgeom_line(aes(y = value), color = \u0026quot;red\u0026quot;, alpha = 0.4) +\rgeom_hline(yintercept = 0) +\rfacet_wrap(~ row_id + class) +\rtheme_tq()\racf_data \u0026lt;- df %\u0026gt;%\rdplyr::filter(row_id == 6422 | row_id == 8967 | row_id == 6080 | row_id == 5734) %\u0026gt;%\rmutate(date = as.Date(variable))\rdf_acf \u0026lt;- acf_data %\u0026gt;%\rgroup_by(row_id) %\u0026gt;% summarise(list_acf = list(acf(value, plot=FALSE))) %\u0026gt;%\rmutate(acf_vals = purrr::map(list_acf, ~as.numeric(.x$acf))) %\u0026gt;% select(-list_acf) %\u0026gt;% unnest() %\u0026gt;% group_by(row_id) %\u0026gt;% mutate(lag = row_number() - 1)\rdf_ci \u0026lt;- acf_data %\u0026gt;% group_by(row_id) %\u0026gt;% summarise(ci = qnorm((1 + 0.95)/2)/sqrt(n()))\rggplot(df_acf, aes(x = lag, y = acf_vals)) +\rgeom_bar(stat=\u0026quot;identity\u0026quot;, width=.05) +\rgeom_hline(yintercept = 0) +\rgeom_hline(data = df_ci, aes(yintercept = -ci), color=\u0026quot;blue\u0026quot;, linetype=\u0026quot;dotted\u0026quot;) +\rgeom_hline(data = df_ci, aes(yintercept = ci), color=\u0026quot;blue\u0026quot;, linetype=\u0026quot;dotted\u0026quot;) +\rlabs(x=\u0026quot;Lag\u0026quot;, y=\u0026quot;ACF\u0026quot;) +\rfacet_wrap(~ row_id) +\rtheme_tq()\rThats enough data analysis I could probably fit the PACF plots also along with a few more exploratory data analysis but I move on to generating the financial time series features using the tsfeatures package.\nWhat I do in the below code is to take a random sample of 5 groups (Using the whole data set takes too long to calculate the time series features) and then apply all the functions in the tsfeatures package to each of the time series assets data which is does by mapping over each assets data and computing the time series features.\nThis section takes some time to process and compute (especially on the whole sample) and I already saved the results as a csv which I will just work from and load in the pre-computed time series features.\n################# Generate Time Series Features ######################\r# I create some time series features from the package \u0026quot;tsfeatures\u0026quot;. There are 40+ functions in the \u0026quot;tsfeatures\u0026quot; package\r# which can generate approximately 106 time series features.\r# Due to memory issues I am only able to create a few of the features, therefore I randomly sample 10 features from the\r# \u0026quot;tsfeatures\u0026quot; package. We could also add in technical indicators from the \u0026quot;PerformanceAnalytics\u0026quot; or \u0026quot;TTR\u0026quot; packages (I omit these\r# here, however creating \u0026#39;functions2 \u0026lt;- ls(\u0026quot;package:TTR\u0026quot;)\u0026#39; and adding it to the \u0026#39;summarise\u0026#39; command will work.)\rfunctions \u0026lt;- ls(\u0026quot;package:tsfeatures\u0026quot;)[1:42]\r# functions \u0026lt;- sample(functions, 20)\rStats \u0026lt;- df %\u0026gt;%\rgroup_by(row_id, class) %\u0026gt;%\rnest() %\u0026gt;%\rungroup() %\u0026gt;%\rsample_n(5) %\u0026gt;%\runnest() %\u0026gt;%\rnest(-row_id, -class) %\u0026gt;%\rgroup_by(row_id, class) %T\u0026gt;%\r{options(warn = -1)} %\u0026gt;%\rsummarise(Statistics = map(data, ~ data.frame(\rbind_cols(\rtsfeatures(.x$value, functions))))) %\u0026gt;%\runnest(Statistics)\r# I saved to whole dataset as \u0026quot;Stats\u0026quot; next I split it between training and test.\rStats \u0026lt;- read.csv(\u0026quot;C:/Users/Matt/Desktop/Data Science Challenge/TSfeatures_train_val.csv\u0026quot;)\rNote: Again, bad practice by me. I just called the df data Stats which consists of only the time series features. This still only refers to the train_val.csv data and not the test.csv data.\nThe training data looks like: (after computing the time series features). Now each asset has been collapsed from ~260 days down to 1 signal time series feature observation.\nRecall the goal here was to classify synthetic time series vs real time series and not what the next days price is going to be. For each asset I have a signal observation and based on this I can train a classifying algorithm to distinguish between real vs synthetic time series.\n\rHow the training data looks:\rTable 4: tsfeatures package features\r\r\r\rX\r\rrow_id\r\rclass\r\rac_9_ac_9\r\racf_features_x_acf1\r\racf_features_x_acf10\r\racf_features_diff1_acf1\r\racf_features_diff1_acf10\r\racf_features_diff2_acf1\r\racf_features_diff2_acf10\r\rARCH.LM\r\rautocorr_features_embed2_incircle_1\r\rautocorr_features_embed2_incircle_2\r\rautocorr_features_ac_9\r\rautocorr_features_firstmin_ac\r\rautocorr_features_trev_num\r\rautocorr_features_motiftwo_entro3\r\rautocorr_features_walker_propcross\r\rbinarize_mean_binarize_mean\r\rbinarize_mean_NA\r\rcompengine_embed2_incircle_1\r\rcompengine_embed2_incircle_2\r\rcompengine_ac_9\r\rcompengine_firstmin_ac\r\rcompengine_trev_num\r\rcompengine_motiftwo_entro3\r\rcompengine_walker_propcross\r\rcompengine_localsimple_mean1\r\rcompengine_localsimple_lfitac\r\rcompengine_sampen_first\r\rcompengine_std1st_der\r\rcompengine_spreadrandomlocal_meantaul_50\r\rcompengine_spreadrandomlocal_meantaul_ac2\r\rcompengine_histogram_mode_10\r\rcompengine_outlierinclude_mdrmd\r\rcompengine_fluctanal_prop_r1\r\rcrossing_points\r\rdist_features_histogram_mode_10\r\rdist_features_outlierinclude_mdrmd\r\rembed2_incircle\r\rentropy\r\rfirstmin_ac\r\rfirstzero_ac\r\rflat_spots\r\rfluctanal_prop_r1_fluctanal_prop_r1\r\rarch_acf\r\rgarch_acf\r\rarch_r2\r\rgarch_r2\r\rhistogram_mode\r\ralpha\r\rbeta\r\rhurst\r\rhw_parameters_hw_parameters\r\rhw_parameters_NA\r\rlocalsimple_taures\r\rlumpiness\r\rmax_kl_shift\r\rtime_kl_shift\r\rmax_level_shift\r\rtime_level_shift\r\rmax_var_shift\r\rtime_var_shift\r\rmotiftwo_entro3\r\rnonlinearity\r\routlierinclude_mdrmd\r\rx_pacf5\r\rdiff1x_pacf5\r\rdiff2x_pacf5\r\rpred_features_localsimple_mean1\r\rpred_features_localsimple_lfitac\r\rpred_features_sampen_first\r\rsampen_first_sampen_first\r\rsampenc\r\rscal_features_fluctanal_prop_r1\r\rspreadrandomlocal_meantaul\r\rstability\r\rstation_features_std1st_der\r\rstation_features_spreadrandomlocal_meantaul_50\r\rstation_features_spreadrandomlocal_meantaul_ac2\r\rstd1st_der_std1st_der\r\rnperiods\r\rseasonal_period\r\rtrend\r\rspike\r\rlinearity\r\rcurvature\r\re_acf1\r\re_acf10\r\rtrev_num\r\rtsfeatures_frequency\r\rtsfeatures_nperiods\r\rtsfeatures_seasonal_period\r\rtsfeatures_trend\r\rtsfeatures_spike\r\rtsfeatures_linearity\r\rtsfeatures_curvature\r\rtsfeatures_e_acf1\r\rtsfeatures_e_acf10\r\rtsfeatures_entropy\r\rtsfeatures_x_acf1\r\rtsfeatures_x_acf10\r\rtsfeatures_diff1_acf1\r\rtsfeatures_diff1_acf10\r\rtsfeatures_diff2_acf1\r\rtsfeatures_diff2_acf10\r\runitroot_kpss\r\runitroot_pp\r\rwalker_propcross\r\r\r\r\r\r1\r\r1\r\r0\r\r-0.0675275\r\r0.0097094\r\r0.0526897\r\r-0.5005299\r\r0.3297018\r\r-0.6772403\r\r0.6124739\r\r0.0627825\r\r0.3929961\r\r0.6147860\r\r-0.0675275\r\r1\r\r0.1208750\r\r2.071663\r\r0.5405405\r\r1\r\r1\r\r0.3929961\r\r0.6147860\r\r-0.0675275\r\r1\r\r0.1208750\r\r2.071663\r\r0.5405405\r\r1\r\r1\r\r1.788841\r\r1.408737\r\r1.68\r\r1.43\r\r-0.25\r\r-0.2865385\r\r0.1627907\r\r132\r\r-0.25\r\r-0.2865385\r\r0.3929961\r\r0.9840151\r\r1\r\r3\r\r4\r\r0.1627907\r\r0.0652585\r\r0.0154406\r\r0.0627825\r\r0.0253367\r\r-0.25\r\r0.0013330\r\r0.0013330\r\r0.5000458\r\rNA\r\rNA\r\r1\r\r0.3556536\r\r1.783636\r\r103\r\r1.297736\r\r97\r\r2.819828\r\r46\r\r2.071663\r\r0.0752319\r\r-0.2865385\r\r0.0108653\r\r0.4457792\r\r1.0525222\r\r1\r\r1\r\r1.788841\r\r1.788841\r\r1.788841\r\r0.1627907\r\r1.76\r\r0.0562693\r\r1.408737\r\r1.74\r\r1.36\r\r1.408737\r\r0\r\r1\r\r0.0043052\r\r0.0000261\r\r0.8421403\r\r-0.7069160\r\r0.0052389\r\r0.0588324\r\r0.1208750\r\r1\r\r0\r\r1\r\r0.0043052\r\r0.0000261\r\r0.8421403\r\r-0.7069160\r\r0.0052389\r\r0.0588324\r\r0.9840151\r\r0.0097094\r\r0.0526897\r\r-0.5005299\r\r0.3297018\r\r-0.6772403\r\r0.6124739\r\r0.0993829\r\r-249.7732\r\r0.5405405\r\r\r\r2\r\r2\r\r0\r\r-0.0421577\r\r-0.0075902\r\r0.0387481\r\r-0.5171529\r\r0.3129147\r\r-0.6727897\r\r0.5379301\r\r0.0558032\r\r0.4285714\r\r0.6563707\r\r-0.0421577\r\r1\r\r-0.4765229\r\r2.077581\r\r0.5019305\r\r1\r\r1\r\r0.4285714\r\r0.6563707\r\r-0.0421577\r\r1\r\r-0.4765229\r\r2.077581\r\r0.5019305\r\r1\r\r1\r\r1.780390\r\r1.419266\r\r1.95\r\r1.00\r\r0.50\r\r0.2615385\r\r0.1627907\r\r123\r\r0.50\r\r0.2615385\r\r0.4285714\r\r0.9864332\r\r1\r\r1\r\r4\r\r0.1627907\r\r0.0664358\r\r0.0657859\r\r0.0558032\r\r0.0554355\r\r0.50\r\r0.0001000\r\r0.0001000\r\r0.5000458\r\rNA\r\rNA\r\r1\r\r0.4636768\r\r1.733008\r\r247\r\r1.311861\r\r141\r\r2.625772\r\r221\r\r2.077581\r\r0.0273335\r\r0.2615385\r\r0.0256032\r\r0.4606850\r\r1.0171377\r\r1\r\r1\r\r1.780390\r\r1.780390\r\r1.780390\r\r0.1627907\r\r2.05\r\r0.0892206\r\r1.419266\r\r2.12\r\r1.00\r\r1.419266\r\r0\r\r1\r\r0.0177460\r\r0.0000399\r\r0.9249561\r\r0.7665407\r\r-0.0218053\r\r0.0411861\r\r-0.4765229\r\r1\r\r0\r\r1\r\r0.0177460\r\r0.0000399\r\r0.9249561\r\r0.7665407\r\r-0.0218053\r\r0.0411861\r\r0.9864332\r\r-0.0075902\r\r0.0387481\r\r-0.5171529\r\r0.3129147\r\r-0.6727897\r\r0.5379301\r\r0.0414599\r\r-256.0485\r\r0.5019305\r\r\r\r3\r\r3\r\r1\r\r0.0099598\r\r-0.0405929\r\r0.0449036\r\r-0.5026683\r\r0.3471209\r\r-0.6718885\r\r0.6109006\r\r0.0325470\r\r0.4671815\r\r0.7065637\r\r0.0099598\r\r1\r\r-0.8755173\r\r2.069233\r\r0.5328185\r\r1\r\r0\r\r0.4671815\r\r0.7065637\r\r0.0099598\r\r1\r\r-0.8755173\r\r2.069233\r\r0.5328185\r\r1\r\r1\r\r1.706841\r\r1.443315\r\r1.38\r\r1.00\r\r-0.50\r\r-0.2538462\r\r0.1395349\r\r132\r\r-0.50\r\r-0.2538462\r\r0.4671815\r\r0.9868568\r\r1\r\r1\r\r6\r\r0.1395349\r\r0.0388513\r\r0.0039162\r\r0.0325470\r\r0.0041902\r\r-0.50\r\r0.0014557\r\r0.0014557\r\r0.5000458\r\rNA\r\rNA\r\r1\r\r1.2670493\r\r7.746711\r\r95\r\r1.403784\r\r87\r\r5.235499\r\r84\r\r2.069233\r\r0.2436499\r\r-0.2538462\r\r0.0223069\r\r0.5356408\r\r0.9954919\r\r1\r\r1\r\r1.706841\r\r1.706841\r\r1.706841\r\r0.1395349\r\r1.42\r\r0.0716499\r\r1.443315\r\r1.42\r\r1.00\r\r1.443315\r\r0\r\r1\r\r0.0141368\r\r0.0000929\r\r0.8414359\r\r-0.0259311\r\r-0.0547484\r\r0.0492987\r\r-0.8755173\r\r1\r\r0\r\r1\r\r0.0141368\r\r0.0000929\r\r0.8414359\r\r-0.0259311\r\r-0.0547484\r\r0.0492987\r\r0.9868568\r\r-0.0405929\r\r0.0449036\r\r-0.5026683\r\r0.3471209\r\r-0.6718885\r\r0.6109006\r\r0.0775698\r\r-258.1295\r\r0.5328185\r\r\r\r4\r\r4\r\r0\r\r-0.0428748\r\r-0.0443619\r\r0.0615867\r\r-0.4571442\r\r0.3184053\r\r-0.5906478\r\r0.4361178\r\r0.1275576\r\r0.4555985\r\r0.7027027\r\r-0.0428748\r\r2\r\r-0.9943808\r\r2.068744\r\r0.4903475\r\r0\r\r0\r\r0.4555985\r\r0.7027027\r\r-0.0428748\r\r2\r\r-0.9943808\r\r2.068744\r\r0.4903475\r\r1\r\r1\r\r1.660825\r\r1.445807\r\r1.24\r\r1.00\r\r0.25\r\r0.0153846\r\r0.1395349\r\r127\r\r0.25\r\r0.0153846\r\r0.4555985\r\r0.9790521\r\r2\r\r1\r\r7\r\r0.1395349\r\r0.0694296\r\r0.0112709\r\r0.0579144\r\r0.0123884\r\r0.25\r\r0.0480021\r\r0.0001000\r\r0.5000458\r\rNA\r\rNA\r\r1\r\r1.0068624\r\r4.994753\r\r132\r\r1.258758\r\r173\r\r5.886911\r\r156\r\r2.068744\r\r0.3840091\r\r0.0153846\r\r0.0503205\r\r0.5402603\r\r1.1070217\r\r1\r\r1\r\r1.660825\r\r1.660825\r\r1.660825\r\r0.1395349\r\r1.10\r\r0.1065111\r\r1.445807\r\r1.14\r\r1.00\r\r1.445807\r\r0\r\r1\r\r0.0283540\r\r0.0000482\r\r-1.2297854\r\r0.2921899\r\r-0.0728152\r\r0.0752389\r\r-0.9943808\r\r1\r\r0\r\r1\r\r0.0283540\r\r0.0000482\r\r-1.2297854\r\r0.2921899\r\r-0.0728152\r\r0.0752389\r\r0.9790521\r\r-0.0443619\r\r0.0615867\r\r-0.4571442\r\r0.3184053\r\r-0.5906478\r\r0.4361178\r\r0.2129633\r\r-262.0781\r\r0.4903475\r\r\r\r5\r\r5\r\r0\r\r0.0259312\r\r-0.2447835\r\r0.1469130\r\r-0.5810073\r\r0.4796508\r\r-0.6799229\r\r0.6232529\r\r0.2014861\r\r0.6563707\r\r0.7992278\r\r0.0259312\r\r1\r\r-0.7167079\r\r2.059764\r\r0.5289575\r\r1\r\r0\r\r0.6563707\r\r0.7992278\r\r0.0259312\r\r1\r\r-0.7167079\r\r2.059764\r\r0.5289575\r\r1\r\r1\r\r1.347789\r\r1.580825\r\r1.08\r\r0.98\r\r-0.50\r\r0.7961538\r\r0.1627907\r\r133\r\r-0.50\r\r0.7961538\r\r0.6563707\r\r0.9723766\r\r1\r\r1\r\r9\r\r0.1627907\r\r0.2718058\r\r0.2229375\r\r0.1765130\r\r0.1330761\r\r-0.50\r\r0.0001000\r\r0.0001000\r\r0.5000458\r\rNA\r\rNA\r\r1\r\r2.8846415\r\r11.474426\r\r80\r\r1.772392\r\r229\r\r8.468236\r\r236\r\r2.059764\r\r0.2143595\r\r0.7961538\r\r0.1008392\r\r0.7538746\r\r1.2926800\r\r1\r\r1\r\r1.347789\r\r1.347789\r\r1.347789\r\r0.1627907\r\r1.08\r\r0.0797924\r\r1.580825\r\r1.06\r\r0.98\r\r1.580825\r\r0\r\r1\r\r0.0121072\r\r0.0001568\r\r-0.5488436\r\r0.2255538\r\r-0.2599764\r\r0.1558209\r\r-0.7167079\r\r1\r\r0\r\r1\r\r0.0121072\r\r0.0001568\r\r-0.5488436\r\r0.2255538\r\r-0.2599764\r\r0.1558209\r\r0.9723766\r\r-0.2447835\r\r0.1469130\r\r-0.5810073\r\r0.4796508\r\r-0.6799229\r\r0.6232529\r\r0.1506344\r\r-323.5672\r\r0.5289575\r\r\r\r6\r\r6\r\r0\r\r-0.0761166\r\r0.0468556\r\r0.0858348\r\r-0.5253131\r\r0.3438031\r\r-0.6901570\r\r0.6130725\r\r0.0432628\r\r0.4352941\r\r0.6627451\r\r-0.0761166\r\r1\r\r0.0898648\r\r2.068914\r\r0.5250965\r\r1\r\r1\r\r0.4352941\r\r0.6627451\r\r-0.0761166\r\r1\r\r0.0898648\r\r2.068914\r\r0.5250965\r\r1\r\r1\r\r1.751575\r\r1.381854\r\r2.69\r\r1.71\r\r-0.25\r\r-0.0846154\r\r0.3488372\r\r134\r\r-0.25\r\r-0.0846154\r\r0.4352941\r\r0.9806218\r\r1\r\r5\r\r5\r\r0.3488372\r\r0.0500806\r\r0.0502154\r\r0.0627968\r\r0.0620877\r\r-0.25\r\r0.0286244\r\r0.0001000\r\r0.5188805\r\rNA\r\rNA\r\r1\r\r0.2189481\r\r3.145763\r\r141\r\r1.447883\r\r80\r\r2.077936\r\r84\r\r2.068914\r\r0.0137733\r\r-0.0846154\r\r0.0172321\r\r0.4345976\r\r1.0881798\r\r1\r\r1\r\r1.751575\r\r1.751575\r\r1.751575\r\r0.3488372\r\r2.61\r\r0.1479673\r\r1.381854\r\r2.63\r\r1.81\r\r1.381854\r\r0\r\r1\r\r0.0077481\r\r0.0000329\r\r-0.5473782\r\r0.4505809\r\r0.0410068\r\r0.0873468\r\r0.0898648\r\r1\r\r0\r\r1\r\r0.0077481\r\r0.0000329\r\r-0.5473782\r\r0.4505809\r\r0.0410068\r\r0.0873468\r\r0.9806218\r\r0.0468556\r\r0.0858348\r\r-0.5253131\r\r0.3438031\r\r-0.6901570\r\r0.6130725\r\r0.0259414\r\r-262.3484\r\r0.5250965\r\r\r\r\r## [1] 12000 109\rThe dimensions of the data as still 12,000 with 109 features (created from the tsfeatures package). That is we have 6,000 synthetic and 6,000 real financial time series (12,000 * ~260 = 3,120,000 but we applied tsfeatures to collapse the ~260 down to 1 single observation for each asset)\nI collapsed this problem down from a time series prediction problem to a pure classification problem. I split the data between training and validation set next… I also split the data into X_train, Y_train… etc.\nI split the df/Stats data set into a train set of 75% of the observations and an in-sample test data set of 25% of the observations.\n######################################################################\r################# Train and XGBoost model on the TS Features #########\r#Stats \u0026lt;- Stats %\u0026gt;%\r# select_if(~sum(!is.na(.)) \u0026gt; 0)\r# Split the training set up between train and a small validation set\rsmp_size \u0026lt;- floor(0.75 * nrow(Stats))\r#set.seed(123)\rtrain_ind \u0026lt;- sample(seq_len(nrow(Stats)), size = smp_size)\rtrain \u0026lt;- Stats[train_ind, ]\rval \u0026lt;- Stats[-train_ind, ]\r# We have 106 time series features for the model to learn from.\rx_train \u0026lt;- train %\u0026gt;%\rungroup() %\u0026gt;%\rselect(-class, -row_id, -X) %\u0026gt;%\ras.matrix()\rx_val \u0026lt;- val %\u0026gt;%\rungroup() %\u0026gt;%\rselect(-class, -row_id, -X) %\u0026gt;%\ras.matrix()\ry_train \u0026lt;- train %\u0026gt;%\rungroup() %\u0026gt;%\rpull(class)\ry_val \u0026lt;- val %\u0026gt;%\rungroup() %\u0026gt;%\rpull(class)\r\rHow the training X (input variables) data looks:\rTable 5: How the X_train data look\r\r\r\r\rac_9_ac_9\r\racf_features_x_acf1\r\racf_features_x_acf10\r\racf_features_diff1_acf1\r\racf_features_diff1_acf10\r\racf_features_diff2_acf1\r\racf_features_diff2_acf10\r\rARCH.LM\r\rautocorr_features_embed2_incircle_1\r\rautocorr_features_embed2_incircle_2\r\rautocorr_features_ac_9\r\rautocorr_features_firstmin_ac\r\rautocorr_features_trev_num\r\rautocorr_features_motiftwo_entro3\r\rautocorr_features_walker_propcross\r\rbinarize_mean_binarize_mean\r\rbinarize_mean_NA\r\rcompengine_embed2_incircle_1\r\rcompengine_embed2_incircle_2\r\rcompengine_ac_9\r\rcompengine_firstmin_ac\r\rcompengine_trev_num\r\rcompengine_motiftwo_entro3\r\rcompengine_walker_propcross\r\rcompengine_localsimple_mean1\r\rcompengine_localsimple_lfitac\r\rcompengine_sampen_first\r\rcompengine_std1st_der\r\rcompengine_spreadrandomlocal_meantaul_50\r\rcompengine_spreadrandomlocal_meantaul_ac2\r\rcompengine_histogram_mode_10\r\rcompengine_outlierinclude_mdrmd\r\rcompengine_fluctanal_prop_r1\r\rcrossing_points\r\rdist_features_histogram_mode_10\r\rdist_features_outlierinclude_mdrmd\r\rembed2_incircle\r\rentropy\r\rfirstmin_ac\r\rfirstzero_ac\r\rflat_spots\r\rfluctanal_prop_r1_fluctanal_prop_r1\r\rarch_acf\r\rgarch_acf\r\rarch_r2\r\rgarch_r2\r\rhistogram_mode\r\ralpha\r\rbeta\r\rhurst\r\rhw_parameters_hw_parameters\r\rhw_parameters_NA\r\rlocalsimple_taures\r\rlumpiness\r\rmax_kl_shift\r\rtime_kl_shift\r\rmax_level_shift\r\rtime_level_shift\r\rmax_var_shift\r\rtime_var_shift\r\rmotiftwo_entro3\r\rnonlinearity\r\routlierinclude_mdrmd\r\rx_pacf5\r\rdiff1x_pacf5\r\rdiff2x_pacf5\r\rpred_features_localsimple_mean1\r\rpred_features_localsimple_lfitac\r\rpred_features_sampen_first\r\rsampen_first_sampen_first\r\rsampenc\r\rscal_features_fluctanal_prop_r1\r\rspreadrandomlocal_meantaul\r\rstability\r\rstation_features_std1st_der\r\rstation_features_spreadrandomlocal_meantaul_50\r\rstation_features_spreadrandomlocal_meantaul_ac2\r\rstd1st_der_std1st_der\r\rnperiods\r\rseasonal_period\r\rtrend\r\rspike\r\rlinearity\r\rcurvature\r\re_acf1\r\re_acf10\r\rtrev_num\r\rtsfeatures_frequency\r\rtsfeatures_nperiods\r\rtsfeatures_seasonal_period\r\rtsfeatures_trend\r\rtsfeatures_spike\r\rtsfeatures_linearity\r\rtsfeatures_curvature\r\rtsfeatures_e_acf1\r\rtsfeatures_e_acf10\r\rtsfeatures_entropy\r\rtsfeatures_x_acf1\r\rtsfeatures_x_acf10\r\rtsfeatures_diff1_acf1\r\rtsfeatures_diff1_acf10\r\rtsfeatures_diff2_acf1\r\rtsfeatures_diff2_acf10\r\runitroot_kpss\r\runitroot_pp\r\rwalker_propcross\r\r\r\r\r\r6801\r\r0.0498492\r\r-0.0642025\r\r0.0542648\r\r-0.4423482\r\r0.2575236\r\r-0.5981303\r\r0.4149592\r\r0.0271444\r\r0.4710425\r\r0.7181467\r\r0.0498492\r\r2\r\r0.8754566\r\r2.057333\r\r0.5598456\r\r0\r\r1\r\r0.4710425\r\r0.7181467\r\r0.0498492\r\r2\r\r0.8754566\r\r2.057333\r\r0.5598456\r\r1\r\r1\r\r1.704503\r\r1.460466\r\r1.33\r\r1.00\r\r-0.50\r\r0.1115385\r\r0.8604651\r\r139\r\r-0.50\r\r0.1115385\r\r0.4710425\r\r0.9888208\r\r2\r\r1\r\r3\r\r0.8604651\r\r0.0332257\r\r0.0244434\r\r0.0370423\r\r0.0287773\r\r-0.50\r\r0.0001000\r\r0.0001000\r\r0.5000458\r\rNA\r\rNA\r\r1\r\r0.7769640\r\r3.827223\r\r209\r\r1.027671\r\r131\r\r3.254518\r\r195\r\r2.057333\r\r0.0695918\r\r0.1115385\r\r0.0474059\r\r0.5669070\r\r1.0663179\r\r1\r\r1\r\r1.704503\r\r1.704503\r\r1.704503\r\r0.8604651\r\r1.41\r\r0.0639649\r\r1.460466\r\r1.42\r\r1.00\r\r1.460466\r\r0\r\r1\r\r0.0069481\r\r0.0000643\r\r-0.8628963\r\r0.2636951\r\r-0.0719026\r\r0.0587799\r\r0.8754566\r\r1\r\r0\r\r1\r\r0.0069481\r\r0.0000643\r\r-0.8628963\r\r0.2636951\r\r-0.0719026\r\r0.0587799\r\r0.9888208\r\r-0.0642025\r\r0.0542648\r\r-0.4423482\r\r0.2575236\r\r-0.5981303\r\r0.4149592\r\r0.1777957\r\r-246.9618\r\r0.5598456\r\r\r\r4209\r\r-0.0037257\r\r-0.0166400\r\r0.0302609\r\r-0.5444182\r\r0.3391695\r\r-0.7025401\r\r0.5898760\r\r0.0369855\r\r0.3976834\r\r0.6409266\r\r-0.0037257\r\r1\r\r0.0772589\r\r2.065480\r\r0.5598456\r\r1\r\r1\r\r0.3976834\r\r0.6409266\r\r-0.0037257\r\r1\r\r0.0772589\r\r2.065480\r\r0.5598456\r\r1\r\r1\r\r1.752028\r\r1.427591\r\r1.39\r\r1.00\r\r-0.25\r\r-0.1000000\r\r0.4651163\r\r137\r\r-0.25\r\r-0.1000000\r\r0.3976834\r\r0.9866480\r\r1\r\r1\r\r4\r\r0.4651163\r\r0.0328564\r\r0.0286941\r\r0.0369855\r\r0.0347972\r\r-0.25\r\r0.0008843\r\r0.0008843\r\r0.5000458\r\rNA\r\rNA\r\r1\r\r0.2267605\r\r3.549229\r\r215\r\r1.390319\r\r3\r\r2.017745\r\r143\r\r2.065480\r\r0.0236440\r\r-0.1000000\r\r0.0060988\r\r0.4859730\r\r1.0685267\r\r1\r\r1\r\r1.752028\r\r1.752028\r\r1.752028\r\r0.4651163\r\r1.49\r\r0.0831999\r\r1.427591\r\r1.53\r\r1.00\r\r1.427591\r\r0\r\r1\r\r0.0431696\r\r0.0000288\r\r-0.6356332\r\r1.0362897\r\r-0.0608160\r\r0.0358936\r\r0.0772589\r\r1\r\r0\r\r1\r\r0.0431696\r\r0.0000288\r\r-0.6356332\r\r1.0362897\r\r-0.0608160\r\r0.0358936\r\r0.9866480\r\r-0.0166400\r\r0.0302609\r\r-0.5444182\r\r0.3391695\r\r-0.7025401\r\r0.5898760\r\r0.0372919\r\r-268.4757\r\r0.5598456\r\r\r\r11168\r\r0.0236704\r\r-0.0269749\r\r0.0299079\r\r-0.4943006\r\r0.2640054\r\r-0.6626027\r\r0.4906038\r\r0.1265569\r\r0.4401544\r\r0.6640927\r\r0.0236704\r\r2\r\r-0.4569401\r\r2.075666\r\r0.4633205\r\r1\r\r1\r\r0.4401544\r\r0.6640927\r\r0.0236704\r\r2\r\r-0.4569401\r\r2.075666\r\r0.4633205\r\r1\r\r1\r\r1.709466\r\r1.431144\r\r1.52\r\r1.00\r\r0.25\r\r-0.0961538\r\r0.1627907\r\r122\r\r0.25\r\r-0.0961538\r\r0.4401544\r\r0.9882937\r\r2\r\r1\r\r4\r\r0.1627907\r\r0.1453674\r\r0.1490540\r\r0.1265569\r\r0.1247021\r\r0.25\r\r0.0411075\r\r0.0001000\r\r0.5000458\r\rNA\r\rNA\r\r1\r\r0.3863291\r\r2.834691\r\r227\r\r1.096209\r\r123\r\r2.760158\r\r197\r\r2.075666\r\r0.1218026\r\r-0.0961538\r\r0.0088598\r\r0.4643608\r\r1.0505751\r\r1\r\r1\r\r1.709466\r\r1.709466\r\r1.709466\r\r0.1627907\r\r1.61\r\r0.0691848\r\r1.431144\r\r1.50\r\r1.00\r\r1.431144\r\r0\r\r1\r\r0.0134781\r\r0.0000342\r\r-0.6468298\r\r-1.1770328\r\r-0.0419291\r\r0.0376999\r\r-0.4569401\r\r1\r\r0\r\r1\r\r0.0134781\r\r0.0000342\r\r-0.6468298\r\r-1.1770328\r\r-0.0419291\r\r0.0376999\r\r0.9882937\r\r-0.0269749\r\r0.0299079\r\r-0.4943006\r\r0.2640054\r\r-0.6626027\r\r0.4906038\r\r0.1743418\r\r-260.0758\r\r0.4633205\r\r\r\r5794\r\r-0.0007087\r\r0.1194830\r\r0.0616705\r\r-0.4062897\r\r0.2206195\r\r-0.6016700\r\r0.4137913\r\r0.1556551\r\r0.4806202\r\r0.6782946\r\r-0.0007087\r\r2\r\r-0.5797405\r\r2.066637\r\r0.4787645\r\r1\r\r0\r\r0.4806202\r\r0.6782946\r\r-0.0007087\r\r2\r\r-0.5797405\r\r2.066637\r\r0.4787645\r\r1\r\r1\r\r1.558307\r\r1.328565\r\r2.03\r\r1.18\r\r-0.25\r\r-0.3000000\r\r0.2325581\r\r120\r\r-0.25\r\r-0.3000000\r\r0.4806202\r\r0.9815963\r\r2\r\r2\r\r5\r\r0.2325581\r\r0.2198692\r\r0.0941053\r\r0.1406280\r\r0.0756639\r\r-0.25\r\r0.0125856\r\r0.0001000\r\r0.5477543\r\rNA\r\rNA\r\r1\r\r0.7772726\r\r8.411092\r\r48\r\r1.573682\r\r146\r\r3.802986\r\r149\r\r2.066637\r\r0.1381103\r\r-0.3000000\r\r0.0193037\r\r0.3959500\r\r0.9255264\r\r1\r\r1\r\r1.558307\r\r1.558307\r\r1.558307\r\r0.2325581\r\r1.98\r\r0.1331827\r\r1.328565\r\r2.01\r\r1.27\r\r1.328565\r\r0\r\r1\r\r0.0139233\r\r0.0000358\r\r-0.8988748\r\r0.9389128\r\r0.1079346\r\r0.0661260\r\r-0.5797405\r\r1\r\r0\r\r1\r\r0.0139233\r\r0.0000358\r\r-0.8988748\r\r0.9389128\r\r0.1079346\r\r0.0661260\r\r0.9815963\r\r0.1194830\r\r0.0616705\r\r-0.4062897\r\r0.2206195\r\r-0.6016700\r\r0.4137913\r\r0.1182423\r\r-224.0670\r\r0.4787645\r\r\r\r8693\r\r-0.0814496\r\r-0.0984498\r\r0.1142883\r\r-0.4688008\r\r0.3181153\r\r-0.6166136\r\r0.4555893\r\r0.1508792\r\r0.4054054\r\r0.6602317\r\r-0.0814496\r\r2\r\r0.3988370\r\r2.060571\r\r0.5250965\r\r0\r\r1\r\r0.4054054\r\r0.6602317\r\r-0.0814496\r\r2\r\r0.3988370\r\r2.060571\r\r0.5250965\r\r1\r\r1\r\r1.651243\r\r1.484233\r\r1.19\r\r1.00\r\r-0.50\r\r-0.0576923\r\r0.3488372\r\r136\r\r-0.50\r\r-0.0576923\r\r0.4054054\r\r0.9745764\r\r2\r\r1\r\r6\r\r0.3488372\r\r0.0946062\r\r0.0937635\r\r0.1057152\r\r0.1052409\r\r-0.50\r\r0.0269522\r\r0.0001000\r\r0.5000458\r\rNA\r\rNA\r\r1\r\r0.5495742\r\r7.853783\r\r195\r\r1.039641\r\r191\r\r4.458772\r\r187\r\r2.060571\r\r0.1164590\r\r-0.0576923\r\r0.0467339\r\r0.5896074\r\r1.1095330\r\r1\r\r1\r\r1.651243\r\r1.651243\r\r1.651243\r\r0.3488372\r\r1.24\r\r0.0998210\r\r1.484233\r\r1.35\r\r1.00\r\r1.484233\r\r0\r\r1\r\r0.0033231\r\r0.0000574\r\r0.1887497\r\r0.4564879\r\r-0.1022983\r\r0.1171558\r\r0.3988370\r\r1\r\r0\r\r1\r\r0.0033231\r\r0.0000574\r\r0.1887497\r\r0.4564879\r\r-0.1022983\r\r0.1171558\r\r0.9745764\r\r-0.0984498\r\r0.1142883\r\r-0.4688008\r\r0.3181153\r\r-0.6166136\r\r0.4555893\r\r0.0391658\r\r-262.9010\r\r0.5250965\r\r\r\r1073\r\r-0.1253873\r\r0.1511912\r\r0.0608605\r\r-0.3832523\r\r0.2048003\r\r-0.5832067\r\r0.3861283\r\r0.0876692\r\r0.4031008\r\r0.6356589\r\r-0.1253873\r\r2\r\r0.2463431\r\r2.061698\r\r0.4594595\r\r1\r\r1\r\r0.4031008\r\r0.6356589\r\r-0.1253873\r\r2\r\r0.2463431\r\r2.061698\r\r0.4594595\r\r1\r\r1\r\r1.763381\r\r1.304792\r\r2.44\r\r1.13\r\r-0.25\r\r0.1230769\r\r0.1395349\r\r121\r\r-0.25\r\r0.1230769\r\r0.4031008\r\r0.9867903\r\r2\r\r2\r\r4\r\r0.1395349\r\r0.0779468\r\r0.0618625\r\r0.0695878\r\r0.0601294\r\r-0.25\r\r0.0778294\r\r0.0001000\r\r0.5663347\r\rNA\r\rNA\r\r1\r\r0.3151884\r\r7.528904\r\r185\r\r2.069230\r\r177\r\r2.340804\r\r169\r\r2.061698\r\r0.0279574\r\r0.1230769\r\r0.0310540\r\r0.3527793\r\r0.8978003\r\r1\r\r1\r\r1.763381\r\r1.763381\r\r1.763381\r\r0.1395349\r\r2.45\r\r0.0816322\r\r1.304792\r\r2.35\r\r1.23\r\r1.304792\r\r0\r\r1\r\r0.0213244\r\r0.0000306\r\r-0.5577693\r\r0.6111726\r\r0.1329904\r\r0.0758345\r\r0.2463431\r\r1\r\r0\r\r1\r\r0.0213244\r\r0.0000306\r\r-0.5577693\r\r0.6111726\r\r0.1329904\r\r0.0758345\r\r0.9867903\r\r0.1511912\r\r0.0608605\r\r-0.3832523\r\r0.2048003\r\r-0.5832067\r\r0.3861283\r\r0.0849681\r\r-208.4546\r\r0.4594595\r\r\r\r\r\rHow the training Y (predictor variable) data looks:\rTable 6: Y_train\r\r\r\r.\r\r\r\r\r\r1\r\r\r\r0\r\r\r\r1\r\r\r\r0\r\r\r\r0\r\r\r\r1\r\r\r\r\rI set the data up for an XGBoost model:\nI create a grid search in order search over a parameter space to locate the optimal parameters for the data set. It needs a little more work but it’s a pretty good starting point. I can just add code to the expand.grid function. That is, say I want to increase the depth of the tree I can add to max_depth = c(5, 8, 14) more parameters such as max_depth = c(5, 8, 14, 1, 2, 3, 4, 6, 7). Note Adding parameters to the grid search increases computational time exponentially. Every parameter you add a value to, the model has to search all possible combinations associated with that parameter. That is, adding an eta = c(0.1) and max_depth = c(5) would give me the optimal parameter for one iteration/loop through the training model, i.e. an eta = c(0.1) mapped onto a max_depth = c(5). Adding an additional value to the eta = c(0.1, 0.3) and max_depth = c(5) would map eta = 0.1 onto max_depth = 5 and eta = 0.3 on to max_depth = 5. If I add another value such that eta = c(0.1, 0.3, 0.4) then all 3 of these values will be mapped to max_depth = c(5). Adding values to the max_depth = c(5) parameter would add an extra layer of complexity to the grid search. This added into the fact that there are many parameters to optimize in an XGBoost model can drastically increase computational complexity. Thus, understanding the statistics behind the models in Machine Learning is important when trying to avoid getting stuck in a local minimum (which any greedy algorithm using gradient descent optimisation can do: greedy algorithm).\n######################################################################\r################# XGBoost Grid Search to locate Optimal Parameters ###\r##############################################################################################################################\r# NOTE: This section was taken from the first chapter of my PhD where I needed to search over a parameter space to locate the\r# most optimal parameters - I have just adapted it for this problem of Time Series Classification.\r# Its simple enough to add parameters and different values - I just optimise a few important parameters from domain knowledge\r# of the XGBoost model for this task, i.e depth and eta are quite important in gradient boosting.\r# 1) I create a \u0026quot;grid\u0026quot; with different parameter values or combinations of parameter values\r# 2) I apply cross validation over the parameter space to fine the most optimal values for the XGBoost model.\r# 3) I print the model parameters which give the best train / (in-sample test) results in a data table.\r##############################################################################################################################\r# Grid Search Parameters:\r# 1)\rsearchGridSubCol \u0026lt;- expand.grid(subsample = c(1), #Range (0,1], default = 1, set to 0.5 will prevent overfitting\rcolsample_bytree = c(1), #Range (0,1], default = 1\rmax_depth = c(5, 8, 14), #Range (0, inf], default = 6\rmin_child = c(1), #Range (0, inf], default = 1\reta = c(0.1, 0.05, 0.3), #Range (0,1], default = 0.3\rgamma = c(0), #Range (0, inf], default = 0\rlambda = c(1), #Default = 1, L2 regularisation on weights, higher the more conservative the model\ralpha = c(0), #Default = 0, L1 regularisation on weights, higher the more conservative the model\rmax_delta_step = c(0), #Range (0, inf], default = 0 (Helpful for logisitc regression when class is extremely imbalanced, set to value 1-10 may help control the update)\rcolsample_bylevel = c(1) #Range (0,1], default = 1\r)\rntrees = 200\rnfold \u0026lt;- 10 # I use nfold = 10 which is probably too many folds, 5 should be sufficient.\rwatchlist \u0026lt;- list(train = dtrain, test = dval)\r# 2)\rsystem.time(\rAUCHyperparameters \u0026lt;- apply(searchGridSubCol, 1, function(parameterList){\r#Extract Parameters to test\rcurrentSubsampleRate \u0026lt;- parameterList[[\u0026quot;sub_sample\u0026quot;]]\rcurrentColsampleRate \u0026lt;- parameterList[[\u0026quot;colsample_bytree\u0026quot;]]\rcurrentDepth \u0026lt;- parameterList[[\u0026quot;max_depth\u0026quot;]]\rcurrentEta \u0026lt;- parameterList[[\u0026quot;eta\u0026quot;]]\rcurrentMinChild \u0026lt;- parameterList[[\u0026quot;min_child\u0026quot;]]\rgamma \u0026lt;- parameterList[[\u0026quot;gamma\u0026quot;]]\rlambda \u0026lt;- parameterList[[\u0026quot;lambda\u0026quot;]]\ralpha \u0026lt;- parameterList[[\u0026quot;alpha\u0026quot;]]\rmax_delta_step \u0026lt;- parameterList[[\u0026quot;max_delta_step\u0026quot;]]\rcolsample_bylevel \u0026lt;- parameterList[[\u0026quot;colsample_bylevel\u0026quot;]]\rxgboostModelCV \u0026lt;- xgb.cv(data = dtrain,\rnrounds = ntrees,\rnfold = nfold,\rshowsd = TRUE,\rmetrics = c(\u0026quot;auc\u0026quot;, \u0026quot;logloss\u0026quot;, \u0026quot;error\u0026quot;),\rverbose = TRUE,\r\u0026quot;eval_metric\u0026quot; = c(\u0026quot;auc\u0026quot;, \u0026quot;logloss\u0026quot;, \u0026quot;error\u0026quot;),\r\u0026quot;objective\u0026quot; = \u0026quot;binary:logistic\u0026quot;, #Outputs a probability \u0026quot;binary:logitraw\u0026quot; - outputs score before logistic transformation\r\u0026quot;max.depth\u0026quot; = currentDepth,\r\u0026quot;eta\u0026quot; = currentEta,\r\u0026quot;gamma\u0026quot; = gamma,\r\u0026quot;lambda\u0026quot; = lambda,\r\u0026quot;alpha\u0026quot; = alpha,\r\u0026quot;subsample\u0026quot; = currentSubsampleRate,\r\u0026quot;colsample_bytree\u0026quot; = currentColsampleRate,\rprint_every_n = 50, # print ever 50 trees to reduce the outputs printed.\r\u0026quot;min_child_weight\u0026quot; = currentMinChild,\rbooster = \u0026quot;gbtree\u0026quot;, #booster = \u0026quot;dart\u0026quot; #using dart can help improve accuracy.\rearly_stopping_rounds = 10,\rwatchlist = watchlist,\rseed = 1234)\rxvalidationScores \u0026lt;\u0026lt;- as.data.frame(xgboostModelCV$evaluation_log)\rtrain_auc_mean \u0026lt;- tail(xvalidationScores$train_auc_mean, 1)\rtest_auc_mean \u0026lt;- tail(xvalidationScores$test_auc_mean, 1)\rtrain_logloss_mean \u0026lt;- tail(xvalidationScores$train_logloss_mean, 1)\rtest_logloss_mean \u0026lt;- tail(xvalidationScores$test_logloss_mean, 1)\rtrain_error_mean \u0026lt;- tail(xvalidationScores$train_error_mean, 1)\rtest_error_mean \u0026lt;- tail(xvalidationScores$test_error_mean, 1)\routput \u0026lt;- return(c(train_auc_mean, test_auc_mean, train_logloss_mean, test_logloss_mean, train_error_mean, test_error_mean, xvalidationScores, currentSubsampleRate, currentColsampleRate, currentDepth, currentEta, gamma, lambda, alpha, max_delta_step, colsample_bylevel, currentMinChild))\rhypemeans \u0026lt;- which.max(AUCHyperparameters[[1]]$test_auc_mean)\routput2 \u0026lt;- return(hypemeans)\r}))\rThe output of the grid search can be set into a nice data frame using the following code. However I did not save this output to file and therefore cannot read it in. You can view the output on the original Jupyter Notebook In [49] here\n# 3)\routput \u0026lt;- as.data.frame(t(sapply(AUCHyperparameters, \u0026#39;[\u0026#39;, c(1:6, 20:29))))\rvarnames \u0026lt;- c(\u0026quot;TrainAUC\u0026quot;, \u0026quot;TestAUC\u0026quot;, \u0026quot;TrainLogloss\u0026quot;, \u0026quot;TestLogloss\u0026quot;, \u0026quot;TrainError\u0026quot;, \u0026quot;TestError\u0026quot;, \u0026quot;SubSampRate\u0026quot;, \u0026quot;ColSampRate\u0026quot;, \u0026quot;Depth\u0026quot;, \u0026quot;eta\u0026quot;, \u0026quot;gamma\u0026quot;, \u0026quot;lambda\u0026quot;, \u0026quot;alpha\u0026quot;, \u0026quot;max_delta_step\u0026quot;, \u0026quot;col_sample_bylevel\u0026quot;, \u0026quot;currentMinChild\u0026quot;)\rcolnames(output) \u0026lt;- varnames\rdata.table(output)\rAccording to the results at the time the optimal parameters were:\n\rntrees = 95,\reta = 0.1,\rmax_depth = 5,\r\rWith the other parameters left to default settings for simplicity.\n\rPlug the optimal parameters into the model.\r#################################################################################\r################# XGBoost Optimal Parameters from Cross Validation ##############\r# This is the final training model where I use the most optimal parameters found over the grid space and plug them in here.\rwatchlist \u0026lt;- list(\u0026quot;train\u0026quot; = dtrain)\rparams \u0026lt;- list(\u0026quot;eta\u0026quot; = 0.1, \u0026quot;max_depth\u0026quot; = 5, \u0026quot;colsample_bytree\u0026quot; = 1, \u0026quot;min_child_weight\u0026quot; = 1, \u0026quot;subsample\u0026quot;= 1,\r\u0026quot;objective\u0026quot;=\u0026quot;binary:logistic\u0026quot;, \u0026quot;gamma\u0026quot; = 1, \u0026quot;lambda\u0026quot; = 1, \u0026quot;alpha\u0026quot; = 0, \u0026quot;max_delta_step\u0026quot; = 0,\r\u0026quot;colsample_bylevel\u0026quot; = 1, \u0026quot;eval_metric\u0026quot;= \u0026quot;auc\u0026quot;,\r\u0026quot;set.seed\u0026quot; = 176)\rnround \u0026lt;- 95\rNow that I have the optimal parameters from the cross validation grid search I can train the final XGBoost model on the whole train_val.csv data set. (Whereas before the optimal parameters were obtained from different folds in the model. More info on k-fold cross validation here)\n# Train the XGBoost model\rxgb.model \u0026lt;- xgb.train(params, dtrain, nround, watchlist)\r## [1] train-auc:0.700790 ## [2] train-auc:0.720114 ## [3] train-auc:0.735281 ## [4] train-auc:0.741159 ## [5] train-auc:0.748016 ## [6] train-auc:0.752070 ## [7] train-auc:0.754637 ## [8] train-auc:0.759151 ## [9] train-auc:0.762538 ## [10] train-auc:0.769652 ## [11] train-auc:0.776582 ## [12] train-auc:0.780015 ## [13] train-auc:0.782065 ## [14] train-auc:0.782815 ## [15] train-auc:0.788966 ## [16] train-auc:0.791026 ## [17] train-auc:0.793545 ## [18] train-auc:0.797363 ## [19] train-auc:0.799069 ## [20] train-auc:0.802015 ## [21] train-auc:0.802583 ## [22] train-auc:0.806938 ## [23] train-auc:0.808239 ## [24] train-auc:0.811255 ## [25] train-auc:0.813142 ## [26] train-auc:0.816767 ## [27] train-auc:0.817697 ## [28] train-auc:0.820239 ## [29] train-auc:0.821589 ## [30] train-auc:0.823343 ## [31] train-auc:0.823939 ## [32] train-auc:0.825701 ## [33] train-auc:0.827316 ## [34] train-auc:0.829365 ## [35] train-auc:0.832646 ## [36] train-auc:0.833297 ## [37] train-auc:0.837006 ## [38] train-auc:0.838857 ## [39] train-auc:0.839923 ## [40] train-auc:0.842968 ## [41] train-auc:0.844877 ## [42] train-auc:0.845940 ## [43] train-auc:0.846583 ## [44] train-auc:0.847330 ## [45] train-auc:0.848292 ## [46] train-auc:0.850215 ## [47] train-auc:0.851641 ## [48] train-auc:0.852670 ## [49] train-auc:0.854706 ## [50] train-auc:0.855752 ## [51] train-auc:0.856772 ## [52] train-auc:0.857806 ## [53] train-auc:0.860245 ## [54] train-auc:0.861337 ## [55] train-auc:0.864178 ## [56] train-auc:0.865290 ## [57] train-auc:0.865808 ## [58] train-auc:0.866386 ## [59] train-auc:0.867751 ## [60] train-auc:0.870032 ## [61] train-auc:0.870500 ## [62] train-auc:0.872442 ## [63] train-auc:0.873391 ## [64] train-auc:0.875188 ## [65] train-auc:0.877767 ## [66] train-auc:0.879196 ## [67] train-auc:0.880079 ## [68] train-auc:0.879969 ## [69] train-auc:0.880638 ## [70] train-auc:0.881389 ## [71] train-auc:0.882066 ## [72] train-auc:0.882515 ## [73] train-auc:0.883854 ## [74] train-auc:0.884654 ## [75] train-auc:0.885104 ## [76] train-auc:0.885922 ## [77] train-auc:0.887100 ## [78] train-auc:0.888646 ## [79] train-auc:0.889833 ## [80] train-auc:0.890387 ## [81] train-auc:0.891815 ## [82] train-auc:0.892281 ## [83] train-auc:0.894417 ## [84] train-auc:0.895006 ## [85] train-auc:0.897079 ## [86] train-auc:0.899254 ## [87] train-auc:0.901114 ## [88] train-auc:0.902460 ## [89] train-auc:0.902939 ## [90] train-auc:0.903763 ## [91] train-auc:0.903792 ## [92] train-auc:0.904433 ## [93] train-auc:0.904986 ## [94] train-auc:0.907339 ## [95] train-auc:0.907761\r# Note: Plot AUC on for the in-sample train / validation scores - this was a note for me at the time of writing this R file - I never did get around to plotting the AUC for the in-sample train / validation scores...\rWhat is nice about tree based models is that we can obtain importance scores from the model and find which variables contributed most to the gain in the model. The original paper explains more about the gain in Algorithm 1 and Algorithm 3 here.\n# We can obtain \u0026quot;feature\u0026quot; importance results from the model.\rxgb.imp \u0026lt;- xgb.importance(model = xgb.model)\rxgb.plot.importance(xgb.imp, top_n = 10)\rThat is, the XGBoost model found that the spike was the most important variable. The spike comes from the stl_features function of the tsfeatures package in R. It computes various measures of trend and seasonality based on Seasonal and Trend Decomposition (STL) and measures the spikiness of a time series based on the variance of the leave-one-out variances of component e_t.\nThe second variable is interesting also and comes from the compengine feature set from the CompEngine database. It groups variables as autocorrelation, prediction, stationarity, distribution and scaling.\nThe ARCH.LM comes from the arch_stat function of the tsfeatures package and is based on the Lagrange Multiplier for Autoregressive Conditional Heteroscedasticity (ARCH) Engle 1982.\nThese are just a few of the variables the XGBoost model found to be the most important. A full overview and more information of the variables used in the model can be found here.\nPredictions using the in-sample test set\rNow that I have trained the model using the optimal parameters I want to see if it scores the same or better based on the cross validation phase using the validation data. I use the dval which is the validation data set from the training split to test the model.\n# I next make the predictions on the \u0026#39;in-sample\u0026#39; held out test set, that is, originally I took the 12,000 training samples\r# and split them between 75% training and 25% \u0026#39;in-sample\u0026#39; testing (9000 training vs 3000 in-sample testing)\r# I plot the probabilities from the model - the \u0026quot;dashed\u0026quot; line is the average predicted probability.\rxgb.pred \u0026lt;- predict(xgb.model, dval, type = \u0026#39;prob\u0026#39;)\rresults \u0026lt;- cbind(y_val, xgb.pred)\rresults %\u0026gt;%\ras.tibble() %\u0026gt;%\rggplot(aes(x = xgb.pred)) + geom_density(color = \u0026quot;darkblue\u0026quot;, fill = \u0026quot;lightblue\u0026quot;) +\rgeom_vline(aes(xintercept = mean(xgb.pred)),\rcolor = \u0026quot;blue\u0026quot;, linetype = \u0026quot;dashed\u0026quot;, size = 1) +\rgeom_histogram(aes(y = ..density..), colour = \u0026quot;black\u0026quot;, fill = \u0026quot;white\u0026quot;, alpha = 0.1, position = \u0026quot;identity\u0026quot;) +\rggtitle(\u0026quot;Predicted probability density plot\u0026quot;) +\rtheme_tq()\r# The average predicted probability sits around 0.48 / 0.49, for simplicity I will just select 0.50 as the cut off threshold.\r# That is, all observations \u0026lt;= 0.50 are assigned a \u0026quot;0\u0026quot; class or \u0026quot;synthetic\u0026quot; data and all observations \u0026gt;= are assigned a \u0026quot;1\u0026quot; or\r# \u0026quot;real\u0026quot; data.\r# Finally I output the confusion matrix on the \u0026#39;in-sample\u0026#39; testing data.\rresults \u0026lt;- results %\u0026gt;%\ras_tibble() %\u0026gt;%\rmutate(pred = case_when(\rxgb.pred \u0026gt; 0.5 ~ 1,\rxgb.pred \u0026lt;= 0.5 ~ 0\r))\rconfusionMatrix(factor(results$pred), factor(results$y_val))\r## Confusion Matrix and Statistics\r## ## Reference\r## Prediction 0 1\r## 0 1041 537\r## 1 465 957\r## ## Accuracy : 0.666 ## 95% CI : (0.6488, 0.6829) ## No Information Rate : 0.502 ## P-Value [Acc \u0026gt; NIR] : \u0026lt;0.0000000000000002\r## ## Kappa : 0.3319 ## ## Mcnemar\u0026#39;s Test P-Value : 0.0249 ## ## Sensitivity : 0.6912 ## Specificity : 0.6406 ## Pos Pred Value : 0.6597 ## Neg Pred Value : 0.6730 ## Prevalence : 0.5020 ## Detection Rate : 0.3470 ## Detection Prevalence : 0.5260 ## Balanced Accuracy : 0.6659 ## ## \u0026#39;Positive\u0026#39; Class : 0 ## \rA balanced accuracy score of 67% isn’t so bad considering I threw the kitchen sink at the classification problem and that this is a time series (stock market) classification problem. By kitchen sink I refer to all the time series functions found in the tsfeatures package.\nFrom here I end the training and validation model. I have obtained the optimal values based on the training and validation data sets and now I want to test it on the unknown data the test.csv data.\nI read in the test data and compute the time series features from the tsfeatures package just as I did with the training data.\n test_final \u0026lt;- read.csv(\u0026quot;C:/Users/Matt/Desktop/Data Science Challenge/test.csv\u0026quot;) %\u0026gt;%\rmutate(row_id = row_number()) %\u0026gt;%\rmelt(., measure.vars = 1:260) %\u0026gt;%\rarrange(row_id)\r\rHow the test features look - (they look similar to the train data set):\rTable 7: Test feature data set\r\r\r\rrow_id\r\rvariable\r\rvalue\r\r\r\r\r\r1\r\rfeature1\r\r0.0331039\r\r\r\r1\r\rfeature2\r\r0.0086225\r\r\r\r1\r\rfeature3\r\r0.0040622\r\r\r\r1\r\rfeature4\r\r0.0082554\r\r\r\r1\r\rfeature5\r\r0.0558741\r\r\r\r1\r\rfeature6\r\r-0.0061266\r\r\r\r\rI call this test_final and not test for no reason what so ever - its the same test.csv from the beginning.\nNext I create the same time series features on the test data set as I do on the training data set. I save this as TSfeatures_test.csv.\nfunctions \u0026lt;- sample(functions, 20)\rtest_final \u0026lt;- test_final %\u0026gt;%\rgroup_by(row_id) %\u0026gt;%\r# nest() %\u0026gt;%\r# sample_n(5) %\u0026gt;%\r# ungroup() %\u0026gt;%\r# unnest() %\u0026gt;%\rnest(-row_id) %\u0026gt;%\rgroup_by(row_id) %T\u0026gt;%\r{options(warn = -1)} %\u0026gt;%\rsummarise(Statistics = map(data, ~ data.frame(\rbind_cols(\rtsfeatures(.x$value, functions))))) %\u0026gt;%\runnest(Statistics)\r#print(\u0026quot;Generated 106 Time Series features\u0026quot;)\r#write.csv(test_final, \u0026quot;TSfeatures_test.csv\u0026quot;)\rI have computed all the tsfeatures for the train data set and also for the test data set. I saved these two as TSfeatures_train_val.csv and TSfeatures_test.csv.\nLoad in the train and test features data sets\rI uploaded these files here\n# I have already created the features for the training dataset so I can just load them right back in as train_final \u0026lt;- read.csv(\u0026quot;C:/Users/Matt/Desktop/Data Science Challenge/TSfeatures_train_val.csv\u0026quot;)\rtest_final \u0026lt;- read.csv(\u0026quot;C:/Users/Matt/Desktop/Data Science Challenge/TSfeatures_test.csv\u0026quot;)\rThe final data for the training and test looks like:\ntrain_final %\u0026gt;%\rhead() %\u0026gt;%\rkable(caption = \u0026quot;Final training data set\u0026quot;) %\u0026gt;%\rkable_styling(bootstrap_options = c(\u0026quot;striped\u0026quot;, \u0026quot;hover\u0026quot;, \u0026quot;condensed\u0026quot;, \u0026quot;responsive\u0026quot;), font_size = 12)\rTable 8: Final training data set\r\r\r\rX\r\rrow_id\r\rclass\r\rac_9_ac_9\r\racf_features_x_acf1\r\racf_features_x_acf10\r\racf_features_diff1_acf1\r\racf_features_diff1_acf10\r\racf_features_diff2_acf1\r\racf_features_diff2_acf10\r\rARCH.LM\r\rautocorr_features_embed2_incircle_1\r\rautocorr_features_embed2_incircle_2\r\rautocorr_features_ac_9\r\rautocorr_features_firstmin_ac\r\rautocorr_features_trev_num\r\rautocorr_features_motiftwo_entro3\r\rautocorr_features_walker_propcross\r\rbinarize_mean_binarize_mean\r\rbinarize_mean_NA\r\rcompengine_embed2_incircle_1\r\rcompengine_embed2_incircle_2\r\rcompengine_ac_9\r\rcompengine_firstmin_ac\r\rcompengine_trev_num\r\rcompengine_motiftwo_entro3\r\rcompengine_walker_propcross\r\rcompengine_localsimple_mean1\r\rcompengine_localsimple_lfitac\r\rcompengine_sampen_first\r\rcompengine_std1st_der\r\rcompengine_spreadrandomlocal_meantaul_50\r\rcompengine_spreadrandomlocal_meantaul_ac2\r\rcompengine_histogram_mode_10\r\rcompengine_outlierinclude_mdrmd\r\rcompengine_fluctanal_prop_r1\r\rcrossing_points\r\rdist_features_histogram_mode_10\r\rdist_features_outlierinclude_mdrmd\r\rembed2_incircle\r\rentropy\r\rfirstmin_ac\r\rfirstzero_ac\r\rflat_spots\r\rfluctanal_prop_r1_fluctanal_prop_r1\r\rarch_acf\r\rgarch_acf\r\rarch_r2\r\rgarch_r2\r\rhistogram_mode\r\ralpha\r\rbeta\r\rhurst\r\rhw_parameters_hw_parameters\r\rhw_parameters_NA\r\rlocalsimple_taures\r\rlumpiness\r\rmax_kl_shift\r\rtime_kl_shift\r\rmax_level_shift\r\rtime_level_shift\r\rmax_var_shift\r\rtime_var_shift\r\rmotiftwo_entro3\r\rnonlinearity\r\routlierinclude_mdrmd\r\rx_pacf5\r\rdiff1x_pacf5\r\rdiff2x_pacf5\r\rpred_features_localsimple_mean1\r\rpred_features_localsimple_lfitac\r\rpred_features_sampen_first\r\rsampen_first_sampen_first\r\rsampenc\r\rscal_features_fluctanal_prop_r1\r\rspreadrandomlocal_meantaul\r\rstability\r\rstation_features_std1st_der\r\rstation_features_spreadrandomlocal_meantaul_50\r\rstation_features_spreadrandomlocal_meantaul_ac2\r\rstd1st_der_std1st_der\r\rnperiods\r\rseasonal_period\r\rtrend\r\rspike\r\rlinearity\r\rcurvature\r\re_acf1\r\re_acf10\r\rtrev_num\r\rtsfeatures_frequency\r\rtsfeatures_nperiods\r\rtsfeatures_seasonal_period\r\rtsfeatures_trend\r\rtsfeatures_spike\r\rtsfeatures_linearity\r\rtsfeatures_curvature\r\rtsfeatures_e_acf1\r\rtsfeatures_e_acf10\r\rtsfeatures_entropy\r\rtsfeatures_x_acf1\r\rtsfeatures_x_acf10\r\rtsfeatures_diff1_acf1\r\rtsfeatures_diff1_acf10\r\rtsfeatures_diff2_acf1\r\rtsfeatures_diff2_acf10\r\runitroot_kpss\r\runitroot_pp\r\rwalker_propcross\r\r\r\r\r\r1\r\r1\r\r0\r\r-0.0675275\r\r0.0097094\r\r0.0526897\r\r-0.5005299\r\r0.3297018\r\r-0.6772403\r\r0.6124739\r\r0.0627825\r\r0.3929961\r\r0.6147860\r\r-0.0675275\r\r1\r\r0.1208750\r\r2.071663\r\r0.5405405\r\r1\r\r1\r\r0.3929961\r\r0.6147860\r\r-0.0675275\r\r1\r\r0.1208750\r\r2.071663\r\r0.5405405\r\r1\r\r1\r\r1.788841\r\r1.408737\r\r1.68\r\r1.43\r\r-0.25\r\r-0.2865385\r\r0.1627907\r\r132\r\r-0.25\r\r-0.2865385\r\r0.3929961\r\r0.9840151\r\r1\r\r3\r\r4\r\r0.1627907\r\r0.0652585\r\r0.0154406\r\r0.0627825\r\r0.0253367\r\r-0.25\r\r0.0013330\r\r0.0013330\r\r0.5000458\r\rNA\r\rNA\r\r1\r\r0.3556536\r\r1.783636\r\r103\r\r1.297736\r\r97\r\r2.819828\r\r46\r\r2.071663\r\r0.0752319\r\r-0.2865385\r\r0.0108653\r\r0.4457792\r\r1.0525222\r\r1\r\r1\r\r1.788841\r\r1.788841\r\r1.788841\r\r0.1627907\r\r1.76\r\r0.0562693\r\r1.408737\r\r1.74\r\r1.36\r\r1.408737\r\r0\r\r1\r\r0.0043052\r\r0.0000261\r\r0.8421403\r\r-0.7069160\r\r0.0052389\r\r0.0588324\r\r0.1208750\r\r1\r\r0\r\r1\r\r0.0043052\r\r0.0000261\r\r0.8421403\r\r-0.7069160\r\r0.0052389\r\r0.0588324\r\r0.9840151\r\r0.0097094\r\r0.0526897\r\r-0.5005299\r\r0.3297018\r\r-0.6772403\r\r0.6124739\r\r0.0993829\r\r-249.7732\r\r0.5405405\r\r\r\r2\r\r2\r\r0\r\r-0.0421577\r\r-0.0075902\r\r0.0387481\r\r-0.5171529\r\r0.3129147\r\r-0.6727897\r\r0.5379301\r\r0.0558032\r\r0.4285714\r\r0.6563707\r\r-0.0421577\r\r1\r\r-0.4765229\r\r2.077581\r\r0.5019305\r\r1\r\r1\r\r0.4285714\r\r0.6563707\r\r-0.0421577\r\r1\r\r-0.4765229\r\r2.077581\r\r0.5019305\r\r1\r\r1\r\r1.780390\r\r1.419266\r\r1.95\r\r1.00\r\r0.50\r\r0.2615385\r\r0.1627907\r\r123\r\r0.50\r\r0.2615385\r\r0.4285714\r\r0.9864332\r\r1\r\r1\r\r4\r\r0.1627907\r\r0.0664358\r\r0.0657859\r\r0.0558032\r\r0.0554355\r\r0.50\r\r0.0001000\r\r0.0001000\r\r0.5000458\r\rNA\r\rNA\r\r1\r\r0.4636768\r\r1.733008\r\r247\r\r1.311861\r\r141\r\r2.625772\r\r221\r\r2.077581\r\r0.0273335\r\r0.2615385\r\r0.0256032\r\r0.4606850\r\r1.0171377\r\r1\r\r1\r\r1.780390\r\r1.780390\r\r1.780390\r\r0.1627907\r\r2.05\r\r0.0892206\r\r1.419266\r\r2.12\r\r1.00\r\r1.419266\r\r0\r\r1\r\r0.0177460\r\r0.0000399\r\r0.9249561\r\r0.7665407\r\r-0.0218053\r\r0.0411861\r\r-0.4765229\r\r1\r\r0\r\r1\r\r0.0177460\r\r0.0000399\r\r0.9249561\r\r0.7665407\r\r-0.0218053\r\r0.0411861\r\r0.9864332\r\r-0.0075902\r\r0.0387481\r\r-0.5171529\r\r0.3129147\r\r-0.6727897\r\r0.5379301\r\r0.0414599\r\r-256.0485\r\r0.5019305\r\r\r\r3\r\r3\r\r1\r\r0.0099598\r\r-0.0405929\r\r0.0449036\r\r-0.5026683\r\r0.3471209\r\r-0.6718885\r\r0.6109006\r\r0.0325470\r\r0.4671815\r\r0.7065637\r\r0.0099598\r\r1\r\r-0.8755173\r\r2.069233\r\r0.5328185\r\r1\r\r0\r\r0.4671815\r\r0.7065637\r\r0.0099598\r\r1\r\r-0.8755173\r\r2.069233\r\r0.5328185\r\r1\r\r1\r\r1.706841\r\r1.443315\r\r1.38\r\r1.00\r\r-0.50\r\r-0.2538462\r\r0.1395349\r\r132\r\r-0.50\r\r-0.2538462\r\r0.4671815\r\r0.9868568\r\r1\r\r1\r\r6\r\r0.1395349\r\r0.0388513\r\r0.0039162\r\r0.0325470\r\r0.0041902\r\r-0.50\r\r0.0014557\r\r0.0014557\r\r0.5000458\r\rNA\r\rNA\r\r1\r\r1.2670493\r\r7.746711\r\r95\r\r1.403784\r\r87\r\r5.235499\r\r84\r\r2.069233\r\r0.2436499\r\r-0.2538462\r\r0.0223069\r\r0.5356408\r\r0.9954919\r\r1\r\r1\r\r1.706841\r\r1.706841\r\r1.706841\r\r0.1395349\r\r1.42\r\r0.0716499\r\r1.443315\r\r1.42\r\r1.00\r\r1.443315\r\r0\r\r1\r\r0.0141368\r\r0.0000929\r\r0.8414359\r\r-0.0259311\r\r-0.0547484\r\r0.0492987\r\r-0.8755173\r\r1\r\r0\r\r1\r\r0.0141368\r\r0.0000929\r\r0.8414359\r\r-0.0259311\r\r-0.0547484\r\r0.0492987\r\r0.9868568\r\r-0.0405929\r\r0.0449036\r\r-0.5026683\r\r0.3471209\r\r-0.6718885\r\r0.6109006\r\r0.0775698\r\r-258.1295\r\r0.5328185\r\r\r\r4\r\r4\r\r0\r\r-0.0428748\r\r-0.0443619\r\r0.0615867\r\r-0.4571442\r\r0.3184053\r\r-0.5906478\r\r0.4361178\r\r0.1275576\r\r0.4555985\r\r0.7027027\r\r-0.0428748\r\r2\r\r-0.9943808\r\r2.068744\r\r0.4903475\r\r0\r\r0\r\r0.4555985\r\r0.7027027\r\r-0.0428748\r\r2\r\r-0.9943808\r\r2.068744\r\r0.4903475\r\r1\r\r1\r\r1.660825\r\r1.445807\r\r1.24\r\r1.00\r\r0.25\r\r0.0153846\r\r0.1395349\r\r127\r\r0.25\r\r0.0153846\r\r0.4555985\r\r0.9790521\r\r2\r\r1\r\r7\r\r0.1395349\r\r0.0694296\r\r0.0112709\r\r0.0579144\r\r0.0123884\r\r0.25\r\r0.0480021\r\r0.0001000\r\r0.5000458\r\rNA\r\rNA\r\r1\r\r1.0068624\r\r4.994753\r\r132\r\r1.258758\r\r173\r\r5.886911\r\r156\r\r2.068744\r\r0.3840091\r\r0.0153846\r\r0.0503205\r\r0.5402603\r\r1.1070217\r\r1\r\r1\r\r1.660825\r\r1.660825\r\r1.660825\r\r0.1395349\r\r1.10\r\r0.1065111\r\r1.445807\r\r1.14\r\r1.00\r\r1.445807\r\r0\r\r1\r\r0.0283540\r\r0.0000482\r\r-1.2297854\r\r0.2921899\r\r-0.0728152\r\r0.0752389\r\r-0.9943808\r\r1\r\r0\r\r1\r\r0.0283540\r\r0.0000482\r\r-1.2297854\r\r0.2921899\r\r-0.0728152\r\r0.0752389\r\r0.9790521\r\r-0.0443619\r\r0.0615867\r\r-0.4571442\r\r0.3184053\r\r-0.5906478\r\r0.4361178\r\r0.2129633\r\r-262.0781\r\r0.4903475\r\r\r\r5\r\r5\r\r0\r\r0.0259312\r\r-0.2447835\r\r0.1469130\r\r-0.5810073\r\r0.4796508\r\r-0.6799229\r\r0.6232529\r\r0.2014861\r\r0.6563707\r\r0.7992278\r\r0.0259312\r\r1\r\r-0.7167079\r\r2.059764\r\r0.5289575\r\r1\r\r0\r\r0.6563707\r\r0.7992278\r\r0.0259312\r\r1\r\r-0.7167079\r\r2.059764\r\r0.5289575\r\r1\r\r1\r\r1.347789\r\r1.580825\r\r1.08\r\r0.98\r\r-0.50\r\r0.7961538\r\r0.1627907\r\r133\r\r-0.50\r\r0.7961538\r\r0.6563707\r\r0.9723766\r\r1\r\r1\r\r9\r\r0.1627907\r\r0.2718058\r\r0.2229375\r\r0.1765130\r\r0.1330761\r\r-0.50\r\r0.0001000\r\r0.0001000\r\r0.5000458\r\rNA\r\rNA\r\r1\r\r2.8846415\r\r11.474426\r\r80\r\r1.772392\r\r229\r\r8.468236\r\r236\r\r2.059764\r\r0.2143595\r\r0.7961538\r\r0.1008392\r\r0.7538746\r\r1.2926800\r\r1\r\r1\r\r1.347789\r\r1.347789\r\r1.347789\r\r0.1627907\r\r1.08\r\r0.0797924\r\r1.580825\r\r1.06\r\r0.98\r\r1.580825\r\r0\r\r1\r\r0.0121072\r\r0.0001568\r\r-0.5488436\r\r0.2255538\r\r-0.2599764\r\r0.1558209\r\r-0.7167079\r\r1\r\r0\r\r1\r\r0.0121072\r\r0.0001568\r\r-0.5488436\r\r0.2255538\r\r-0.2599764\r\r0.1558209\r\r0.9723766\r\r-0.2447835\r\r0.1469130\r\r-0.5810073\r\r0.4796508\r\r-0.6799229\r\r0.6232529\r\r0.1506344\r\r-323.5672\r\r0.5289575\r\r\r\r6\r\r6\r\r0\r\r-0.0761166\r\r0.0468556\r\r0.0858348\r\r-0.5253131\r\r0.3438031\r\r-0.6901570\r\r0.6130725\r\r0.0432628\r\r0.4352941\r\r0.6627451\r\r-0.0761166\r\r1\r\r0.0898648\r\r2.068914\r\r0.5250965\r\r1\r\r1\r\r0.4352941\r\r0.6627451\r\r-0.0761166\r\r1\r\r0.0898648\r\r2.068914\r\r0.5250965\r\r1\r\r1\r\r1.751575\r\r1.381854\r\r2.69\r\r1.71\r\r-0.25\r\r-0.0846154\r\r0.3488372\r\r134\r\r-0.25\r\r-0.0846154\r\r0.4352941\r\r0.9806218\r\r1\r\r5\r\r5\r\r0.3488372\r\r0.0500806\r\r0.0502154\r\r0.0627968\r\r0.0620877\r\r-0.25\r\r0.0286244\r\r0.0001000\r\r0.5188805\r\rNA\r\rNA\r\r1\r\r0.2189481\r\r3.145763\r\r141\r\r1.447883\r\r80\r\r2.077936\r\r84\r\r2.068914\r\r0.0137733\r\r-0.0846154\r\r0.0172321\r\r0.4345976\r\r1.0881798\r\r1\r\r1\r\r1.751575\r\r1.751575\r\r1.751575\r\r0.3488372\r\r2.61\r\r0.1479673\r\r1.381854\r\r2.63\r\r1.81\r\r1.381854\r\r0\r\r1\r\r0.0077481\r\r0.0000329\r\r-0.5473782\r\r0.4505809\r\r0.0410068\r\r0.0873468\r\r0.0898648\r\r1\r\r0\r\r1\r\r0.0077481\r\r0.0000329\r\r-0.5473782\r\r0.4505809\r\r0.0410068\r\r0.0873468\r\r0.9806218\r\r0.0468556\r\r0.0858348\r\r-0.5253131\r\r0.3438031\r\r-0.6901570\r\r0.6130725\r\r0.0259414\r\r-262.3484\r\r0.5250965\r\r\r\r\rtest_final %\u0026gt;%\rhead() %\u0026gt;%\rkable(caption = \u0026quot;Final testing data set\u0026quot;) %\u0026gt;%\rkable_styling(bootstrap_options = c(\u0026quot;striped\u0026quot;, \u0026quot;hover\u0026quot;, \u0026quot;condensed\u0026quot;, \u0026quot;responsive\u0026quot;), font_size = 12)\rTable 9: Final testing data set\r\r\r\rX\r\rrow_id\r\rac_9_ac_9\r\racf_features_x_acf1\r\racf_features_x_acf10\r\racf_features_diff1_acf1\r\racf_features_diff1_acf10\r\racf_features_diff2_acf1\r\racf_features_diff2_acf10\r\rARCH.LM\r\rautocorr_features_embed2_incircle_1\r\rautocorr_features_embed2_incircle_2\r\rautocorr_features_ac_9\r\rautocorr_features_firstmin_ac\r\rautocorr_features_trev_num\r\rautocorr_features_motiftwo_entro3\r\rautocorr_features_walker_propcross\r\rbinarize_mean_binarize_mean\r\rbinarize_mean_NA\r\rcompengine_embed2_incircle_1\r\rcompengine_embed2_incircle_2\r\rcompengine_ac_9\r\rcompengine_firstmin_ac\r\rcompengine_trev_num\r\rcompengine_motiftwo_entro3\r\rcompengine_walker_propcross\r\rcompengine_localsimple_mean1\r\rcompengine_localsimple_lfitac\r\rcompengine_sampen_first\r\rcompengine_std1st_der\r\rcompengine_spreadrandomlocal_meantaul_50\r\rcompengine_spreadrandomlocal_meantaul_ac2\r\rcompengine_histogram_mode_10\r\rcompengine_outlierinclude_mdrmd\r\rcompengine_fluctanal_prop_r1\r\rcrossing_points\r\rdist_features_histogram_mode_10\r\rdist_features_outlierinclude_mdrmd\r\rembed2_incircle\r\rentropy\r\rfirstmin_ac\r\rfirstzero_ac\r\rflat_spots\r\rfluctanal_prop_r1_fluctanal_prop_r1\r\rarch_acf\r\rgarch_acf\r\rarch_r2\r\rgarch_r2\r\rhistogram_mode\r\ralpha\r\rbeta\r\rhurst\r\rhw_parameters_hw_parameters\r\rhw_parameters_NA\r\rlocalsimple_taures\r\rlumpiness\r\rmax_kl_shift\r\rtime_kl_shift\r\rmax_level_shift\r\rtime_level_shift\r\rmax_var_shift\r\rtime_var_shift\r\rmotiftwo_entro3\r\rnonlinearity\r\routlierinclude_mdrmd\r\rx_pacf5\r\rdiff1x_pacf5\r\rdiff2x_pacf5\r\rpred_features_localsimple_mean1\r\rpred_features_localsimple_lfitac\r\rpred_features_sampen_first\r\rsampen_first_sampen_first\r\rsampenc\r\rscal_features_fluctanal_prop_r1\r\rspreadrandomlocal_meantaul\r\rstability\r\rstation_features_std1st_der\r\rstation_features_spreadrandomlocal_meantaul_50\r\rstation_features_spreadrandomlocal_meantaul_ac2\r\rstd1st_der_std1st_der\r\rnperiods\r\rseasonal_period\r\rtrend\r\rspike\r\rlinearity\r\rcurvature\r\re_acf1\r\re_acf10\r\rtrev_num\r\rtsfeatures_frequency\r\rtsfeatures_nperiods\r\rtsfeatures_seasonal_period\r\rtsfeatures_trend\r\rtsfeatures_spike\r\rtsfeatures_linearity\r\rtsfeatures_curvature\r\rtsfeatures_e_acf1\r\rtsfeatures_e_acf10\r\rtsfeatures_entropy\r\rtsfeatures_x_acf1\r\rtsfeatures_x_acf10\r\rtsfeatures_diff1_acf1\r\rtsfeatures_diff1_acf10\r\rtsfeatures_diff2_acf1\r\rtsfeatures_diff2_acf10\r\runitroot_kpss\r\runitroot_pp\r\rwalker_propcross\r\r\r\r\r\r1\r\r1\r\r-0.0262073\r\r-0.0396281\r\r0.0429784\r\r-0.4964245\r\r0.3379915\r\r-0.6704837\r\r0.6178088\r\r0.1425744\r\r0.5482625\r\r0.7528958\r\r-0.0262073\r\r1\r\r-0.5824739\r\r2.063564\r\r0.4826255\r\r1\r\r1\r\r0.5482625\r\r0.7528958\r\r-0.0262073\r\r1\r\r-0.5824739\r\r2.063564\r\r0.4826255\r\r1\r\r1\r\r1.383933\r\r1.437946\r\r1.91\r\r1.00\r\r0.50\r\r0.4307692\r\r0.1395349\r\r117\r\r0.50\r\r0.4307692\r\r0.5482625\r\r0.9817288\r\r1\r\r1\r\r7\r\r0.1395349\r\r0.1906443\r\r0.0422059\r\r0.1425744\r\r0.0417531\r\r0.50\r\r0.0440489\r\r0.0001000\r\r0.5000458\r\rNA\r\rNA\r\r1\r\r1.1617874\r\r4.857530\r\r130\r\r1.031623\r\r230\r\r3.967385\r\r214\r\r2.063564\r\r0.0716802\r\r0.4307692\r\r0.0271516\r\r0.5270423\r\r0.9564642\r\r1\r\r1\r\r1.383933\r\r1.383933\r\r1.383933\r\r0.1395349\r\r1.80\r\r0.0804590\r\r1.437946\r\r1.89\r\r1.00\r\r1.437946\r\r0\r\r1\r\r0.0355541\r\r0.0000573\r\r-2.6210355\r\r-0.0981868\r\r-0.0740868\r\r0.0651438\r\r-0.5824739\r\r1\r\r0\r\r1\r\r0.0355541\r\r0.0000573\r\r-2.6210355\r\r-0.0981868\r\r-0.0740868\r\r0.0651438\r\r0.9817288\r\r-0.0396281\r\r0.0429784\r\r-0.4964245\r\r0.3379915\r\r-0.6704837\r\r0.6178088\r\r0.8820380\r\r-252.2509\r\r0.4826255\r\r\r\r2\r\r2\r\r-0.0047799\r\r0.0544155\r\r0.0423445\r\r-0.4931653\r\r0.3114689\r\r-0.6980787\r\r0.6597427\r\r0.1111625\r\r0.4513619\r\r0.6964981\r\r-0.0047799\r\r3\r\r0.2147570\r\r2.068849\r\r0.5250965\r\r1\r\r0\r\r0.4513619\r\r0.6964981\r\r-0.0047799\r\r3\r\r0.2147570\r\r2.068849\r\r0.5250965\r\r1\r\r1\r\r1.611106\r\r1.375120\r\r2.15\r\r1.40\r\r0.25\r\r0.1211538\r\r0.1627907\r\r142\r\r0.25\r\r0.1211538\r\r0.4513619\r\r0.9856808\r\r3\r\r3\r\r6\r\r0.1627907\r\r0.1313081\r\r0.0468159\r\r0.0939769\r\r0.0402163\r\r0.25\r\r0.0063703\r\r0.0001000\r\r0.5012778\r\rNA\r\rNA\r\r1\r\r0.5347516\r\r6.848494\r\r91\r\r1.360520\r\r80\r\r3.586240\r\r75\r\r2.068849\r\r0.0618461\r\r0.1211538\r\r0.0344415\r\r0.4336405\r\r0.9510320\r\r1\r\r1\r\r1.611106\r\r1.611106\r\r1.611106\r\r0.1627907\r\r2.14\r\r0.0796936\r\r1.375120\r\r1.82\r\r1.34\r\r1.375120\r\r0\r\r1\r\r0.0216068\r\r0.0000391\r\r0.1351482\r\r-0.3430376\r\r0.0339344\r\r0.0578569\r\r0.2147570\r\r1\r\r0\r\r1\r\r0.0216068\r\r0.0000391\r\r0.1351482\r\r-0.3430376\r\r0.0339344\r\r0.0578569\r\r0.9856808\r\r0.0544155\r\r0.0423445\r\r-0.4931653\r\r0.3114689\r\r-0.6980787\r\r0.6597427\r\r0.0722224\r\r-226.9463\r\r0.5250965\r\r\r\r3\r\r3\r\r0.0370364\r\r-0.0041963\r\r0.1781209\r\r-0.3838557\r\r0.3158431\r\r-0.5535087\r\r0.3948373\r\r0.3450202\r\r0.6138996\r\r0.7915058\r\r0.0370364\r\r2\r\r2.9002534\r\r2.067845\r\r0.5598456\r\r1\r\r0\r\r0.6138996\r\r0.7915058\r\r0.0370364\r\r2\r\r2.9002534\r\r2.067845\r\r0.5598456\r\r1\r\r1\r\r1.436472\r\r1.414575\r\r1.24\r\r1.00\r\r0.50\r\r0.7230769\r\r0.1627907\r\r139\r\r0.50\r\r0.7230769\r\r0.6138996\r\r0.9627133\r\r2\r\r1\r\r6\r\r0.1627907\r\r0.4731295\r\r0.0342727\r\r0.2247245\r\r0.0323111\r\r0.50\r\r0.0001000\r\r0.0001000\r\r0.5000458\r\rNA\r\rNA\r\r1\r\r3.9022555\r\r33.656077\r\r240\r\r1.695947\r\r222\r\r9.122984\r\r232\r\r2.067845\r\r0.7040489\r\r0.7230769\r\r0.0685939\r\r0.5171369\r\r1.0433489\r\r1\r\r1\r\r1.436472\r\r1.436472\r\r1.436472\r\r0.1627907\r\r1.39\r\r0.1088905\r\r1.414575\r\r1.43\r\r1.00\r\r1.414575\r\r0\r\r1\r\r0.0058644\r\r0.0001243\r\r-1.1897947\r\r-0.4762066\r\r-0.0084531\r\r0.1814633\r\r2.9002534\r\r1\r\r0\r\r1\r\r0.0058644\r\r0.0001243\r\r-1.1897947\r\r-0.4762066\r\r-0.0084531\r\r0.1814633\r\r0.9627133\r\r-0.0041963\r\r0.1781209\r\r-0.3838557\r\r0.3158431\r\r-0.5535087\r\r0.3948373\r\r0.1757311\r\r-235.0780\r\r0.5598456\r\r\r\r4\r\r4\r\r-0.0576029\r\r-0.0338906\r\r0.0251717\r\r-0.4963752\r\r0.2570591\r\r-0.6694337\r\r0.4910006\r\r0.0471296\r\r0.3899614\r\r0.6332046\r\r-0.0576029\r\r3\r\r-0.1053821\r\r2.075447\r\r0.5366795\r\r0\r\r1\r\r0.3899614\r\r0.6332046\r\r-0.0576029\r\r3\r\r-0.1053821\r\r2.075447\r\r0.5366795\r\r1\r\r1\r\r1.785628\r\r1.436827\r\r1.52\r\r1.00\r\r-0.25\r\r0.0769231\r\r0.1860465\r\r137\r\r-0.25\r\r0.0769231\r\r0.3899614\r\r0.9886539\r\r3\r\r1\r\r3\r\r0.1860465\r\r0.0511246\r\r0.0516446\r\r0.0471296\r\r0.0470911\r\r-0.25\r\r0.0025845\r\r0.0025845\r\r0.5000458\r\rNA\r\rNA\r\r1\r\r0.2161135\r\r2.534373\r\r34\r\r1.404765\r\r154\r\r2.213233\r\r205\r\r2.075447\r\r0.0681473\r\r0.0769231\r\r0.0179401\r\r0.4720756\r\r0.9626432\r\r1\r\r1\r\r1.785628\r\r1.785628\r\r1.785628\r\r0.1860465\r\r1.44\r\r0.0499953\r\r1.436827\r\r1.42\r\r1.00\r\r1.436827\r\r0\r\r1\r\r0.0042080\r\r0.0000286\r\r0.9969942\r\r0.1863847\r\r-0.0370368\r\r0.0269840\r\r-0.1053821\r\r1\r\r0\r\r1\r\r0.0042080\r\r0.0000286\r\r0.9969942\r\r0.1863847\r\r-0.0370368\r\r0.0269840\r\r0.9886539\r\r-0.0338906\r\r0.0251717\r\r-0.4963752\r\r0.2570591\r\r-0.6694337\r\r0.4910006\r\r0.0860264\r\r-241.6752\r\r0.5366795\r\r\r\r5\r\r5\r\r-0.1236994\r\r0.0086381\r\r0.0308039\r\r-0.5025363\r\r0.3330186\r\r-0.6693011\r\r0.5835466\r\r0.1157603\r\r0.4202335\r\r0.7003891\r\r-0.1236994\r\r1\r\r-0.0489352\r\r2.058889\r\r0.4864865\r\r1\r\r0\r\r0.4202335\r\r0.7003891\r\r-0.1236994\r\r1\r\r-0.0489352\r\r2.058889\r\r0.4864865\r\r1\r\r1\r\r1.722492\r\r1.396172\r\r1.69\r\r1.32\r\r-0.50\r\r-0.0076923\r\r0.8139535\r\r120\r\r-0.50\r\r-0.0076923\r\r0.4202335\r\r0.9908616\r\r1\r\r3\r\r6\r\r0.8139535\r\r0.0537820\r\r0.0583484\r\r0.1157603\r\r0.1120523\r\r-0.50\r\r0.0001609\r\r0.0001609\r\r0.5090878\r\rNA\r\rNA\r\r1\r\r0.6488028\r\r3.045684\r\r97\r\r1.287940\r\r14\r\r4.338131\r\r240\r\r2.058889\r\r0.0094165\r\r-0.0076923\r\r0.0059114\r\r0.4457371\r\r0.9190563\r\r1\r\r1\r\r1.722492\r\r1.722492\r\r1.722492\r\r0.8139535\r\r1.63\r\r0.1107442\r\r1.396172\r\r1.75\r\r1.35\r\r1.396172\r\r0\r\r1\r\r0.0229286\r\r0.0000550\r\r-0.6149100\r\r0.2128084\r\r-0.0125452\r\r0.0317617\r\r-0.0489352\r\r1\r\r0\r\r1\r\r0.0229286\r\r0.0000550\r\r-0.6149100\r\r0.2128084\r\r-0.0125452\r\r0.0317617\r\r0.9908616\r\r0.0086381\r\r0.0308039\r\r-0.5025363\r\r0.3330186\r\r-0.6693011\r\r0.5835466\r\r0.1169027\r\r-266.1451\r\r0.4864865\r\r\r\r6\r\r6\r\r0.0137566\r\r-0.0889224\r\r0.0668615\r\r-0.5649436\r\r0.4404459\r\r-0.7097820\r\r0.7128451\r\r0.0752299\r\r0.5366795\r\r0.6447876\r\r0.0137566\r\r1\r\r0.3033072\r\r2.064104\r\r0.5328185\r\r1\r\r0\r\r0.5366795\r\r0.6447876\r\r0.0137566\r\r1\r\r0.3033072\r\r2.064104\r\r0.5328185\r\r1\r\r1\r\r1.464977\r\r1.477767\r\r1.53\r\r1.00\r\r0.25\r\r0.3269231\r\r0.1627907\r\r136\r\r0.25\r\r0.3269231\r\r0.5366795\r\r0.9835850\r\r1\r\r1\r\r6\r\r0.1627907\r\r0.1033936\r\r0.0236197\r\r0.0740159\r\r0.0248339\r\r0.25\r\r0.0001000\r\r0.0001000\r\r0.5000458\r\rNA\r\rNA\r\r1\r\r0.7510236\r\r12.688453\r\r197\r\r1.217490\r\r189\r\r2.987989\r\r194\r\r2.064104\r\r0.0649001\r\r0.3269231\r\r0.0200688\r\r0.5201834\r\r1.0761503\r\r1\r\r1\r\r1.464977\r\r1.464977\r\r1.464977\r\r0.1627907\r\r1.35\r\r0.0814814\r\r1.477767\r\r1.36\r\r1.00\r\r1.477767\r\r0\r\r1\r\r0.0081147\r\r0.0000469\r\r0.6555116\r\r-0.0489727\r\r-0.0976177\r\r0.0700199\r\r0.3033072\r\r1\r\r0\r\r1\r\r0.0081147\r\r0.0000469\r\r0.6555116\r\r-0.0489727\r\r-0.0976177\r\r0.0700199\r\r0.9835850\r\r-0.0889224\r\r0.0668615\r\r-0.5649436\r\r0.4404459\r\r-0.7097820\r\r0.7128451\r\r0.0869913\r\r-279.8920\r\r0.5328185\r\r\r\r\rFinally we can run the final model on the held-out-test-set and obtain our predictions based on the training data and the optimal parameters.\n# previously and run the final training model (to make predictions on the out-of-sample test data)\rx_train_final \u0026lt;- train_final %\u0026gt;%\rungroup() %\u0026gt;%\rselect(-class, -row_id, -X) %\u0026gt;%\ras.matrix()\rx_test_final \u0026lt;- test_final %\u0026gt;%\rungroup() %\u0026gt;%\rselect(-row_id, -X) %\u0026gt;%\ras.matrix()\ry_train_final \u0026lt;- train_final %\u0026gt;%\rungroup() %\u0026gt;%\rpull(class)\rdtrain_final \u0026lt;- xgb.DMatrix(data = as.matrix(x_train_final), label = y_train_final, missing = \u0026quot;NaN\u0026quot;)\rdtest_final \u0026lt;- xgb.DMatrix(data = as.matrix(x_test_final), missing = \u0026quot;NaN\u0026quot;)\rwatchlist \u0026lt;- list(\u0026quot;train\u0026quot; = dtrain_final)\rparams \u0026lt;- list(\u0026quot;eta\u0026quot; = 0.1, \u0026quot;max_depth\u0026quot; = 5, \u0026quot;colsample_bytree\u0026quot; = 1, \u0026quot;min_child_weight\u0026quot; = 1, \u0026quot;subsample\u0026quot;= 1,\r\u0026quot;objective\u0026quot;=\u0026quot;binary:logistic\u0026quot;, \u0026quot;gamma\u0026quot; = 1, \u0026quot;lambda\u0026quot; = 1, \u0026quot;alpha\u0026quot; = 0, \u0026quot;max_delta_step\u0026quot; = 0,\r\u0026quot;colsample_bylevel\u0026quot; = 1, \u0026quot;eval_metric\u0026quot;= \u0026quot;auc\u0026quot;,\r\u0026quot;set.seed\u0026quot; = 176)\rnround \u0026lt;- 95\rxgb.model_final \u0026lt;- xgb.train(params, dtrain_final, nround, watchlist)\r## [1] train-auc:0.708604 ## [2] train-auc:0.721700 ## [3] train-auc:0.723230 ## [4] train-auc:0.729888 ## [5] train-auc:0.735542 ## [6] train-auc:0.738081 ## [7] train-auc:0.740926 ## [8] train-auc:0.744105 ## [9] train-auc:0.746320 ## [10] train-auc:0.748644 ## [11] train-auc:0.754211 ## [12] train-auc:0.756892 ## [13] train-auc:0.761524 ## [14] train-auc:0.763882 ## [15] train-auc:0.767216 ## [16] train-auc:0.772009 ## [17] train-auc:0.772943 ## [18] train-auc:0.774261 ## [19] train-auc:0.775471 ## [20] train-auc:0.777801 ## [21] train-auc:0.780629 ## [22] train-auc:0.784384 ## [23] train-auc:0.787112 ## [24] train-auc:0.788946 ## [25] train-auc:0.791835 ## [26] train-auc:0.793142 ## [27] train-auc:0.795289 ## [28] train-auc:0.798502 ## [29] train-auc:0.799893 ## [30] train-auc:0.802186 ## [31] train-auc:0.804981 ## [32] train-auc:0.805649 ## [33] train-auc:0.807120 ## [34] train-auc:0.809020 ## [35] train-auc:0.810318 ## [36] train-auc:0.812637 ## [37] train-auc:0.814760 ## [38] train-auc:0.816024 ## [39] train-auc:0.817956 ## [40] train-auc:0.819350 ## [41] train-auc:0.821653 ## [42] train-auc:0.822729 ## [43] train-auc:0.824029 ## [44] train-auc:0.824765 ## [45] train-auc:0.826924 ## [46] train-auc:0.827804 ## [47] train-auc:0.828475 ## [48] train-auc:0.831018 ## [49] train-auc:0.832247 ## [50] train-auc:0.833265 ## [51] train-auc:0.834168 ## [52] train-auc:0.835535 ## [53] train-auc:0.836093 ## [54] train-auc:0.837008 ## [55] train-auc:0.837715 ## [56] train-auc:0.839537 ## [57] train-auc:0.840310 ## [58] train-auc:0.841701 ## [59] train-auc:0.842480 ## [60] train-auc:0.843106 ## [61] train-auc:0.844495 ## [62] train-auc:0.845348 ## [63] train-auc:0.845932 ## [64] train-auc:0.847843 ## [65] train-auc:0.849445 ## [66] train-auc:0.850345 ## [67] train-auc:0.851337 ## [68] train-auc:0.852121 ## [69] train-auc:0.852663 ## [70] train-auc:0.854132 ## [71] train-auc:0.855949 ## [72] train-auc:0.856758 ## [73] train-auc:0.857115 ## [74] train-auc:0.857954 ## [75] train-auc:0.858849 ## [76] train-auc:0.859527 ## [77] train-auc:0.859917 ## [78] train-auc:0.860590 ## [79] train-auc:0.861264 ## [80] train-auc:0.862359 ## [81] train-auc:0.863101 ## [82] train-auc:0.863794 ## [83] train-auc:0.864911 ## [84] train-auc:0.866293 ## [85] train-auc:0.866976 ## [86] train-auc:0.867436 ## [87] train-auc:0.869036 ## [88] train-auc:0.869469 ## [89] train-auc:0.869931 ## [90] train-auc:0.870681 ## [91] train-auc:0.872326 ## [92] train-auc:0.873706 ## [93] train-auc:0.875704 ## [94] train-auc:0.876178 ## [95] train-auc:0.876789\rI make the final predictions based on the test.csv data. The predict function in R is great, it can take any model and make predictions, we just need to provide the testing data along with the model. I “ask” for probability scores from the predictions. I plot the density of predicted probabilities also.\n# Make the final predictions on the \u0026#39;test.csv\u0026#39; data and plot the probability density function.\rxgb.pred_final \u0026lt;- predict(xgb.model_final, dtest_final, type = \u0026#39;prob\u0026#39;)\rxgb.pred_final %\u0026gt;%\ras_tibble() %\u0026gt;%\rsetNames(c(\u0026quot;Prediction\u0026quot;)) %\u0026gt;%\rggplot(aes(x = Prediction)) + geom_density(color = \u0026quot;darkblue\u0026quot;, fill = \u0026quot;lightblue\u0026quot;) +\rgeom_vline(aes(xintercept = mean(Prediction)),\rcolor = \u0026quot;blue\u0026quot;, linetype = \u0026quot;dashed\u0026quot;, size = 1) +\rgeom_histogram(aes(y = ..density..), colour = \u0026quot;black\u0026quot;, fill = \u0026quot;white\u0026quot;, alpha = 0.1, position = \u0026quot;identity\u0026quot;) +\rggtitle(\u0026quot;(Out of sample) - Predicted probability density plot\u0026quot;) +\rtheme_tq()\r\r\rFinally! I make the submission file based on the predicted probabilities.\r# Convert the probabilities into a binary class of 0 or 1 by a decision threshold of 0.465.\r# Write the predictions to \u0026quot;submission.csv\u0026quot;\rxgb.pred_final %\u0026gt;%\ras_tibble() %\u0026gt;%\rsetNames(c(\u0026quot;Prediction\u0026quot;)) %\u0026gt;%\rsummarise(mean = mean(Prediction))\r## # A tibble: 1 x 1\r## mean\r## \u0026lt;dbl\u0026gt;\r## 1 0.465\rxgb.pred_final %\u0026gt;%\ras_tibble() %\u0026gt;%\rsetNames(c(\u0026quot;Prediction\u0026quot;)) %\u0026gt;%\rmutate(pred = case_when(\rPrediction \u0026gt; 0.465 ~ 1,\rPrediction \u0026lt;= 0.465 ~ 0\r)) %\u0026gt;%\rwrite.csv(\u0026quot;submission.csv\u0026quot;)\rI make the final remark in the Jupyter Notebook I sent as part of the interview process\nQuote::\rFinal footnote: Hopefully the out-of-sample predictions will obtain a 67% accuracy (the predictions in the “submission.csv” file).\nI was told after I sent my scores as part of the interview process how the scores were evaluated (In Spanish):\n*Para que sepas cómo es la valoración:\nObtener entre 0.4-0.6 se considera un resultado aleatorio.\nA partir 0.6 el algoritmo clasifica correctamente y más de un 0.7 el algoritmo es genial.\nPor debajo de 0.4 son capaces de diferenciar series sintéticas de las reales, pero están intercambiadas.*\nI was informed that based on the held out test set I obtained a result of 0.649636 ~0.65% (a little lower than my 0.67% in-sample training set!) but still consistent with the correct methodology I was using (i.e. no leaking test data to the training data) along with the fact that I was just throwing the time series features book/kitchen sink at the problem. Further reading into time series features will strengthen this classification problem and will certainly improve the prediction accuracy! Recall, that my feature selection consisted of applying every feature in the tsfeatures package… Using functions \u0026lt;- ls(\"package:tsfeatures\")[1:42] and then mapping over the data using summarise(Statistics = map(data, ~ data.frame( bind_cols(tsfeatures(.x$value, functions))))) %\u0026gt;%. So there is plenty of improvements to the current model.\nConclusion: A combination of time series feature selection and classifciation models can do pretty well on time series classification models such as this one I faced.\nAny errors are my own!\n\r\r","date":1572739200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1572739200,"objectID":"da93c9229b29ae9edd520b798a0c9a6f","permalink":"/post/synth-real-time-series/financial-time-series/","publishdate":"2019-11-03T00:00:00Z","relpermalink":"/post/synth-real-time-series/financial-time-series/","section":"post","summary":"I analyse the difference between two time series and obtain a 67% accuracy (on anonymous data)","tags":["asset pricing","xgboost","time series","synthetic data"],"title":"Time Series Classification Synthetic vs Real Financial Time Series","type":"post"},{"authors":null,"categories":["Trading"],"content":"\r\rLoad packages:\nlibrary(knitr)\rlibrary(kableExtra)\rlibrary(dplyr)\rlibrary(ggplot2)\rlibrary(quantstrat)\r::: Note ::: This post is mostly for my future reference/documentation for learning the quantstrat package. An example of a strategy I developed can be found below in which it uses a naive rolling logistic regression model trained on t days to predict t+1 market movement. ::: END Note :::\nI have been playing around with backtesting trading models using the quantstrat package for a while but the most difficult thing about it was understanding the syntax of blotter and quantstrat, it didn’t seem very intuitive to me at first and there does not seem to be much detailed information online, despite the package being around since 2010. In this post I will give my comments and observations what certain functions do, I will update this post over time.\nBackgorund\rThe quantstrat package is built on the blotter package which was developed in 2008. It works best with time series xts objects which can be easily collected using the quantmod package. The blotter package is the accounting package behind the quantstrat system, it can support multiple accounts or multiple portfolios and computes the P\u0026amp;L of trading systems.\nThe main blotter functions are the following:\n\rInitialisation\r\rinitPortf - which initialises a portfolio\rinitAcct - which initialises an account\r\r\rPerformance\r\raddTxn - which adds transactions to the portfolio\rupdatePortf - which computes the P\u0026amp;L for each symbol in a given period\rupdateAcct - which computes the equity from the assets\rupdateEndEq - which updates the final equity for an account\rgetEndEq - which provides us with the latest value of our account\rgetPosQty - which gets a position at a given date.\rchart.Posn- which plots a chart of the position size, and cumulative P\u0026amp;L\rPortfReturns- which calcualtes the portfolio returns\rgetAccount - which gets our account info!\rgetPortfolio - \"\"\rgetTxns - \"\"\rtradeStats - which collects trade statistics\rperTradeStats - which calculates per trade statistics\r\rThe blotter package loads in a number of additional packages as we can see by running the below.\nThe packages are: xts and zoo for time series, FinancialInstrument, quantmod, TTR, PerformanceAnalytics for finance, where TTR stands for Technical Trading Rules.\nThe blotter package creates a new environment .blotter.\n\rDownload Financial Data\rLets first download some data for the S\u0026amp;P500 from 2018 to 2019 in order to gather some data. For the quantstrat package its quite usual to find the initiation date, start date, end date set outside the parameters of the model. Therefore I first set these parameters as initDate, startDate and endDate.\ninitDate \u0026lt;- \u0026#39;2010-01-01\u0026#39; # this is used for later but is must be before the startDate\rstartDate \u0026lt;- \u0026#39;2018-01-01\u0026#39;\rendDate \u0026lt;- \u0026#39;2019-01-01\u0026#39;\rsymbols \u0026lt;- c(\u0026#39;SPY\u0026#39;)\rgetSymbols(symbols, from = startDate, to = endDate, src = \u0026quot;yahoo\u0026quot;, adjust=TRUE) \r## [1] \u0026quot;SPY\u0026quot;\rTable 1: SPY stocks\r\r\r\r\rSPY.Open\r\rSPY.High\r\rSPY.Low\r\rSPY.Close\r\rSPY.Volume\r\rSPY.Adjusted\r\r\r\r\r\r2018-01-02\r\r262.8473\r\r263.7992\r\r262.4155\r\r263.7599\r\r86655700\r\r260.1310\r\r\r\r2018-01-03\r\r263.9464\r\r265.5951\r\r263.9464\r\r265.4283\r\r90070400\r\r261.7763\r\r\r\r2018-01-04\r\r266.1447\r\r267.0868\r\r265.4970\r\r266.5470\r\r80636400\r\r262.8796\r\r\r\r2018-01-05\r\r267.4302\r\r268.4606\r\r266.8807\r\r268.3233\r\r83524000\r\r264.6314\r\r\r\r2018-01-08\r\r268.2153\r\r268.9906\r\r267.8915\r\r268.8140\r\r57319200\r\r265.1154\r\r\r\r2018-01-09\r\r269.2850\r\r270.1191\r\r268.9709\r\r269.4224\r\r57254000\r\r265.7154\r\r\r\r\r\rPlot the data\rchartSeries(SPY, name = \u0026quot;Daily time series for SPY\u0026quot;, type = \u0026quot;candlesticks\u0026quot;, theme = chartTheme(\u0026quot;white\u0026quot;))\rOnce we have the data and after loading the blotter package we must define a few initialisation parameters, namely the currency() and stocks parameter from the FinancialInstrument package.\ncurrency(\u0026quot;USD\u0026quot;)\r## [1] \u0026quot;USD\u0026quot;\rstock(\u0026quot;SPY\u0026quot;, currency = \u0026quot;USD\u0026quot;, multiplier = 1)\r## [1] \u0026quot;SPY\u0026quot;\rls(all = TRUE)\r## [1] \u0026quot;.blotter\u0026quot; \u0026quot;.getSymbols\u0026quot; \u0026quot;.Random.seed\u0026quot; \u0026quot;.strategy\u0026quot; ## [5] \u0026quot;endDate\u0026quot; \u0026quot;initDate\u0026quot; \u0026quot;SPY\u0026quot; \u0026quot;startDate\u0026quot; ## [9] \u0026quot;symbols\u0026quot;\rls(envir = FinancialInstrument:::.instrument)\r## [1] \u0026quot;SPY\u0026quot; \u0026quot;USD\u0026quot;\rWe can see that we have the SPY index and the USD currency set. We can convert the data from daily time series to monthly time series using the to.period fucntion.\nSPY_monthly \u0026lt;- to.period(SPY, period = \u0026quot;months\u0026quot;)\rchartSeries(SPY_monthly, name = \u0026quot;Monthly time series for SPY\u0026quot;, type = \u0026quot;candlesticks\u0026quot;, theme = chartTheme(\u0026quot;white\u0026quot;))\rhead(SPY_monthly)\r## SPY.Open SPY.High SPY.Low SPY.Close SPY.Volume SPY.Adjusted\r## 2018-01-31 262.8473 281.2870 262.4155 276.6452 1985506700 272.8389\r## 2018-02-28 275.8307 277.7836 248.2054 266.5862 2923722000 262.9184\r## 2018-03-29 266.3507 275.1830 254.0372 259.2790 2323561800 255.7117\r## 2018-04-30 258.6878 267.3091 250.9237 260.6190 1998466500 257.0332\r## 2018-05-31 259.9884 270.2157 255.2393 266.9544 1606397200 263.2814\r## 2018-06-29 268.4028 275.3688 265.7283 268.4896 1599001000 264.7955\r\rPortfolio parameters\rNow that we have our data we should initialise the portfolio with initPortf, which will consist of the transactions over the period of analysis.\n\rname - “MyFirstPortfolio” - the initial name of the portfolio\rsymbols - “SPY” - since we are using the SPY500\rinitPosQty - 100 - the initial quantity of our position\rinitDate - “initDate” - the initial account equity and position (prior to the closing price of our first position)\rcurrency the currency we are using\r\rinitDate \u0026lt;- \u0026#39;2010-01-01\u0026#39; # NOTE: We already created this parameter --\u0026gt; which was quoted as \u0026quot;this is used for later but is must be before the startDate\u0026quot;\rinitPortf(\u0026quot;MyFirstPortfolio\u0026quot;, \u0026quot;SPY\u0026quot;, initDate = initDate)\r## [1] \u0026quot;MyFirstPortfolio\u0026quot;\r\rAccount parameters\rWe also need to initialise the account using initAcct\n\rname - “MyFirstPortfolio” - the initial name of the portfolio\rportfolios - the name of our previous portfolio created\rinitDate - “initDate” - the initial account equity and position (prior to the closing price of our first position)\rinitEq - the initial equity we began with\rcurrency the currency we are using\r\rinitEq = 1000000\rinitAcct(\u0026quot;MyFirstPortfolio\u0026quot;, portfolios = \u0026quot;MyFirstPortfolio\u0026quot;, initDate = initDate, initEQ = initEq)\r## [1] \u0026quot;MyFirstPortfolio\u0026quot;\rfirst(SPY) # print the first observation in our data\r## SPY.Open SPY.High SPY.Low SPY.Close SPY.Volume SPY.Adjusted\r## 2018-01-02 262.8473 263.7992 262.4155 263.7599 86655700 260.131\rlast(SPY) # print the last observation in our data\r## SPY.Open SPY.High SPY.Low SPY.Close SPY.Volume SPY.Adjusted\r## 2018-12-31 249.56 250.19 247.47 249.92 144299400 246.4814\r\rA simple Strategy\rA trading strategy can be broken down into the following blocks:\n\rAssets - which are the stocks we want to trade, SPY, MSFT, AAPL, MSFT etc.\rIndicators - which are the variables, Open, High, Low, Close, SMA, EMA, RSI, Momentum etc.\rSignals - we can create signals based on the interaction between the indicators and the time-series data.\rRules - Create buy and sell rules based on the signals created.\rOrders - Once a rule is activated, push an order through.\rAnalysis - Analyse the performance of the strategy.\r\rI wanted to test a basic backtesting concept. What happens if I trained a machine learning model each day on the last 100 days of data to predict the next days stock market direction but test this over many periods?. That is to continuously train a machine learning model at every step to predict the next price. One method is to use the rolling_origin fucntion from the rsample package but I write a more simple function for this.\nI load in the parameters of the model and download data for MSFT.\nlibrary(quantstrat)\rlibrary(PerformanceAnalytics)\rlibrary(e1071)\rinitDate = \u0026quot;2010-01-01\u0026quot;\rfrom \u0026lt;- \u0026quot;2018-01-01\u0026quot;\rto \u0026lt;- \u0026quot;2019-09-20\u0026quot;\rinit_equity \u0026lt;- 1000\radjustment \u0026lt;- TRUE\r.orderqty \u0026lt;- 10 # The profitability of the strategy depends heavily on this value\r.txnfees \u0026lt;- -10\r.stoploss \u0026lt;- 3e-3 # 0.003 or 0.3%\rcurrency(\u0026#39;USD\u0026#39;)\r## [1] \u0026quot;USD\u0026quot;\rSys.setenv(TZ=\u0026quot;UTC\u0026quot;)\rsymbols \u0026lt;- c(\u0026#39;MSFT\u0026#39;)\rgetSymbols(symbols, from = from, to = to, src = \u0026quot;yahoo\u0026quot;, adjust = TRUE) \r## [1] \u0026quot;MSFT\u0026quot;\rI created a simple time series pre-processing function to clean up the data, create some features and set the data to xts. Ignore the Scale_Me function.\nScale_Me \u0026lt;- function(x){\r(x - mean(x, na.rm = TRUE)) / sd(x, na.rm = TRUE)\r}\rTS_preprocess \u0026lt;- function(dat){\rdat = data.frame(dat)\rcolnames(dat) = c(\u0026quot;open\u0026quot;, \u0026quot;high\u0026quot;, \u0026quot;low\u0026quot;, \u0026quot;close\u0026quot;, \u0026quot;volume\u0026quot;, \u0026quot;adjusted\u0026quot;)\rdat$Y = with(dat, ifelse(close \u0026gt;= open, 1, 0))\rdat$X1 = SMA(lag(dat$close), n = 10)\rdat$X2 = RSI(lag(dat$close), nFast = 14, nSlow = 26, nSig = 9, maType = SMA)\rdat$X3 = momentum(lag(dat$close), n = 12)\rdat = dat[complete.cases(dat), ]\r#dat = cbind(dat[, \u0026#39;Y\u0026#39;], apply(dat[, 8:ncol(dat)], 2, Scale_Me))\r#colnames(dat)[1] = \u0026quot;Y\u0026quot; dat = dat[, c(\u0026quot;Y\u0026quot;, \u0026quot;X1\u0026quot;, \u0026quot;X2\u0026quot;, \u0026quot;X3\u0026quot;)]\rdat = as.xts(dat)\rreturn(dat)\r}\rI next set the training period n_train = 100 periods and n_test = 1 period, or train on t days of data and test of t+1 days of data. This can be quite computationally expensive depending on the machine learning model you input but for a simple binary logistic regression classifier its relatively fast. I create the logistic function which returns the predicted probabilities.\nThe RollingBacktest function, runs the model on n_train periods of data and makes a prediction on n_test. That is, say we have 1000 days of data, the model will train on the first 100 days and predict on day 101, then retrain on days 2 to 101 days and predict on day 102 and so on, continuing until all 1000 days have passed.\ndf \u0026lt;- TS_preprocess(MSFT)\rn_train \u0026lt;- 100\rn_test \u0026lt;- 1\rLogistFun \u0026lt;- function(frm, dat, trainIndex, testIndex){\rLogitModel \u0026lt;- glm(frm, data = dat[trainIndex, ])\rpred \u0026lt;- predict(LogitModel, newdata = dat[testIndex, ], type = \u0026#39;response\u0026#39;)\rreturn(pred)\r}\rRollingBacktest \u0026lt;- function(dat, ntrain = n_train, ntest = n_test){\rstopifnot(\u0026#39;Y\u0026#39; %in% names(dat))\rfrm_ \u0026lt;- formula(reformulate(paste0(\u0026quot;X\u0026quot;, seq(2:ncol(dat))), \u0026quot;Y\u0026quot;))\rstride \u0026lt;- ntrain + ntest\rstartPosn \u0026lt;- seq(1, dim(dat)[1] - stride)\rtrain_index_list \u0026lt;- lapply(startPosn, function(i) seq(i, i + ntrain))\rtest_index_list \u0026lt;- lapply(startPosn, function(i) seq((i + ntrain + 1), (i + ntrain + ntest))) mapply(LogistFun, trainIndex = train_index_list, testIndex = test_index_list, MoreArgs = list(frm = frm_, dat = dat), SIMPLIFY = FALSE\r)\r}\rNow that I have the pre-process function, the logistic function and the backtest function, we can run the model through the TS_postprocess function, which applies everything.\nTS_postprocess \u0026lt;- function(dat, ntrain){\rresults = tail(dat, -(ntrain + 1))\rresults$probs \u0026lt;- RollingBacktest(dat)\rresults$predictions \u0026lt;- ifelse(results$probs \u0026gt; 0.6, 1, 0)\rprint(paste0(\u0026quot;Model Accuracy at the 0.60 prob cut-off \u0026quot;, mean(results$Y == results$predictions)))\rreturn(results)\r}\rout \u0026lt;- TS_postprocess(df, ntrain = n_train)\r## [1] \u0026quot;Model Accuracy at the 0.60 prob cut-off 0.518987341772152\u0026quot;\rout \u0026lt;- na.omit(cbind(MSFT, out))\rThe model is not very accurate…\nThe na.omit removes the NA values which were created from the SMA, RSI and momentum calculations which are the first few observations of the time series data.\nThe data looks like:\nout %\u0026gt;%\rhead() %\u0026gt;%\rkable() %\u0026gt;%\rkable_styling(bootstrap_options = c(\u0026quot;striped\u0026quot;, \u0026quot;hover\u0026quot;, \u0026quot;condensed\u0026quot;, \u0026quot;responsive\u0026quot;))\r\r\rMSFT.Open\r\rMSFT.High\r\rMSFT.Low\r\rMSFT.Close\r\rMSFT.Volume\r\rMSFT.Adjusted\r\rY\r\rX1\r\rX2\r\rX3\r\rprobs\r\rpredictions\r\r\r\r\r\r97.73225\r\r99.05627\r\r97.58513\r\r98.91896\r\r28653100\r\r98.91896\r\r1\r\r99.33186\r\r63.01370\r\r1.98113024\r\r0.6709360\r\r1\r\r\r\r99.41915\r\r100.54701\r\r99.17396\r\r99.90953\r\r26180800\r\r99.90952\r\r1\r\r99.20142\r\r59.54048\r\r0.06865286\r\r0.7426882\r\r1\r\r\r\r100.11548\r\r100.48817\r\r98.93857\r\r99.19357\r\r23198200\r\r99.19357\r\r0\r\r99.14061\r\r63.88638\r\r0.19615593\r\r0.7523711\r\r1\r\r\r\r98.47763\r\r98.83069\r\r97.71263\r\r98.47763\r\r38923100\r\r98.47763\r\r1\r\r99.16611\r\r51.80598\r\r-1.02979581\r\r0.7586200\r\r1\r\r\r\r98.07551\r\r98.18340\r\r95.42748\r\r96.49649\r\r35433300\r\r96.49649\r\r0\r\r99.04646\r\r43.39626\r\r-2.03996476\r\r0.7851164\r\r1\r\r\r\r96.91822\r\r98.15397\r\r96.84957\r\r97.17322\r\r26897200\r\r97.17323\r\r1\r\r98.78558\r\r32.78984\r\r-2.44207828\r\r0.6282847\r\r1\r\r\r\r\rWe can see that the model outputs predicted probabilities, I simply set the predictions column to give a 1 if the models predicted probability is \u0026gt; 0.5 or a 0 if it is \u0026lt; 0.5. The Y variable is the observed and the X1, X2 and X3 variables are the SMA, RSI and momentum.\nWe can now use the quantstrat package to backtest the model and see how the performance went.\nMSFT \u0026lt;- out\rstock(\u0026quot;MSFT\u0026quot;, currency = \u0026quot;USD\u0026quot;, multiplier = 1)\r## [1] \u0026quot;MSFT\u0026quot;\rstrategy.st \u0026lt;- portfolio.st \u0026lt;- account.st \u0026lt;- \u0026quot;RollingLogitStrategy\u0026quot;\rrm.strat(strategy.st)\rrm.strat(portfolio.st)\rrm.strat(account.st)\rinitPortf(name = portfolio.st,\rsymbols = symbols,\rinitDate = initDate,\rcurrency = \u0026#39;USD\u0026#39;)\r## [1] \u0026quot;RollingLogitStrategy\u0026quot;\rinitAcct(name = account.st,\rportfolios = portfolio.st,\rinitDate = initDate,\rcurrency = \u0026#39;USD\u0026#39;,\rinitEq = init_equity)\r## [1] \u0026quot;RollingLogitStrategy\u0026quot;\rinitOrders(portfolio.st,\rsymbols = symbols,\rinitDate = initDate)\rstrategy(strategy.st, store = TRUE)\rI add the signals to the strategy and give it some rules.\n\r1a)\r\rThe signal is that the first time the Logistic model produces a probability greater than 0.6 then assign the signal. The sigThreshold is a quantstrat function, the others are sigComparison, sigCrossover and sigFormula. It calls upon the threshold value in the list of arguments, the column it looks for is the probs column which the predicted probabilities are output to, gt means greater than. It basically creates a new column called logSig and it would be similar to ifelse(df$probs \u0026gt; 0.6, 1, 0) as far as I understand.\n\r1b)\rThe rule for the strategy is to take sigcol which is the label we gave our signal in the previous lines which is called longSig. If longSig = 1, execute a market order going long, buying at the next days open price, the transaction fees were set at the start of the strategy. We call this rule, EnterLONG.\r\rnMult_orderqty \u0026lt;- 2\raddPosLimit(portfolio.st, symbol = \u0026quot;MSFT\u0026quot;, timestamp = initDate, maxpos = nMult_orderqty * .orderqty)\r# Objective: Buy when the probability is gt 0.60, using cross = TRUE\r# 1.a)\radd.signal(strategy = strategy.st,\rname = \u0026quot;sigThreshold\u0026quot;,\rarguments = list(threshold = 0.6,\rcolumn = \u0026quot;probs\u0026quot;,\rrelationship = \u0026quot;gt\u0026quot;,\rcross = TRUE),\rlabel = \u0026quot;longSig\u0026quot;)\r## [1] \u0026quot;RollingLogitStrategy\u0026quot;\r# 1.b)\r# # Adding the rules, enter at the open price when prob \u0026gt; 0.60 for the first time, taking transaction fees into account\radd.rule(strategy = strategy.st,\rname = \u0026quot;ruleSignal\u0026quot;,\rarguments = list(sigcol = \u0026quot;longSig\u0026quot;, # check the ifelse predictions statement\rsigval = 1,\rorderqty = .orderqty,\rordertype = \u0026quot;market\u0026quot;,\rorderside = \u0026quot;long\u0026quot;,\rosFUN = osMaxPos,\rprefer = \u0026quot;Open\u0026quot;,\rreplace = TRUE,\rTxnFees = .txnfees),\rtype = \u0026quot;enter\u0026quot;,\rlabel = \u0026quot;EnterLONG\u0026quot;)\r## [1] \u0026quot;RollingLogitStrategy\u0026quot;\rFrom the Logistic model we have added our signal to buy when the probability of the next days price is greater than 0.60. So far we just keep buying when the probability of the logistic model passes over 0.60 but we have no position to sell when the model predicts something different.\nI thought it might be interesting to exit the strategy when the model is undecided or makes a very low predicted probability. I set this threshold to be less than 0.4 based on the probability density plot below. So we are making trades at the tail ends of the distribution, buying when the model is confident and selling when it is unsure.\nplot(density(out$probs))\rAdd the signals and rules for exiting the strategy. Using a similar principle as before, I create a signal when the probability is less than 0.4 and call it exitlongSig.\n\rCareful here when setting type = \"exit\" and orderside = \"long\". Previously had it set to type = exit and orderside = short! which is completely wrong.\r\r# 2.a) # create the signal of when we should be looking to exit\r# #exit when prob drops below 0.4 for the first time\radd.signal(strategy = strategy.st,\rname = \u0026quot;sigThreshold\u0026quot;,\rarguments = list(threshold = 0.4,\rcolumn = \u0026quot;probs\u0026quot;,\rrelationship = \u0026quot;lt\u0026quot;,\rcross = TRUE),\rlabel = \u0026quot;exitlongSig\u0026quot;)\r## [1] \u0026quot;RollingLogitStrategy\u0026quot;\r# 2.b) # Add that signal to the rule of exiting\radd.rule(strategy.st,\rname = \u0026quot;ruleSignal\u0026quot;,\rarguments = list(sigcol = \u0026quot;exitlongSig\u0026quot;,\rsigval = 1,\rorderqty = \u0026quot;all\u0026quot;,\rordertype = \u0026quot;market\u0026quot;,\rorderside = \u0026quot;long\u0026quot;,\rosFUN = osMaxPos,\rprefer = \u0026quot;Open\u0026quot;,\rreplace = TRUE,\rTxnFees = .txnfees),\rtype = \u0026quot;exit\u0026quot;,\rlabel = \u0026quot;ExitLong\u0026quot;)\r## [1] \u0026quot;RollingLogitStrategy\u0026quot;\rWe can finally apply the strategy and see how it performs. It doesn’t make many transactions due to the backtesting being quite restrictive.\napplyStrategy(strategy.st, portfolios = portfolio.st)\r## [1] \u0026quot;2018-07-05 00:00:00 MSFT 10 @ 97.5851340312762\u0026quot;\r## [1] \u0026quot;2018-07-11 00:00:00 MSFT 10 @ 99.2033819340086\u0026quot;\r## [1] \u0026quot;2018-12-06 00:00:00 MSFT -20 @ 104.632969498356\u0026quot;\r## [1] \u0026quot;2018-12-19 00:00:00 MSFT 10 @ 102.487313341245\u0026quot;\r## [1] \u0026quot;2019-01-09 00:00:00 MSFT 10 @ 102.694956688076\u0026quot;\r## [1] \u0026quot;2019-02-21 00:00:00 MSFT -20 @ 106.15227613615\u0026quot;\r## [1] \u0026quot;2019-04-11 00:00:00 MSFT 10 @ 119.69686840234\u0026quot;\r## [1] \u0026quot;2019-04-24 00:00:00 MSFT 10 @ 124.91014659961\u0026quot;\r## [1] \u0026quot;2019-06-13 00:00:00 MSFT -20 @ 131.541967172209\u0026quot;\r## [1] \u0026quot;2019-06-27 00:00:00 MSFT 10 @ 133.694801331394\u0026quot;\r## [1] \u0026quot;2019-07-09 00:00:00 MSFT 10 @ 135.548629168169\u0026quot;\r## [1] \u0026quot;2019-08-23 00:00:00 MSFT -20 @ 137.190002\u0026quot;\r## [1] \u0026quot;2019-08-28 00:00:00 MSFT 10 @ 134.880005\u0026quot;\r## [1] \u0026quot;2019-09-05 00:00:00 MSFT -10 @ 139.110001\u0026quot;\rupdatePortf(portfolio.st)\r## [1] \u0026quot;RollingLogitStrategy\u0026quot;\rupdateAcct(account.st)\r## [1] \u0026quot;RollingLogitStrategy\u0026quot;\rupdateEndEq(account.st)\r## [1] \u0026quot;RollingLogitStrategy\u0026quot;\rchart.Posn(portfolio.st, Symbol = \u0026quot;MSFT\u0026quot;)\r #TA=\u0026quot;add_SMA(n = 10, col = 2); add_SMA(n = 30, col = 4)\u0026quot;)\rLook at the mktdata which is where our signals and predictions are stored.\nmktdata %\u0026gt;%\rdata.frame() %\u0026gt;%\rhead(10) %\u0026gt;%\rkable() %\u0026gt;%\rkable_styling(bootstrap_options = c(\u0026quot;striped\u0026quot;, \u0026quot;hover\u0026quot;, \u0026quot;condensed\u0026quot;, \u0026quot;responsive\u0026quot;))\r\r\r\rMSFT.Open\r\rMSFT.High\r\rMSFT.Low\r\rMSFT.Close\r\rMSFT.Volume\r\rMSFT.Adjusted\r\rY\r\rX1\r\rX2\r\rX3\r\rprobs\r\rpredictions\r\rlongSig\r\rexitlongSig\r\r\r\r\r\r2018-06-19\r\r97.73225\r\r99.05627\r\r97.58513\r\r98.91896\r\r28653100\r\r98.91896\r\r1\r\r99.33186\r\r63.01370\r\r1.9811302\r\r0.6709360\r\r1\r\rNA\r\rNA\r\r\r\r2018-06-20\r\r99.41915\r\r100.54701\r\r99.17396\r\r99.90953\r\r26180800\r\r99.90952\r\r1\r\r99.20142\r\r59.54048\r\r0.0686529\r\r0.7426882\r\r1\r\r0\r\r0\r\r\r\r2018-06-21\r\r100.11548\r\r100.48817\r\r98.93857\r\r99.19357\r\r23198200\r\r99.19357\r\r0\r\r99.14061\r\r63.88638\r\r0.1961559\r\r0.7523711\r\r1\r\r0\r\r0\r\r\r\r2018-06-22\r\r98.47763\r\r98.83069\r\r97.71263\r\r98.47763\r\r38923100\r\r98.47763\r\r1\r\r99.16611\r\r51.80598\r\r-1.0297958\r\r0.7586200\r\r1\r\r0\r\r0\r\r\r\r2018-06-25\r\r98.07551\r\r98.18340\r\r95.42748\r\r96.49649\r\r35433300\r\r96.49649\r\r0\r\r99.04646\r\r43.39626\r\r-2.0399648\r\r0.7851164\r\r1\r\r0\r\r0\r\r\r\r2018-06-26\r\r96.91822\r\r98.15397\r\r96.84957\r\r97.17322\r\r26897200\r\r97.17323\r\r1\r\r98.78558\r\r32.78984\r\r-2.4420783\r\r0.6282847\r\r1\r\r0\r\r0\r\r\r\r2018-06-27\r\r97.66360\r\r98.09512\r\r95.52555\r\r95.66285\r\r31298400\r\r95.66285\r\r0\r\r98.56687\r\r35.08314\r\r-2.5009206\r\r0.7361390\r\r1\r\r0\r\r0\r\r\r\r2018-06-28\r\r95.50593\r\r97.20264\r\r95.38824\r\r96.73187\r\r26650700\r\r96.73187\r\r1\r\r98.24224\r\r35.29932\r\r-3.4424524\r\r0.6387378\r\r1\r\r0\r\r0\r\r\r\r2018-06-29\r\r97.02610\r\r97.98725\r\r96.43765\r\r96.71226\r\r28053200\r\r96.71226\r\r0\r\r97.96861\r\r37.17949\r\r-2.6284247\r\r0.6327528\r\r1\r\r0\r\r0\r\r\r\r2018-07-02\r\r96.21207\r\r98.13435\r\r96.11400\r\r98.08532\r\r19564500\r\r98.08531\r\r1\r\r97.81954\r\r39.04847\r\r-2.1968885\r\r0.5659825\r\r0\r\r0\r\r0\r\r\r\r\rSo if we trained a simple logistic model on 100 days of data to give us the next days prediction everyday since June 2018 and only invest if the logistic models prediction is greater than 0.60 and only sell if the logistic models prediction is less than 0.40 then out cumulative P\u0026amp;L would be $334 with a max drawdown of $61.\nI have probably (almost certainly) gone wrong at somepoint using the quantstrat package so the results will probably not generalise well to other assets, especially using a logistic model with 3 regressors! But it was a fun exercise using the quantstrat package.\nI will revist and modify this markdown file.\n\r","date":1569715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1569715200,"objectID":"45851fe316f0807f4675db63d5389cff","permalink":"/post/quantstrat-rolling-logistic/quantstrat/","publishdate":"2019-09-29T00:00:00Z","relpermalink":"/post/quantstrat-rolling-logistic/quantstrat/","section":"post","summary":"I generate a rolling logistic backtesting function which outputs predicted probabilities, based on these probabilities I construct investment criteria and test whether positive returns can be made (lots of work still to do)","tags":["trading","finance","yahoo finance","quantstrat","technical analysis","backtesting"],"title":"Learning the Quantstrat and Blotter packages","type":"post"},{"authors":null,"categories":["Finance"],"content":"\r\rCorporate Finance and Managerial Finance\rI created a script to download any company from Yahoo Finance and compute the DuPont, Need for Funds and Working Capital based on companies fundamentals and plot these for each company. I suggest you first watch these two short videos from IESE Business School - part 1 here and part 2 here.\nFirstly load in some packages:\nlibrary(knitr)\rlibrary(kableExtra)\rlibrary(tidyquant)\rlibrary(quantmod)\rlibrary(tibble)\rlibrary(tidyr)\rlibrary(reshape2)\rlibrary(ggplot2)\rlibrary(rvest)\rI first define the function to scrape Yahoo Finance and collect the Balance Sheet, Income Statement and Cash Flows (it looks complicated but it works):\ngetFin \u0026lt;- function(stock){\rfor (i in 1:length(stock)) {\rtryCatch(\r{\r# Collect the Income Statement data\rlink \u0026lt;- \u0026quot;https://finance.yahoo.com/quote/\u0026quot;\rlink \u0026lt;- paste0(link, stock[i], \u0026quot;/financials?p=\u0026quot;, stock[i])\rwahis.session \u0026lt;- html_session(link)\rp \u0026lt;- wahis.session %\u0026gt;%\rhtml_nodes(xpath = \u0026#39;//*[@id=\u0026quot;Col1-1-Financials-Proxy\u0026quot;]/section/div[3]/table\u0026#39;)%\u0026gt;%\rhtml_table(fill = TRUE)\rIncomeStatement \u0026lt;- p[[1]]\rcolnames(IncomeStatement) \u0026lt;- paste(IncomeStatement[1,])\rIncomeStatement \u0026lt;- IncomeStatement[-c(1,5,12,20,25),]\rnames_row \u0026lt;- paste(IncomeStatement[,1])\rIncomeStatement \u0026lt;- IncomeStatement[,-1]\rIncomeStatement \u0026lt;- apply(IncomeStatement, 2, function(x){gsub(\u0026quot;,\u0026quot;,\u0026quot;\u0026quot;,x)})\rIncomeStatement \u0026lt;- as.data.frame(apply(IncomeStatement, 2, as.numeric))\rrownames(IncomeStatement) \u0026lt;- paste(names_row)\rtemp1 \u0026lt;- IncomeStatement\r# Collect the Balance Sheet data\rlink \u0026lt;- \u0026quot;https://finance.yahoo.com/quote/\u0026quot;\rlink \u0026lt;- paste0(link, stock[i],\u0026quot;/balance-sheet?p=\u0026quot;, stock[i])\rwahis.session \u0026lt;- html_session(link)\rp \u0026lt;- wahis.session %\u0026gt;%\rhtml_nodes(xpath = \u0026#39;//*[@id=\u0026quot;Col1-1-Financials-Proxy\u0026quot;]/section/div[3]/table\u0026#39;)%\u0026gt;%\rhtml_table(fill = TRUE)\rBalanceSheet \u0026lt;- p[[1]]\rcolnames(BalanceSheet) \u0026lt;- BalanceSheet[1,]\rBalanceSheet \u0026lt;- BalanceSheet[-c(1,2,17,28),]\rnames_row \u0026lt;- BalanceSheet[,1]\rBalanceSheet \u0026lt;- BalanceSheet[,-1]\rBalanceSheet \u0026lt;- apply(BalanceSheet, 2, function(x){gsub(\u0026quot;,\u0026quot;,\u0026quot;\u0026quot;,x)})\rBalanceSheet \u0026lt;- as.data.frame(apply(BalanceSheet, 2, as.numeric))\rrownames(BalanceSheet) \u0026lt;- paste(names_row)\rtemp2 \u0026lt;- BalanceSheet\r# Collect the Cash Flow data\rlink \u0026lt;- \u0026quot;https://finance.yahoo.com/quote/\u0026quot;\rlink \u0026lt;- paste0(link, stock[i], \u0026quot;/cash-flow?p=\u0026quot;, stock[i])\rwahis.session \u0026lt;- html_session(link)\rp \u0026lt;- wahis.session %\u0026gt;%\rhtml_nodes(xpath = \u0026#39;//*[@id=\u0026quot;Col1-1-Financials-Proxy\u0026quot;]/section/div[3]/table\u0026#39;)%\u0026gt;%\rhtml_table(fill = TRUE)\rCashFlow \u0026lt;- p[[1]]\rcolnames(CashFlow) \u0026lt;- CashFlow[1,]\rCashFlow \u0026lt;- CashFlow[-c(1,3,11,16),]\rnames_row \u0026lt;- CashFlow[,1]\rCashFlow \u0026lt;- CashFlow[,-1]\rCashFlow \u0026lt;- apply(CashFlow, 2, function(x){gsub(\u0026quot;,\u0026quot;,\u0026quot;\u0026quot;,x)})\rCashFlow \u0026lt;- as.data.frame(apply(CashFlow, 2, as.numeric))\rrownames(CashFlow) \u0026lt;- paste(names_row)\rtemp3 \u0026lt;- CashFlow\rassign(paste0(stock[i],\u0026#39;.f\u0026#39;),value = list(IncomeStatement = temp1, BalanceSheet = temp2, CashFlow = temp3), envir = parent.frame())\r},\rerror = function(cond){\rmessage(stock[i], \u0026quot;Give error \u0026quot;,cond)\r}\r)\r}\r}\rNext I collect some tickers, I choose Ford, General Electric, International Business Machine and Unilever but feel free to add in more tickers - what ever financial data can be found on Yahoo Finance will work- just add to the symbols part of the code.\nsymbols \u0026lt;- c(\u0026quot;F\u0026quot;, \u0026quot;GE\u0026quot;, \u0026quot;IBM\u0026quot;, \u0026quot;UN\u0026quot;)\rgetFin(symbols)\rsymbols.f \u0026lt;- sapply(symbols, function(x) { paste0(x, \u0026quot;.f\u0026quot;) })\rtickers \u0026lt;- list2env(mget(symbols.f))\rIS \u0026lt;- lapply(tickers, \u0026quot;[[\u0026quot;, \u0026quot;IncomeStatement\u0026quot;)\rBS \u0026lt;- lapply(tickers, \u0026quot;[[\u0026quot;, \u0026quot;BalanceSheet\u0026quot;)\rCF \u0026lt;- lapply(tickers, \u0026quot;[[\u0026quot;, \u0026quot;CashFlow\u0026quot;)\rIS \u0026lt;- as.data.frame(IS)\rBS \u0026lt;- as.data.frame(BS)\rCF \u0026lt;- as.data.frame(CF)\rWhere IS is Income Statement, BS is Balance SheetandCF` is Cash Flow.\n\rHow the Income Statement looks:\rTable 1: Income Statement\r\r\r\r\rUN.f.12.31.2018\r\rUN.f.12.31.2017\r\rUN.f.12.31.2016\r\rUN.f.12.31.2015\r\rIBM.f.12.31.2018\r\rIBM.f.12.31.2017\r\rIBM.f.12.31.2016\r\rIBM.f.12.31.2015\r\rGE.f.12.31.2018\r\rGE.f.12.31.2017\r\rGE.f.12.31.2016\r\rGE.f.12.31.2015\r\rF.f.12.31.2018\r\rF.f.12.31.2017\r\rF.f.12.31.2016\r\rF.f.12.31.2015\r\r\r\r\r\rTotal Revenue\r\r50982000\r\r53715000\r\r52713000\r\r53272000\r\r79591000\r\r79139000\r\r79919000\r\r81741000\r\r121615000\r\r118243000\r\r119468000\r\r115834000\r\r160338000\r\r156776000\r\r151800000\r\r149558000\r\r\r\rCost of Revenue\r\r28769000\r\r30547000\r\r30229000\r\r30808000\r\r42655000\r\r42196000\r\r41402000\r\r41057000\r\r98396000\r\r106858000\r\r94886000\r\r90111000\r\r145459000\r\r140218000\r\r134933000\r\r131410000\r\r\r\rGross Profit\r\r22213000\r\r23168000\r\r22484000\r\r22464000\r\r36936000\r\r36943000\r\r38517000\r\r40684000\r\r23219000\r\r11385000\r\r24582000\r\r25723000\r\r14879000\r\r16558000\r\r16867000\r\r18148000\r\r\r\rResearch Development\r\r900000\r\r900000\r\r978000\r\r1005000\r\r5379000\r\r5590000\r\r5726000\r\r5247000\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rSelling General and Administrative\r\r8803000\r\r13507000\r\r13799000\r\r14065000\r\r20325000\r\r20900000\r\r20225000\r\r19589000\r\r15134000\r\r15389000\r\r14707000\r\r16327000\r\r10460000\r\r9676000\r\r12504000\r\r10097000\r\r\r\rNon Recurring\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rOthers\r\r41427000\r\r44031000\r\r44031000\r\r44031000\r\r-998000\r\r-1445000\r\r-1604000\r\r-669000\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rTotal Operating Expenses\r\r38472000\r\r44954000\r\r45006000\r\r45878000\r\r67361000\r\r67241000\r\r65749000\r\r65224000\r\r113530000\r\r122247000\r\r109593000\r\r106438000\r\r155919000\r\r149894000\r\r147437000\r\r141507000\r\r\r\rOperating Income or Loss\r\r12510000\r\r8761000\r\r7707000\r\r7394000\r\r12230000\r\r11898000\r\r14170000\r\r16517000\r\r8085000\r\r-4004000\r\r9875000\r\r9396000\r\r4419000\r\r6882000\r\r4363000\r\r8051000\r\r\r\rTotal Other Income/Expenses Net\r\r-127000\r\r-608000\r\r-238000\r\r-174000\r\r-888000\r\r-498000\r\r-1840000\r\r-572000\r\r-28220000\r\r-7147000\r\r-2843000\r\r-1211000\r\r-74000\r\r1277000\r\r2421000\r\r2201000\r\r\r\rEarnings Before Interest and Taxes\r\r12510000\r\r8761000\r\r7707000\r\r7394000\r\r12230000\r\r11898000\r\r14170000\r\r16517000\r\r8085000\r\r-4004000\r\r9875000\r\r9396000\r\r4419000\r\r6882000\r\r4363000\r\r8051000\r\r\r\rInterest Expense\r\r-627000\r\r-608000\r\r-572000\r\r-552000\r\r-723000\r\r-615000\r\r-630000\r\r-468000\r\r-2708000\r\r-2753000\r\r-2026000\r\r-1706000\r\r-1228000\r\r-1190000\r\r-951000\r\r-773000\r\r\r\rIncome Before Tax\r\r12383000\r\r8153000\r\r7469000\r\r7220000\r\r11342000\r\r11400000\r\r12330000\r\r15945000\r\r-20135000\r\r-11151000\r\r7032000\r\r8185000\r\r4345000\r\r8159000\r\r6784000\r\r10252000\r\r\r\rIncome Tax Expense\r\r2575000\r\r1667000\r\r1922000\r\r1961000\r\r2619000\r\r5642000\r\r449000\r\r2581000\r\r583000\r\r-2611000\r\r-1133000\r\r6485000\r\r650000\r\r402000\r\r2184000\r\r2881000\r\r\r\rMinority Interest\r\r720000\r\r758000\r\r626000\r\r643000\r\r134000\r\r131000\r\r146000\r\r162000\r\r20882000\r\r20859000\r\r4688000\r\r4836000\r\r134000\r\r126000\r\r113000\r\r109000\r\r\r\rNet Income From Continuing Ops\r\r9808000\r\r6486000\r\r5547000\r\r5259000\r\r8723000\r\r5758000\r\r11881000\r\r13364000\r\r-20718000\r\r-8540000\r\r8165000\r\r1700000\r\r3695000\r\r7757000\r\r4600000\r\r7371000\r\r\r\rDiscontinued Operations\r\rNA\r\rNA\r\rNA\r\rNA\r\r5000\r\r-5000\r\r-9000\r\r-174000\r\r-1726000\r\r-309000\r\r-954000\r\r-7807000\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rExtraordinary Items\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rEffect Of Accounting Changes\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rOther Items\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rNet Income\r\r9389000\r\r6053000\r\r5184000\r\r4909000\r\r8728000\r\r5753000\r\r11872000\r\r13190000\r\r-22355000\r\r-8484000\r\r7500000\r\r-6126000\r\r3677000\r\r7731000\r\r4589000\r\r7373000\r\r\r\rPreferred Stock And Other Adjustments\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rNet Income Applicable To Common Shares\r\r9389000\r\r6053000\r\r5184000\r\r4909000\r\r8728000\r\r5753000\r\r11872000\r\r13190000\r\r-22809000\r\r-8944000\r\r6829000\r\r-6135000\r\r3677000\r\r7731000\r\r4589000\r\r7373000\r\r\r\r\r\rHow the Balance Sheet looks:\rTable 2: Balance Sheet\r\r\r\r\rUN.f.12.31.2018\r\rUN.f.12.31.2017\r\rUN.f.12.31.2016\r\rUN.f.12.31.2015\r\rIBM.f.12.31.2018\r\rIBM.f.12.31.2017\r\rIBM.f.12.31.2016\r\rIBM.f.12.31.2015\r\rGE.f.12.31.2018\r\rGE.f.12.31.2017\r\rGE.f.12.31.2016\r\rGE.f.12.31.2015\r\rF.f.12.31.2018\r\rF.f.12.31.2017\r\rF.f.12.31.2016\r\rF.f.12.31.2015\r\r\r\r\r\rCash And Cash Equivalents\r\r3230000\r\r3317000\r\r3382000\r\r2302000\r\r11379000\r\r11972000\r\r7826000\r\r7686000\r\r16369000\r\r18211000\r\r10525000\r\r10372000\r\r7111000\r\r8934000\r\r7828000\r\r5386000\r\r\r\rShort Term Investments\r\r681000\r\r521000\r\r565000\r\r596000\r\r618000\r\r608000\r\r701000\r\r508000\r\rNA\r\rNA\r\rNA\r\rNA\r\r15925000\r\r17554000\r\r19642000\r\r18181000\r\r\r\rNet Receivables\r\r4822000\r\r4204000\r\r3854000\r\r3416000\r\r8596000\r\r10380000\r\r10239000\r\r9534000\r\r19874000\r\r24209000\r\r24076000\r\r43013000\r\r3698000\r\r10599000\r\r11102000\r\r11042000\r\r\r\rInventory\r\r4301000\r\r3962000\r\r4278000\r\r4335000\r\r1682000\r\r1583000\r\r1553000\r\r1551000\r\r19271000\r\r19419000\r\r22354000\r\r22515000\r\r11220000\r\r11176000\r\r8898000\r\r8319000\r\r\r\rOther Current Assets\r\r1387000\r\r4356000\r\r1120000\r\r1352000\r\r2902000\r\r2266000\r\r532000\r\r293000\r\r7441000\r\r6720000\r\r3885000\r\r5109000\r\r2567000\r\r3649000\r\r3145000\r\r2704000\r\r\r\rTotal Current Assets\r\r15481000\r\r16983000\r\r13884000\r\r12686000\r\r49146000\r\r49735000\r\r43889000\r\r42504000\r\r95974000\r\r116253000\r\r131436000\r\r280896000\r\r114649000\r\r116801000\r\r108461000\r\r102587000\r\r\r\rLong Term Investments\r\r637000\r\r565000\r\r491000\r\r592000\r\r439000\r\r581000\r\r659000\r\r1131000\r\r34920000\r\r38696000\r\r44313000\r\r31973000\r\r2595000\r\r3448000\r\r3523000\r\r3244000\r\r\r\rProperty, plant and equipment\r\r10347000\r\r10411000\r\r11673000\r\r11058000\r\r10792000\r\r11116000\r\r10830000\r\r10727000\r\r50749000\r\r53874000\r\r50518000\r\r54095000\r\r37883000\r\r36901000\r\r33692000\r\r32177000\r\r\r\rGoodwill\r\r17341000\r\r16881000\r\r17624000\r\r16213000\r\r36265000\r\r36788000\r\r36199000\r\r32021000\r\r58710000\r\r83968000\r\r68070000\r\r65526000\r\r264000\r\r75000\r\r50000\r\r6000\r\r\r\rIntangible Assets\r\r12152000\r\r11520000\r\r9809000\r\r8846000\r\r3087000\r\r3742000\r\r4688000\r\r3487000\r\r18159000\r\r20273000\r\r16436000\r\r17797000\r\r178000\r\r213000\r\r198000\r\r124000\r\r\r\rAccumulated Amortization\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rOther Assets\r\r3498000\r\r3925000\r\r2948000\r\r2903000\r\r14505000\r\r13844000\r\r12184000\r\r10612000\r\r49713000\r\r56181000\r\r52042000\r\r42784000\r\r16755000\r\r18215000\r\r14894000\r\r16154000\r\r\r\rDeferred Long Term Asset Charges\r\r1117000\r\r1085000\r\r1354000\r\r1185000\r\r5216000\r\r4862000\r\r5224000\r\r4822000\r\r12432000\r\r8819000\r\r1833000\r\r3105000\r\r10412000\r\r10762000\r\r9705000\r\r11509000\r\r\r\rTotal Assets\r\r59456000\r\r60285000\r\r56429000\r\r52298000\r\r123382000\r\r125356000\r\r117470000\r\r110495000\r\r309129000\r\r369245000\r\r365183000\r\r493071000\r\r256540000\r\r258496000\r\r237951000\r\r224925000\r\r\r\rAccounts Payable\r\r9121000\r\r8217000\r\r8591000\r\r8296000\r\r6558000\r\r6451000\r\r6209000\r\r6028000\r\r17153000\r\r15172000\r\r14435000\r\r13680000\r\r20426000\r\r23282000\r\r21296000\r\r20272000\r\r\r\rShort/Current Long Term Debt\r\r2012000\r\r1537000\r\r2173000\r\r1495000\r\r7055000\r\r5215000\r\r6239000\r\r5271000\r\rNA\r\rNA\r\rNA\r\rNA\r\r1700000\r\r1960000\r\r1361000\r\r961000\r\r\r\rOther Current Liabilities\r\r3194000\r\r2787000\r\r2392000\r\r2759000\r\r14680000\r\r16451000\r\r14693000\r\r14281000\r\r19710000\r\r19531000\r\r20772000\r\r27453000\r\r18868000\r\r16402000\r\r16277000\r\r16084000\r\r\r\rTotal Current Liabilities\r\r19772000\r\r23177000\r\r20556000\r\r20019000\r\r38227000\r\r37363000\r\r36275000\r\r34269000\r\r49937000\r\r60043000\r\r70364000\r\r138270000\r\r95569000\r\r94600000\r\r90281000\r\r82336000\r\r\r\rLong Term Debt\r\r21535000\r\r16342000\r\r11011000\r\r9696000\r\r35681000\r\r39871000\r\r34663000\r\r33431000\r\r95234000\r\r108575000\r\r105080000\r\r144659000\r\r11833000\r\r13174000\r\r13222000\r\r11060000\r\r\r\rOther Liabilities\r\r5742000\r\r6259000\r\r7748000\r\r6343000\r\r32544000\r\r30397000\r\r28140000\r\r28371000\r\r74883000\r\r84243000\r\r83040000\r\r79175000\r\r23088000\r\r25526000\r\r25086000\r\r23959000\r\r\r\rDeferred Long Term Liability Charges\r\rNA\r\rNA\r\rNA\r\rNA\r\r2676000\r\r2136000\r\r1496000\r\r1626000\r\r5739000\r\r5484000\r\r5534000\r\rNA\r\rNA\r\r232000\r\rNA\r\rNA\r\r\r\rMinority Interest\r\r720000\r\r758000\r\r626000\r\r643000\r\r134000\r\r131000\r\r146000\r\r162000\r\r20882000\r\r20859000\r\r4688000\r\r4836000\r\r134000\r\r126000\r\r113000\r\r109000\r\r\r\rNegative Goodwill\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rTotal Liabilities\r\r47164000\r\r45898000\r\r39449000\r\r36216000\r\r106452000\r\r107631000\r\r99078000\r\r96071000\r\r257266000\r\r292356000\r\r284667000\r\r389961000\r\r220474000\r\r222792000\r\r208668000\r\r196174000\r\r\r\rMisc. Stocks Options Warrants\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rRedeemable Preferred Stock\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rPreferred Stock\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rCommon Stock\r\r464000\r\r484000\r\r484000\r\r484000\r\r55151000\r\r54566000\r\r53935000\r\r53262000\r\r702000\r\r702000\r\r702000\r\r702000\r\r41000\r\r41000\r\r41000\r\r41000\r\r\r\rRetained Earnings\r\r26265000\r\r26648000\r\r23179000\r\r22619000\r\r159206000\r\r153126000\r\r152759000\r\r146124000\r\r93109000\r\r117245000\r\r139532000\r\r140020000\r\r22668000\r\r21906000\r\r15634000\r\r14414000\r\r\r\rTreasury Stock\r\r-15286000\r\r-13633000\r\r-7443000\r\r-7816000\r\r-197561000\r\r-190098000\r\r-188448000\r\r-185124000\r\r-62836000\r\r-61923000\r\r-64412000\r\r-42454000\r\r-8783000\r\r-8212000\r\r-8135000\r\r-7234000\r\r\r\rCapital Surplus\r\r129000\r\r130000\r\r134000\r\r152000\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\r22006000\r\r21843000\r\r21630000\r\r21421000\r\r\r\rOther Stockholder Equity\r\r-5105000\r\r-4425000\r\r-3279000\r\r-3697000\r\r-29490000\r\r-26591000\r\r-29398000\r\r-29606000\r\r21089000\r\r22979000\r\r18626000\r\r21085000\r\r-7366000\r\r-6959000\r\r-7013000\r\r-6257000\r\r\r\rTotal stockholders’ equity\r\r11572000\r\r13629000\r\r16354000\r\r15439000\r\r16796000\r\r17594000\r\r18246000\r\r14262000\r\r30975000\r\r56024000\r\r75822000\r\r98268000\r\r35932000\r\r35578000\r\r29170000\r\r28642000\r\r\r\rNet Tangible Assets\r\r-17921000\r\r-14772000\r\r-11079000\r\r-9620000\r\r-22556000\r\r-22936000\r\r-22641000\r\r-21246000\r\r-46798000\r\r-48217000\r\r-11052000\r\r14945000\r\r35932000\r\r35290000\r\r28922000\r\r28512000\r\r\r\r\r\rHow the Cash Flow Statement looks:\rTable 3: Cash Flow Statements\r\r\r\r\rUN.f.12.31.2018\r\rUN.f.12.31.2017\r\rUN.f.12.31.2016\r\rUN.f.12.31.2015\r\rIBM.f.12.31.2018\r\rIBM.f.12.31.2017\r\rIBM.f.12.31.2016\r\rIBM.f.12.31.2015\r\rGE.f.12.31.2018\r\rGE.f.12.31.2017\r\rGE.f.12.31.2016\r\rGE.f.12.31.2015\r\rF.f.12.31.2018\r\rF.f.12.31.2017\r\rF.f.12.31.2016\r\rF.f.12.31.2015\r\r\r\r\r\rNet Income\r\r9389000\r\r6053000\r\r5184000\r\r4909000\r\r8728000\r\r5753000\r\r11872000\r\r13190000\r\r-22355000\r\r-8484000\r\r7500000\r\r-6126000\r\r3677000\r\r7731000\r\r4589000\r\r7373000\r\r\r\rDepreciation\r\r1450000\r\r1214000\r\r1464000\r\r1370000\r\r4480000\r\r4541000\r\r4381000\r\r3855000\r\r7796000\r\r7429000\r\r7070000\r\r6509000\r\r8308000\r\r8453000\r\r8717000\r\r7966000\r\r\r\rAdjustments To Net Income\r\r-3590000\r\r-231000\r\r348000\r\r331000\r\r1485000\r\r-383000\r\r-526000\r\r2406000\r\r18532000\r\r9305000\r\r-14391000\r\r21411000\r\r-677000\r\r-910000\r\r3607000\r\r-2153000\r\r\r\rChanges In Accounts Receivables\r\r-1298000\r\r-506000\r\r142000\r\r2000\r\r1006000\r\r1297000\r\r712000\r\r812000\r\r-430000\r\r-2846000\r\r1460000\r\r-52000\r\r-2239000\r\r-2297000\r\r-2855000\r\r-3563000\r\r\r\rChanges In Liabilities\r\r976000\r\r542000\r\r-281000\r\r847000\r\r126000\r\r47000\r\r197000\r\r81000\r\r1697000\r\r1343000\r\r2953000\r\r-1537000\r\r6781000\r\r6089000\r\r6595000\r\r7758000\r\r\r\rChanges In Inventories\r\r-471000\r\r-104000\r\r190000\r\r-129000\r\r-127000\r\r18000\r\r-14000\r\r133000\r\r-902000\r\r1183000\r\r-815000\r\r-314000\r\r-828000\r\r-970000\r\r-803000\r\r-1155000\r\r\r\rChanges In Other Operating Activities\r\r-793000\r\r-68000\r\r-68000\r\r-68000\r\r-451000\r\r5451000\r\r462000\r\r-3222000\r\r-92000\r\r-1898000\r\r-2617000\r\r-2617000\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rTotal Cash Flow From Operating Activities\r\r6753000\r\r7292000\r\r7047000\r\r7330000\r\r15247000\r\r16724000\r\r17084000\r\r17255000\r\r4246000\r\r6032000\r\r1160000\r\r19891000\r\r15022000\r\r18096000\r\r19850000\r\r16226000\r\r\r\rCapital Expenditure\r\r-1329000\r\r-1509000\r\r-1804000\r\r-1867000\r\r-3395000\r\r-3229000\r\r-3567000\r\r-3579000\r\r-7695000\r\r-7371000\r\r-7199000\r\r-7309000\r\r-7785000\r\r-7049000\r\r-6992000\r\r-7196000\r\r\r\rInvestments\r\r47000\r\r-215000\r\r100000\r\r-62000\r\r-554000\r\r-1039000\r\r-161000\r\r-231000\r\rNA\r\rNA\r\rNA\r\rNA\r\r3387000\r\r2331000\r\r-2074000\r\r-513000\r\r\r\rOther Cash flows from Investing Activities\r\r264000\r\r292000\r\r291000\r\r295000\r\r-1000\r\r-1000\r\r-1000\r\r1000\r\r12953000\r\r10133000\r\r-10317000\r\r-5316000\r\r181000\r\r71000\r\r937000\r\r634000\r\r\r\rTotal Cash Flows From Investing Activities\r\r4644000\r\r-5879000\r\r-3188000\r\r-3539000\r\r-4913000\r\r-7081000\r\r-10928000\r\r-8159000\r\r18239000\r\r6564000\r\r49135000\r\r59488000\r\r-16261000\r\r-19360000\r\r-25302000\r\r-26162000\r\r\r\rDividends Paid\r\r-4066000\r\r-3916000\r\r-3609000\r\r-3331000\r\r-5666000\r\r-5506000\r\r-5256000\r\r-4897000\r\r-4474000\r\r-8650000\r\r-8806000\r\r-9295000\r\r-2705000\r\r-2384000\r\r-2383500\r\r-2380000\r\r\r\rSale Purchase of Stock\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rNet Borrowings\r\r-35000\r\r8928000\r\r1771000\r\r1527000\r\r-301000\r\r3447000\r\r2763000\r\r19000\r\r-22401000\r\r-8952000\r\r-58411000\r\r-57546000\r\r3139000\r\r6260000\r\r11028000\r\r17148000\r\r\r\rOther Cash Flows from Financing Activities\r\r-1170000\r\r-1227000\r\r-978000\r\r-952000\r\r112000\r\r174000\r\r204000\r\r-1000\r\r-4141000\r\r1006000\r\r-1818000\r\r-8114000\r\r-192000\r\r-151000\r\r-107000\r\r-373000\r\r\r\rTotal Cash Flows From Financing Activities\r\r-11548000\r\r-1433000\r\r-3073000\r\r-3032000\r\r-10469000\r\r-6418000\r\r-5917000\r\r-9413000\r\r-31033000\r\r-19146000\r\r-90464000\r\r-76054000\r\r-122000\r\r3394000\r\r7400000\r\r14266000\r\r\r\rEffect Of Exchange Rate Changes\r\r72000\r\r-9000\r\r284000\r\r-541000\r\r-495000\r\r937000\r\r-51000\r\r-473000\r\r-628000\r\r891000\r\r-1146000\r\r-3464000\r\r-370000\r\r489000\r\r-265000\r\r-815000\r\r\r\rChange In Cash and Cash Equivalents\r\r-79000\r\r-29000\r\r1070000\r\r218000\r\r-630000\r\r4161000\r\r188000\r\r-790000\r\r-9176000\r\r-5660000\r\r-41315000\r\r-138000\r\r-1731000\r\r2619000\r\r1683000\r\r3515000\r\r\r\r\rAs in previous posts let’s clean the data up and put it into a better format which is easier for computations.\n############# Combine and clean the data ###############\rISBSCF \u0026lt;- rbind(IS, BS, CF)\rISBSCF \u0026lt;- ISBSCF %\u0026gt;%\rt() %\u0026gt;%\rdata.frame() %\u0026gt;%\rrownames_to_column(\u0026#39;rn\u0026#39;) %\u0026gt;%\rseparate(rn, into = c(\u0026quot;symbol\u0026quot;, \u0026quot;year\u0026quot;),\rsep = -4, convert = TRUE)\rISBSCF$symbol \u0026lt;- gsub(\u0026quot;(f).*\u0026quot;, \u0026quot;\u0026quot;, ISBSCF$symbol)\rISBSCF$symbol \u0026lt;- gsub(\u0026#39;.$\u0026#39;, \u0026#39;\u0026#39;, ISBSCF$symbol)\rISBSCF$symbol \u0026lt;- gsub(\u0026#39;^X\u0026#39;, \u0026#39;\u0026#39;, ISBSCF$symbol)\r\rHow the full data looks:\rTable 4: Income Statment - Balance Sheet - Cash Flow\r\r\r\rsymbol\r\ryear\r\rTotal.Revenue\r\rCost.of.Revenue\r\rGross.Profit\r\rResearch.Development\r\rSelling.General.and.Administrative\r\rNon.Recurring\r\rOthers\r\rTotal.Operating.Expenses\r\rOperating.Income.or.Loss\r\rTotal.Other.Income.Expenses.Net\r\rEarnings.Before.Interest.and.Taxes\r\rInterest.Expense\r\rIncome.Before.Tax\r\rIncome.Tax.Expense\r\rMinority.Interest\r\rNet.Income.From.Continuing.Ops\r\rDiscontinued.Operations\r\rExtraordinary.Items\r\rEffect.Of.Accounting.Changes\r\rOther.Items\r\rNet.Income\r\rPreferred.Stock.And.Other.Adjustments\r\rNet.Income.Applicable.To.Common.Shares\r\rCash.And.Cash.Equivalents\r\rShort.Term.Investments\r\rNet.Receivables\r\rInventory\r\rOther.Current.Assets\r\rTotal.Current.Assets\r\rLong.Term.Investments\r\rProperty..plant.and.equipment\r\rGoodwill\r\rIntangible.Assets\r\rAccumulated.Amortization\r\rOther.Assets\r\rDeferred.Long.Term.Asset.Charges\r\rTotal.Assets\r\rAccounts.Payable\r\rShort.Current.Long.Term.Debt\r\rOther.Current.Liabilities\r\rTotal.Current.Liabilities\r\rLong.Term.Debt\r\rOther.Liabilities\r\rDeferred.Long.Term.Liability.Charges\r\rMinority.Interest1\r\rNegative.Goodwill\r\rTotal.Liabilities\r\rMisc..Stocks.Options.Warrants\r\rRedeemable.Preferred.Stock\r\rPreferred.Stock\r\rCommon.Stock\r\rRetained.Earnings\r\rTreasury.Stock\r\rCapital.Surplus\r\rOther.Stockholder.Equity\r\rTotal.stockholders..equity\r\rNet.Tangible.Assets\r\rNet.Income1\r\rDepreciation\r\rAdjustments.To.Net.Income\r\rChanges.In.Accounts.Receivables\r\rChanges.In.Liabilities\r\rChanges.In.Inventories\r\rChanges.In.Other.Operating.Activities\r\rTotal.Cash.Flow.From.Operating.Activities\r\rCapital.Expenditure\r\rInvestments\r\rOther.Cash.flows.from.Investing.Activities\r\rTotal.Cash.Flows.From.Investing.Activities\r\rDividends.Paid\r\rSale.Purchase.of.Stock\r\rNet.Borrowings\r\rOther.Cash.Flows.from.Financing.Activities\r\rTotal.Cash.Flows.From.Financing.Activities\r\rEffect.Of.Exchange.Rate.Changes\r\rChange.In.Cash.and.Cash.Equivalents\r\r\r\r\r\rUN\r\r2018\r\r50982000\r\r28769000\r\r22213000\r\r900000\r\r8803000\r\rNA\r\r41427000\r\r38472000\r\r12510000\r\r-127000\r\r12510000\r\r-627000\r\r12383000\r\r2575000\r\r720000\r\r9808000\r\rNA\r\rNA\r\rNA\r\rNA\r\r9389000\r\rNA\r\r9389000\r\r3230000\r\r681000\r\r4822000\r\r4301000\r\r1387000\r\r15481000\r\r637000\r\r10347000\r\r17341000\r\r12152000\r\rNA\r\r3498000\r\r1117000\r\r59456000\r\r9121000\r\r2012000\r\r3194000\r\r19772000\r\r21535000\r\r5742000\r\rNA\r\r720000\r\rNA\r\r47164000\r\rNA\r\rNA\r\rNA\r\r464000\r\r26265000\r\r-15286000\r\r129000\r\r-5105000\r\r11572000\r\r-17921000\r\r9389000\r\r1450000\r\r-3590000\r\r-1298000\r\r976000\r\r-471000\r\r-793000\r\r6753000\r\r-1329000\r\r47000\r\r264000\r\r4644000\r\r-4066000\r\rNA\r\r-35000\r\r-1170000\r\r-11548000\r\r72000\r\r-79000\r\r\r\rUN\r\r2017\r\r53715000\r\r30547000\r\r23168000\r\r900000\r\r13507000\r\rNA\r\r44031000\r\r44954000\r\r8761000\r\r-608000\r\r8761000\r\r-608000\r\r8153000\r\r1667000\r\r758000\r\r6486000\r\rNA\r\rNA\r\rNA\r\rNA\r\r6053000\r\rNA\r\r6053000\r\r3317000\r\r521000\r\r4204000\r\r3962000\r\r4356000\r\r16983000\r\r565000\r\r10411000\r\r16881000\r\r11520000\r\rNA\r\r3925000\r\r1085000\r\r60285000\r\r8217000\r\r1537000\r\r2787000\r\r23177000\r\r16342000\r\r6259000\r\rNA\r\r758000\r\rNA\r\r45898000\r\rNA\r\rNA\r\rNA\r\r484000\r\r26648000\r\r-13633000\r\r130000\r\r-4425000\r\r13629000\r\r-14772000\r\r6053000\r\r1214000\r\r-231000\r\r-506000\r\r542000\r\r-104000\r\r-68000\r\r7292000\r\r-1509000\r\r-215000\r\r292000\r\r-5879000\r\r-3916000\r\rNA\r\r8928000\r\r-1227000\r\r-1433000\r\r-9000\r\r-29000\r\r\r\rUN\r\r2016\r\r52713000\r\r30229000\r\r22484000\r\r978000\r\r13799000\r\rNA\r\r44031000\r\r45006000\r\r7707000\r\r-238000\r\r7707000\r\r-572000\r\r7469000\r\r1922000\r\r626000\r\r5547000\r\rNA\r\rNA\r\rNA\r\rNA\r\r5184000\r\rNA\r\r5184000\r\r3382000\r\r565000\r\r3854000\r\r4278000\r\r1120000\r\r13884000\r\r491000\r\r11673000\r\r17624000\r\r9809000\r\rNA\r\r2948000\r\r1354000\r\r56429000\r\r8591000\r\r2173000\r\r2392000\r\r20556000\r\r11011000\r\r7748000\r\rNA\r\r626000\r\rNA\r\r39449000\r\rNA\r\rNA\r\rNA\r\r484000\r\r23179000\r\r-7443000\r\r134000\r\r-3279000\r\r16354000\r\r-11079000\r\r5184000\r\r1464000\r\r348000\r\r142000\r\r-281000\r\r190000\r\r-68000\r\r7047000\r\r-1804000\r\r100000\r\r291000\r\r-3188000\r\r-3609000\r\rNA\r\r1771000\r\r-978000\r\r-3073000\r\r284000\r\r1070000\r\r\r\rUN\r\r2015\r\r53272000\r\r30808000\r\r22464000\r\r1005000\r\r14065000\r\rNA\r\r44031000\r\r45878000\r\r7394000\r\r-174000\r\r7394000\r\r-552000\r\r7220000\r\r1961000\r\r643000\r\r5259000\r\rNA\r\rNA\r\rNA\r\rNA\r\r4909000\r\rNA\r\r4909000\r\r2302000\r\r596000\r\r3416000\r\r4335000\r\r1352000\r\r12686000\r\r592000\r\r11058000\r\r16213000\r\r8846000\r\rNA\r\r2903000\r\r1185000\r\r52298000\r\r8296000\r\r1495000\r\r2759000\r\r20019000\r\r9696000\r\r6343000\r\rNA\r\r643000\r\rNA\r\r36216000\r\rNA\r\rNA\r\rNA\r\r484000\r\r22619000\r\r-7816000\r\r152000\r\r-3697000\r\r15439000\r\r-9620000\r\r4909000\r\r1370000\r\r331000\r\r2000\r\r847000\r\r-129000\r\r-68000\r\r7330000\r\r-1867000\r\r-62000\r\r295000\r\r-3539000\r\r-3331000\r\rNA\r\r1527000\r\r-952000\r\r-3032000\r\r-541000\r\r218000\r\r\r\rIBM\r\r2018\r\r79591000\r\r42655000\r\r36936000\r\r5379000\r\r20325000\r\rNA\r\r-998000\r\r67361000\r\r12230000\r\r-888000\r\r12230000\r\r-723000\r\r11342000\r\r2619000\r\r134000\r\r8723000\r\r5000\r\rNA\r\rNA\r\rNA\r\r8728000\r\rNA\r\r8728000\r\r11379000\r\r618000\r\r8596000\r\r1682000\r\r2902000\r\r49146000\r\r439000\r\r10792000\r\r36265000\r\r3087000\r\rNA\r\r14505000\r\r5216000\r\r123382000\r\r6558000\r\r7055000\r\r14680000\r\r38227000\r\r35681000\r\r32544000\r\r2676000\r\r134000\r\rNA\r\r106452000\r\rNA\r\rNA\r\rNA\r\r55151000\r\r159206000\r\r-197561000\r\rNA\r\r-29490000\r\r16796000\r\r-22556000\r\r8728000\r\r4480000\r\r1485000\r\r1006000\r\r126000\r\r-127000\r\r-451000\r\r15247000\r\r-3395000\r\r-554000\r\r-1000\r\r-4913000\r\r-5666000\r\rNA\r\r-301000\r\r112000\r\r-10469000\r\r-495000\r\r-630000\r\r\r\rIBM\r\r2017\r\r79139000\r\r42196000\r\r36943000\r\r5590000\r\r20900000\r\rNA\r\r-1445000\r\r67241000\r\r11898000\r\r-498000\r\r11898000\r\r-615000\r\r11400000\r\r5642000\r\r131000\r\r5758000\r\r-5000\r\rNA\r\rNA\r\rNA\r\r5753000\r\rNA\r\r5753000\r\r11972000\r\r608000\r\r10380000\r\r1583000\r\r2266000\r\r49735000\r\r581000\r\r11116000\r\r36788000\r\r3742000\r\rNA\r\r13844000\r\r4862000\r\r125356000\r\r6451000\r\r5215000\r\r16451000\r\r37363000\r\r39871000\r\r30397000\r\r2136000\r\r131000\r\rNA\r\r107631000\r\rNA\r\rNA\r\rNA\r\r54566000\r\r153126000\r\r-190098000\r\rNA\r\r-26591000\r\r17594000\r\r-22936000\r\r5753000\r\r4541000\r\r-383000\r\r1297000\r\r47000\r\r18000\r\r5451000\r\r16724000\r\r-3229000\r\r-1039000\r\r-1000\r\r-7081000\r\r-5506000\r\rNA\r\r3447000\r\r174000\r\r-6418000\r\r937000\r\r4161000\r\r\r\rIBM\r\r2016\r\r79919000\r\r41402000\r\r38517000\r\r5726000\r\r20225000\r\rNA\r\r-1604000\r\r65749000\r\r14170000\r\r-1840000\r\r14170000\r\r-630000\r\r12330000\r\r449000\r\r146000\r\r11881000\r\r-9000\r\rNA\r\rNA\r\rNA\r\r11872000\r\rNA\r\r11872000\r\r7826000\r\r701000\r\r10239000\r\r1553000\r\r532000\r\r43889000\r\r659000\r\r10830000\r\r36199000\r\r4688000\r\rNA\r\r12184000\r\r5224000\r\r117470000\r\r6209000\r\r6239000\r\r14693000\r\r36275000\r\r34663000\r\r28140000\r\r1496000\r\r146000\r\rNA\r\r99078000\r\rNA\r\rNA\r\rNA\r\r53935000\r\r152759000\r\r-188448000\r\rNA\r\r-29398000\r\r18246000\r\r-22641000\r\r11872000\r\r4381000\r\r-526000\r\r712000\r\r197000\r\r-14000\r\r462000\r\r17084000\r\r-3567000\r\r-161000\r\r-1000\r\r-10928000\r\r-5256000\r\rNA\r\r2763000\r\r204000\r\r-5917000\r\r-51000\r\r188000\r\r\r\rIBM\r\r2015\r\r81741000\r\r41057000\r\r40684000\r\r5247000\r\r19589000\r\rNA\r\r-669000\r\r65224000\r\r16517000\r\r-572000\r\r16517000\r\r-468000\r\r15945000\r\r2581000\r\r162000\r\r13364000\r\r-174000\r\rNA\r\rNA\r\rNA\r\r13190000\r\rNA\r\r13190000\r\r7686000\r\r508000\r\r9534000\r\r1551000\r\r293000\r\r42504000\r\r1131000\r\r10727000\r\r32021000\r\r3487000\r\rNA\r\r10612000\r\r4822000\r\r110495000\r\r6028000\r\r5271000\r\r14281000\r\r34269000\r\r33431000\r\r28371000\r\r1626000\r\r162000\r\rNA\r\r96071000\r\rNA\r\rNA\r\rNA\r\r53262000\r\r146124000\r\r-185124000\r\rNA\r\r-29606000\r\r14262000\r\r-21246000\r\r13190000\r\r3855000\r\r2406000\r\r812000\r\r81000\r\r133000\r\r-3222000\r\r17255000\r\r-3579000\r\r-231000\r\r1000\r\r-8159000\r\r-4897000\r\rNA\r\r19000\r\r-1000\r\r-9413000\r\r-473000\r\r-790000\r\r\r\rGE\r\r2018\r\r121615000\r\r98396000\r\r23219000\r\rNA\r\r15134000\r\rNA\r\rNA\r\r113530000\r\r8085000\r\r-28220000\r\r8085000\r\r-2708000\r\r-20135000\r\r583000\r\r20882000\r\r-20718000\r\r-1726000\r\rNA\r\rNA\r\rNA\r\r-22355000\r\rNA\r\r-22809000\r\r16369000\r\rNA\r\r19874000\r\r19271000\r\r7441000\r\r95974000\r\r34920000\r\r50749000\r\r58710000\r\r18159000\r\rNA\r\r49713000\r\r12432000\r\r309129000\r\r17153000\r\rNA\r\r19710000\r\r49937000\r\r95234000\r\r74883000\r\r5739000\r\r20882000\r\rNA\r\r257266000\r\rNA\r\rNA\r\rNA\r\r702000\r\r93109000\r\r-62836000\r\rNA\r\r21089000\r\r30975000\r\r-46798000\r\r-22355000\r\r7796000\r\r18532000\r\r-430000\r\r1697000\r\r-902000\r\r-92000\r\r4246000\r\r-7695000\r\rNA\r\r12953000\r\r18239000\r\r-4474000\r\rNA\r\r-22401000\r\r-4141000\r\r-31033000\r\r-628000\r\r-9176000\r\r\r\rGE\r\r2017\r\r118243000\r\r106858000\r\r11385000\r\rNA\r\r15389000\r\rNA\r\rNA\r\r122247000\r\r-4004000\r\r-7147000\r\r-4004000\r\r-2753000\r\r-11151000\r\r-2611000\r\r20859000\r\r-8540000\r\r-309000\r\rNA\r\rNA\r\rNA\r\r-8484000\r\rNA\r\r-8944000\r\r18211000\r\rNA\r\r24209000\r\r19419000\r\r6720000\r\r116253000\r\r38696000\r\r53874000\r\r83968000\r\r20273000\r\rNA\r\r56181000\r\r8819000\r\r369245000\r\r15172000\r\rNA\r\r19531000\r\r60043000\r\r108575000\r\r84243000\r\r5484000\r\r20859000\r\rNA\r\r292356000\r\rNA\r\rNA\r\rNA\r\r702000\r\r117245000\r\r-61923000\r\rNA\r\r22979000\r\r56024000\r\r-48217000\r\r-8484000\r\r7429000\r\r9305000\r\r-2846000\r\r1343000\r\r1183000\r\r-1898000\r\r6032000\r\r-7371000\r\rNA\r\r10133000\r\r6564000\r\r-8650000\r\rNA\r\r-8952000\r\r1006000\r\r-19146000\r\r891000\r\r-5660000\r\r\r\rGE\r\r2016\r\r119468000\r\r94886000\r\r24582000\r\rNA\r\r14707000\r\rNA\r\rNA\r\r109593000\r\r9875000\r\r-2843000\r\r9875000\r\r-2026000\r\r7032000\r\r-1133000\r\r4688000\r\r8165000\r\r-954000\r\rNA\r\rNA\r\rNA\r\r7500000\r\rNA\r\r6829000\r\r10525000\r\rNA\r\r24076000\r\r22354000\r\r3885000\r\r131436000\r\r44313000\r\r50518000\r\r68070000\r\r16436000\r\rNA\r\r52042000\r\r1833000\r\r365183000\r\r14435000\r\rNA\r\r20772000\r\r70364000\r\r105080000\r\r83040000\r\r5534000\r\r4688000\r\rNA\r\r284667000\r\rNA\r\rNA\r\rNA\r\r702000\r\r139532000\r\r-64412000\r\rNA\r\r18626000\r\r75822000\r\r-11052000\r\r7500000\r\r7070000\r\r-14391000\r\r1460000\r\r2953000\r\r-815000\r\r-2617000\r\r1160000\r\r-7199000\r\rNA\r\r-10317000\r\r49135000\r\r-8806000\r\rNA\r\r-58411000\r\r-1818000\r\r-90464000\r\r-1146000\r\r-41315000\r\r\r\rGE\r\r2015\r\r115834000\r\r90111000\r\r25723000\r\rNA\r\r16327000\r\rNA\r\rNA\r\r106438000\r\r9396000\r\r-1211000\r\r9396000\r\r-1706000\r\r8185000\r\r6485000\r\r4836000\r\r1700000\r\r-7807000\r\rNA\r\rNA\r\rNA\r\r-6126000\r\rNA\r\r-6135000\r\r10372000\r\rNA\r\r43013000\r\r22515000\r\r5109000\r\r280896000\r\r31973000\r\r54095000\r\r65526000\r\r17797000\r\rNA\r\r42784000\r\r3105000\r\r493071000\r\r13680000\r\rNA\r\r27453000\r\r138270000\r\r144659000\r\r79175000\r\rNA\r\r4836000\r\rNA\r\r389961000\r\rNA\r\rNA\r\rNA\r\r702000\r\r140020000\r\r-42454000\r\rNA\r\r21085000\r\r98268000\r\r14945000\r\r-6126000\r\r6509000\r\r21411000\r\r-52000\r\r-1537000\r\r-314000\r\r-2617000\r\r19891000\r\r-7309000\r\rNA\r\r-5316000\r\r59488000\r\r-9295000\r\rNA\r\r-57546000\r\r-8114000\r\r-76054000\r\r-3464000\r\r-138000\r\r\r\rF\r\r2018\r\r160338000\r\r145459000\r\r14879000\r\rNA\r\r10460000\r\rNA\r\rNA\r\r155919000\r\r4419000\r\r-74000\r\r4419000\r\r-1228000\r\r4345000\r\r650000\r\r134000\r\r3695000\r\rNA\r\rNA\r\rNA\r\rNA\r\r3677000\r\rNA\r\r3677000\r\r7111000\r\r15925000\r\r3698000\r\r11220000\r\r2567000\r\r114649000\r\r2595000\r\r37883000\r\r264000\r\r178000\r\rNA\r\r16755000\r\r10412000\r\r256540000\r\r20426000\r\r1700000\r\r18868000\r\r95569000\r\r11833000\r\r23088000\r\rNA\r\r134000\r\rNA\r\r220474000\r\rNA\r\rNA\r\rNA\r\r41000\r\r22668000\r\r-8783000\r\r22006000\r\r-7366000\r\r35932000\r\r35932000\r\r3677000\r\r8308000\r\r-677000\r\r-2239000\r\r6781000\r\r-828000\r\rNA\r\r15022000\r\r-7785000\r\r3387000\r\r181000\r\r-16261000\r\r-2705000\r\rNA\r\r3139000\r\r-192000\r\r-122000\r\r-370000\r\r-1731000\r\r\r\rF\r\r2017\r\r156776000\r\r140218000\r\r16558000\r\rNA\r\r9676000\r\rNA\r\rNA\r\r149894000\r\r6882000\r\r1277000\r\r6882000\r\r-1190000\r\r8159000\r\r402000\r\r126000\r\r7757000\r\rNA\r\rNA\r\rNA\r\rNA\r\r7731000\r\rNA\r\r7731000\r\r8934000\r\r17554000\r\r10599000\r\r11176000\r\r3649000\r\r116801000\r\r3448000\r\r36901000\r\r75000\r\r213000\r\rNA\r\r18215000\r\r10762000\r\r258496000\r\r23282000\r\r1960000\r\r16402000\r\r94600000\r\r13174000\r\r25526000\r\r232000\r\r126000\r\rNA\r\r222792000\r\rNA\r\rNA\r\rNA\r\r41000\r\r21906000\r\r-8212000\r\r21843000\r\r-6959000\r\r35578000\r\r35290000\r\r7731000\r\r8453000\r\r-910000\r\r-2297000\r\r6089000\r\r-970000\r\rNA\r\r18096000\r\r-7049000\r\r2331000\r\r71000\r\r-19360000\r\r-2384000\r\rNA\r\r6260000\r\r-151000\r\r3394000\r\r489000\r\r2619000\r\r\r\rF\r\r2016\r\r151800000\r\r134933000\r\r16867000\r\rNA\r\r12504000\r\rNA\r\rNA\r\r147437000\r\r4363000\r\r2421000\r\r4363000\r\r-951000\r\r6784000\r\r2184000\r\r113000\r\r4600000\r\rNA\r\rNA\r\rNA\r\rNA\r\r4589000\r\rNA\r\r4589000\r\r7828000\r\r19642000\r\r11102000\r\r8898000\r\r3145000\r\r108461000\r\r3523000\r\r33692000\r\r50000\r\r198000\r\rNA\r\r14894000\r\r9705000\r\r237951000\r\r21296000\r\r1361000\r\r16277000\r\r90281000\r\r13222000\r\r25086000\r\rNA\r\r113000\r\rNA\r\r208668000\r\rNA\r\rNA\r\rNA\r\r41000\r\r15634000\r\r-8135000\r\r21630000\r\r-7013000\r\r29170000\r\r28922000\r\r4589000\r\r8717000\r\r3607000\r\r-2855000\r\r6595000\r\r-803000\r\rNA\r\r19850000\r\r-6992000\r\r-2074000\r\r937000\r\r-25302000\r\r-2383500\r\rNA\r\r11028000\r\r-107000\r\r7400000\r\r-265000\r\r1683000\r\r\r\rF\r\r2015\r\r149558000\r\r131410000\r\r18148000\r\rNA\r\r10097000\r\rNA\r\rNA\r\r141507000\r\r8051000\r\r2201000\r\r8051000\r\r-773000\r\r10252000\r\r2881000\r\r109000\r\r7371000\r\rNA\r\rNA\r\rNA\r\rNA\r\r7373000\r\rNA\r\r7373000\r\r5386000\r\r18181000\r\r11042000\r\r8319000\r\r2704000\r\r102587000\r\r3244000\r\r32177000\r\r6000\r\r124000\r\rNA\r\r16154000\r\r11509000\r\r224925000\r\r20272000\r\r961000\r\r16084000\r\r82336000\r\r11060000\r\r23959000\r\rNA\r\r109000\r\rNA\r\r196174000\r\rNA\r\rNA\r\rNA\r\r41000\r\r14414000\r\r-7234000\r\r21421000\r\r-6257000\r\r28642000\r\r28512000\r\r7373000\r\r7966000\r\r-2153000\r\r-3563000\r\r7758000\r\r-1155000\r\rNA\r\r16226000\r\r-7196000\r\r-513000\r\r634000\r\r-26162000\r\r-2380000\r\rNA\r\r17148000\r\r-373000\r\r14266000\r\r-815000\r\r3515000\r\r\r\r\rNow that we have the full data, we can perform any number of calculations across different financial statements. Now the companies are in the “rows” and the “columns” consist of thefinancial entires.\nSome calculations are necessary for computing the NFO.\n\rCompute the Cash Flow Cycle\r########## Create the Cash Cycle Calculations #############\r#Set CashCycle data.frame up\rCashCycle \u0026lt;- data.frame(matrix(\u0026quot;\u0026quot;, nrow = nrow(ISBSCF)))\rCashCycle[,1] \u0026lt;- NULL\rCashCycle$Ticker \u0026lt;- ISBSCF$symbol\rCashCycle$Date \u0026lt;- ISBSCF$year\r#CashCycle excluding accured expense Calculations\rCashCycle$CollectionPeriod \u0026lt;- (ISBSCF$Net.Receivables / ISBSCF$Total.Revenue) * 365\rCashCycle$DaysofInventory \u0026lt;- (ISBSCF$Inventory / ISBSCF$Cost.of.Revenue) * 365\rCashCycle$DaysofPayable \u0026lt;- (ISBSCF$Accounts.Payable / ISBSCF$Cost.of.Revenue) * 365\rCashCycle$CashCollectionCycle \u0026lt;- CashCycle$CollectionPeriod + CashCycle$DaysofInventory - CashCycle$DaysofPayable\r#CashCycle including accured expense Calculations\rCashCycle$DaysofPayableAccExp \u0026lt;- ((ISBSCF$Accounts.Payable + ISBSCF$Total.Current.Liabilities) / ISBSCF$Cost.of.Revenue) * 365\rCashCycle$CashCollectionCycleAccExp \u0026lt;- CashCycle$CollectionPeriod + CashCycle$DaysofInventory - CashCycle$DaysofPayableAccExp\rCashCycle \u0026lt;- CashCycle[Reduce(`\u0026amp;`, lapply(CashCycle, function(x) !is.nan(x) \u0026amp; !is.infinite(x))),]\rTable 5: Cash Flow Cycle\r\r\r\rTicker\r\rDate\r\rCollectionPeriod\r\rDaysofInventory\r\rDaysofPayable\r\rCashCollectionCycle\r\rDaysofPayableAccExp\r\rCashCollectionCycleAccExp\r\r\r\r\r\rUN\r\r2018\r\r34.522577\r\r54.56794\r\r115.72057\r\r-26.630053\r\r366.5732\r\r-277.4827\r\r\r\rUN\r\r2017\r\r28.566695\r\r47.34115\r\r98.18329\r\r-22.275450\r\r375.1206\r\r-299.2128\r\r\r\rUN\r\r2016\r\r26.686206\r\r51.65470\r\r103.73201\r\r-25.391103\r\r351.9354\r\r-273.5945\r\r\r\rUN\r\r2015\r\r23.405166\r\r51.35922\r\r98.28746\r\r-23.523067\r\r335.4640\r\r-260.6996\r\r\r\rIBM\r\r2018\r\r39.420789\r\r14.39292\r\r56.11699\r\r-2.303276\r\r383.2265\r\r-329.4128\r\r\r\rIBM\r\r2017\r\r47.873994\r\r13.69312\r\r55.80185\r\r5.765263\r\r378.9959\r\r-317.4288\r\r\r\rIBM\r\r2016\r\r46.762785\r\r13.69125\r\r54.73854\r\r5.715492\r\r374.5389\r\r-314.0849\r\r\r\rIBM\r\r2015\r\r42.572393\r\r13.78851\r\r53.58940\r\r2.771507\r\r358.2435\r\r-301.8826\r\r\r\rGE\r\r2018\r\r59.647330\r\r71.48578\r\r63.62906\r\r67.504052\r\r248.8704\r\r-117.7373\r\r\r\rGE\r\r2017\r\r74.729878\r\r66.33041\r\r51.82373\r\r89.236560\r\r256.9155\r\r-115.8552\r\r\r\rGE\r\r2016\r\r73.557271\r\r85.98961\r\r55.52742\r\r104.019457\r\r326.1981\r\r-166.6512\r\r\r\rGE\r\r2015\r\r135.536587\r\r91.19836\r\r55.41166\r\r171.323283\r\r615.4826\r\r-388.7476\r\r\r\rF\r\r2018\r\r8.418279\r\r28.15433\r\r51.25492\r\r-14.682320\r\r291.0660\r\r-254.4934\r\r\r\rF\r\r2017\r\r24.676194\r\r29.09213\r\r60.60513\r\r-6.836807\r\r306.8574\r\r-253.0891\r\r\r\rF\r\r2016\r\r26.694532\r\r24.06950\r\r57.60666\r\r-6.842631\r\r301.8209\r\r-251.0569\r\r\r\rF\r\r2015\r\r26.948274\r\r23.10657\r\r56.30683\r\r-6.251977\r\r285.0005\r\r-234.9457\r\r\r\r\rWhere all the results are in days. So Unilever 2018, CollectionPeriod was 34.5 days, up from their 2017, CollectionPeriod and up annually since 2015. Wheras Ford has been decreasing their CollectionPeriod over the sample period.\nLet us continue with some DuPont analysis…\n########## Create the DuPont Calculations #############\r#DuPont Analysis\r#Set CashCycle data.frame up\rDuPontAnalysis \u0026lt;- data.frame(matrix(\u0026quot;\u0026quot;, nrow = nrow(ISBSCF)))\rDuPontAnalysis[,1] \u0026lt;- NULL\rDuPontAnalysis$Ticker \u0026lt;- ISBSCF$symbol\rDuPontAnalysis$Date \u0026lt;- ISBSCF$year\r#DuPont Analysis Calculations\rDuPontAnalysis$ROE \u0026lt;- ISBSCF$Net.Income / ISBSCF$Total.stockholders..equity\rDuPontAnalysis$ROS \u0026lt;- ISBSCF$Net.Income / ISBSCF$Total.Revenue\rDuPontAnalysis$Turnover \u0026lt;- ISBSCF$Total.Revenue / ISBSCF$Total.Assets\rDuPontAnalysis$Leverage \u0026lt;- ISBSCF$Total.Assets / ISBSCF$Total.stockholders..equity\rDuPontAnalysis \u0026lt;- DuPontAnalysis[Reduce(`\u0026amp;`, lapply(DuPontAnalysis, function(x) !is.nan(x) \u0026amp; !is.infinite(x))),]\rTable 6: DuPont Calculations\r\r\r\rTicker\r\rDate\r\rROE\r\rROS\r\rTurnover\r\rLeverage\r\r\r\r\r\rUN\r\r2018\r\r0.8113550\r\r0.1841630\r\r0.8574744\r\r5.137919\r\r\r\rUN\r\r2017\r\r0.4441265\r\r0.1126873\r\r0.8910177\r\r4.423289\r\r\r\rUN\r\r2016\r\r0.3169867\r\r0.0983439\r\r0.9341473\r\r3.450471\r\r\r\rUN\r\r2015\r\r0.3179610\r\r0.0921497\r\r1.0186240\r\r3.387396\r\r\r\rIBM\r\r2018\r\r0.5196475\r\r0.1096606\r\r0.6450779\r\r7.345916\r\r\r\rIBM\r\r2017\r\r0.3269865\r\r0.0726949\r\r0.6313140\r\r7.124929\r\r\r\rIBM\r\r2016\r\r0.6506632\r\r0.1485504\r\r0.6803354\r\r6.438123\r\r\r\rIBM\r\r2015\r\r0.9248352\r\r0.1613633\r\r0.7397710\r\r7.747511\r\r\r\rGE\r\r2018\r\r-0.7217111\r\r-0.1838178\r\r0.3934118\r\r9.979952\r\r\r\rGE\r\r2017\r\r-0.1514351\r\r-0.0717505\r\r0.3202291\r\r6.590836\r\r\r\rGE\r\r2016\r\r0.0989159\r\r0.0627783\r\r0.3271456\r\r4.816320\r\r\r\rGE\r\r2015\r\r-0.0623397\r\r-0.0528860\r\r0.2349236\r\r5.017615\r\r\r\rF\r\r2018\r\r0.1023322\r\r0.0229328\r\r0.6250019\r\r7.139597\r\r\r\rF\r\r2017\r\r0.2172972\r\r0.0493124\r\r0.6064929\r\r7.265614\r\r\r\rF\r\r2016\r\r0.1573192\r\r0.0302306\r\r0.6379465\r\r8.157388\r\r\r\rF\r\r2015\r\r0.2574192\r\r0.0492986\r\r0.6649239\r\r7.852978\r\r\r\r\r\rCompute the Need for Funds and Working Capital calculations\r########## Create the NFO \u0026amp; WC Calculations #############\r#NFO-WC Analysis\rNFO_WCAnalysis \u0026lt;- data.frame(matrix(\u0026quot;\u0026quot;, nrow = nrow(ISBSCF)))\rNFO_WCAnalysis[,1] \u0026lt;- NULL\rNFO_WCAnalysis$Ticker \u0026lt;- ISBSCF$symbol\rNFO_WCAnalysis$Date \u0026lt;- ISBSCF$year\r#NFO_WC Analysis Calculations\rNFO_WCAnalysis$REC \u0026lt;- ISBSCF$Net.Receivables\rNFO_WCAnalysis$INV \u0026lt;- ISBSCF$Inventory\rNFO_WCAnalysis$OtherCurrentAssetsNotCash \u0026lt;- ISBSCF$Other.Current.Assets\rNFO_WCAnalysis$Payables \u0026lt;- ISBSCF$Accounts.Payable\rNFO_WCAnalysis$SpontaneousFunsIncDeftaxes \u0026lt;- ISBSCF$Total.Current.Liabilities + ISBSCF$Other.Current.Liabilities + ISBSCF$Income.Tax.Expense\r####\rNFO_WCAnalysis$NFO \u0026lt;- NFO_WCAnalysis$REC + NFO_WCAnalysis$INV + NFO_WCAnalysis$OtherCurrentAssetsNotCash - NFO_WCAnalysis$Payables - NFO_WCAnalysis$SpontaneousFunsIncDeftaxes\rNFO_WCAnalysis$LTD \u0026lt;- ISBSCF$Long.Term.Debt\rNFO_WCAnalysis$EQ \u0026lt;- ISBSCF$Total.stockholders..equity\rNFO_WCAnalysis$OtherLongTermLiabilities \u0026lt;- ISBSCF$Minority.Interest + ISBSCF$Other.Liabilities\rNFO_WCAnalysis$FA \u0026lt;- ISBSCF$Total.Assets - ISBSCF$Total.Current.Assets\r###\rNFO_WCAnalysis$WC \u0026lt;- NFO_WCAnalysis$LTD + NFO_WCAnalysis$EQ + NFO_WCAnalysis$OtherLongTermLiabilities - NFO_WCAnalysis$FA\rNFO_WCAnalysis$CreditPlusCashMinus \u0026lt;- NFO_WCAnalysis$NFO - NFO_WCAnalysis$WC\rNFO_WCAnalysis \u0026lt;- NFO_WCAnalysis[Reduce(`\u0026amp;`, lapply(NFO_WCAnalysis, function(x) !is.nan(x) \u0026amp; !is.infinite(x))),]\rLets inspect the result.\nTable 7: NFO WC Analysis\r\r\r\rTicker\r\rDate\r\rREC\r\rINV\r\rOtherCurrentAssetsNotCash\r\rPayables\r\rSpontaneousFunsIncDeftaxes\r\rNFO\r\rLTD\r\rEQ\r\rOtherLongTermLiabilities\r\rFA\r\rWC\r\rCreditPlusCashMinus\r\r\r\r\r\rUN\r\r2018\r\r4822000\r\r4301000\r\r1387000\r\r9121000\r\r25541000\r\r-24152000\r\r21535000\r\r11572000\r\r6462000\r\r43975000\r\r-4406000\r\r-19746000\r\r\r\rUN\r\r2017\r\r4204000\r\r3962000\r\r4356000\r\r8217000\r\r27631000\r\r-23326000\r\r16342000\r\r13629000\r\r7017000\r\r43302000\r\r-6314000\r\r-17012000\r\r\r\rUN\r\r2016\r\r3854000\r\r4278000\r\r1120000\r\r8591000\r\r24870000\r\r-24209000\r\r11011000\r\r16354000\r\r8374000\r\r42545000\r\r-6806000\r\r-17403000\r\r\r\rUN\r\r2015\r\r3416000\r\r4335000\r\r1352000\r\r8296000\r\r24739000\r\r-23932000\r\r9696000\r\r15439000\r\r6986000\r\r39612000\r\r-7491000\r\r-16441000\r\r\r\rIBM\r\r2018\r\r8596000\r\r1682000\r\r2902000\r\r6558000\r\r55526000\r\r-48904000\r\r35681000\r\r16796000\r\r32678000\r\r74236000\r\r10919000\r\r-59823000\r\r\r\rIBM\r\r2017\r\r10380000\r\r1583000\r\r2266000\r\r6451000\r\r59456000\r\r-51678000\r\r39871000\r\r17594000\r\r30528000\r\r75621000\r\r12372000\r\r-64050000\r\r\r\rIBM\r\r2016\r\r10239000\r\r1553000\r\r532000\r\r6209000\r\r51417000\r\r-45302000\r\r34663000\r\r18246000\r\r28286000\r\r73581000\r\r7614000\r\r-52916000\r\r\r\rIBM\r\r2015\r\r9534000\r\r1551000\r\r293000\r\r6028000\r\r51131000\r\r-45781000\r\r33431000\r\r14262000\r\r28533000\r\r67991000\r\r8235000\r\r-54016000\r\r\r\rGE\r\r2018\r\r19874000\r\r19271000\r\r7441000\r\r17153000\r\r70230000\r\r-40797000\r\r95234000\r\r30975000\r\r95765000\r\r213155000\r\r8819000\r\r-49616000\r\r\r\rGE\r\r2017\r\r24209000\r\r19419000\r\r6720000\r\r15172000\r\r76963000\r\r-41787000\r\r108575000\r\r56024000\r\r105102000\r\r252992000\r\r16709000\r\r-58496000\r\r\r\rGE\r\r2016\r\r24076000\r\r22354000\r\r3885000\r\r14435000\r\r90003000\r\r-54123000\r\r105080000\r\r75822000\r\r87728000\r\r233747000\r\r34883000\r\r-89006000\r\r\r\rGE\r\r2015\r\r43013000\r\r22515000\r\r5109000\r\r13680000\r\r172208000\r\r-115251000\r\r144659000\r\r98268000\r\r84011000\r\r212175000\r\r114763000\r\r-230014000\r\r\r\rF\r\r2018\r\r3698000\r\r11220000\r\r2567000\r\r20426000\r\r115087000\r\r-118028000\r\r11833000\r\r35932000\r\r23222000\r\r141891000\r\r-70904000\r\r-47124000\r\r\r\rF\r\r2017\r\r10599000\r\r11176000\r\r3649000\r\r23282000\r\r111404000\r\r-109262000\r\r13174000\r\r35578000\r\r25652000\r\r141695000\r\r-67291000\r\r-41971000\r\r\r\rF\r\r2016\r\r11102000\r\r8898000\r\r3145000\r\r21296000\r\r108742000\r\r-106893000\r\r13222000\r\r29170000\r\r25199000\r\r129490000\r\r-61899000\r\r-44994000\r\r\r\rF\r\r2015\r\r11042000\r\r8319000\r\r2704000\r\r20272000\r\r101301000\r\r-99508000\r\r11060000\r\r28642000\r\r24068000\r\r122338000\r\r-58568000\r\r-40940000\r\r\r\r\rAccording to Miguel Antón:\n*If NFO \u0026gt; WC - ask for credit\n*If NFO \u0026lt; WC - surplus cash\nLets plot the results and analyse them further:\n########## Plot the NFO \u0026amp; WC #############\rsymbol \u0026lt;- NULL\rsymbols \u0026lt;- unique(NFO_WCAnalysis$Ticker)\r# Create the plots for NFO and WC for all symbols\rplotList \u0026lt;- list()\rfor(symbol in symbols){\rplotList[[symbol]] \u0026lt;- ggplot(subset(NFO_WCAnalysis, Ticker %in% symbol)) +\rgeom_line(aes(Date, NFO, group = Ticker, colour = \u0026quot;Blue\u0026quot;)) +\rgeom_line(aes(Date, WC, group = Ticker, colour = \u0026quot;Red\u0026quot;)) +\rlabs(title=paste0(\u0026quot;NFO and WC plot \u0026quot;, symbol), x=\u0026quot;Year\u0026quot;, y=\u0026quot;NFO / WC\u0026quot;) +\rscale_color_manual(labels = c(\u0026quot;NFO\u0026quot;, \u0026quot;WC\u0026quot;), values = c(\u0026quot;Blue\u0026quot;, \u0026quot;Red\u0026quot;)) +\rguides(color=guide_legend(\u0026quot;Legend\u0026quot;)) +\rtheme_tq() +\rtheme(legend.position = \u0026quot;right\u0026quot;)\r}\r# Change the symbols to view the NFO WC plots\rplotList[1]\r## $UN\rplotList[2]\r## $IBM\rplotList[3]\r## $GE\rplotList[4]\r## $F\r# Print the results to a PDF document\r#pdf(\u0026quot;PlotsNFO_WC.pdf\u0026quot;, onefile = TRUE, paper = \u0026quot;USr\u0026quot;) #Uncomment this if you want to save to .pdf\r#plotList\r#dev.off()\r\rPlotting the collection period, inventory days and days of payabales\rWe can also analyse the collection periods for each firm. mm here simply means melted data - which is a way of reshaping a data frame in R, check out the melt functon from the reshape2 package in R if interested.\n########## Collection Period, Days of Inventory and Days of Payable #############\r# Create the plots for Collection Period, Days of Inventory and Days of Payable\rmm \u0026lt;- melt(CashCycle, id = c(\u0026#39;Ticker\u0026#39;, \u0026#39;Date\u0026#39;))\rmm \u0026lt;- mm[mm$variable == \u0026quot;CollectionPeriod\u0026quot; | mm$variable == \u0026quot;DaysofInventory\u0026quot; | mm$variable == \u0026quot;DaysofPayable\u0026quot;,]\rmm$value \u0026lt;- with(mm, ifelse(variable == \u0026quot;DaysofPayable\u0026quot;, -value, value))\rTable 8: Collection Period - Days of Inventory - Days of Payable\r\r\r\rTicker\r\rDate\r\rvariable\r\rvalue\r\r\r\r\r\rUN\r\r2018\r\rCollectionPeriod\r\r34.52258\r\r\r\rUN\r\r2017\r\rCollectionPeriod\r\r28.56669\r\r\r\rUN\r\r2016\r\rCollectionPeriod\r\r26.68621\r\r\r\rUN\r\r2015\r\rCollectionPeriod\r\r23.40517\r\r\r\rIBM\r\r2018\r\rCollectionPeriod\r\r39.42079\r\r\r\rIBM\r\r2017\r\rCollectionPeriod\r\r47.87399\r\r\r\r\r\rPlot the results\r########## Plot the Collection Period, Days of Inventory and Days of Payable #############\rsymbol \u0026lt;- NULL\rsymbols \u0026lt;- unique(mm$Ticker)\rplotListBar \u0026lt;- list()\rfor(symbol in symbols){\rplotListBar[[symbol]] \u0026lt;- ggplot(mm[mm$Ticker == symbol,], aes(Date, value, fill = variable)) + facet_wrap(~ Ticker) +\rgeom_bar(stat=\u0026quot;identity\u0026quot;, position = \u0026quot;dodge\u0026quot;) +\rtheme_tq() +\rtheme(legend.position = \u0026quot;right\u0026quot;)\r}\rplotListBar[1]\r## $UN\rplotListBar[2]\r## $IBM\rplotListBar[3]\r## $GE\rplotListBar[4]\r## $F\r# Print the results to a PDF document\r#pdf(\u0026quot;Plots_OperationalRatios.pdf\u0026quot;, onefile = TRUE, paper = \u0026quot;USr\u0026quot;) #Uncomment if you want to save to .pdf\r#plotListBar\r#dev.off()\r\rAny errors are my own!\rYou can save the results using:\n# library(openxlsx)\r# if(devtools::find_rtools()) Sys.setenv(R_ZIPCMD= file.path(devtools:::get_rtools_path(),\u0026quot;zip\u0026quot;))\r# write.xlsx(CashCycle, \u0026#39;CashCycle.xlsx\u0026#39;)\r# write.xlsx(DuPontAnalysis, \u0026#39;DuPontAnalysis.xlsx\u0026#39;)\r# write.xlsx(NFO_WCAnalysis, \u0026#39;NFO_WCAnalysis.xlsx\u0026#39;)\r# write.xlsx(df, \u0026#39;FinancialsAllCompanies.xlsx\u0026#39;)\r\r","date":1569369600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1569369600,"objectID":"4043688b5bf365976e9afee6c34ed00f","permalink":"/post/nfo-wc-calculations/nfo-wc-calculations-plots/","publishdate":"2019-09-25T00:00:00Z","relpermalink":"/post/nfo-wc-calculations/nfo-wc-calculations-plots/","section":"post","summary":"I use managerial finance and corporate finance methods to scape and analyse fundamental data from yhaoo and analyse companies DuPont, NFO and WC","tags":["finance","yahoo finance","corporate finance","managerial finance","dupont"],"title":"Need for Funds (NFO) and Working Capital (WC) Calculations","type":"post"},{"authors":null,"categories":["Hackerrank"],"content":"\r\rlibrary(knitr)\rlibrary(kableExtra)\rlibrary(ggplot2)\rlibrary(tidyquant)\rlibrary(dplyr)\rProblem 1: Battery Life Prediction Problem\rThe first problem was to predict how long a laptop would last given the number of hours it was charged. The problem is here\nWe can read in the data directly from the hackerrank website using the following:\nBatteryData \u0026lt;- read.table(file = url(\u0026quot;https://s3.amazonaws.com/hr-testcases/399/assets/trainingdata.txt\u0026quot;), strip.white = TRUE, sep = \u0026#39;,\u0026#39;, header = FALSE, skip = 0)\rTable 1: Battery Life Data\r\r\r\rV1\r\rV2\r\r\r\r\r\r2.81\r\r5.62\r\r\r\r7.14\r\r8.00\r\r\r\r2.72\r\r5.44\r\r\r\r3.87\r\r7.74\r\r\r\r1.90\r\r3.80\r\r\r\r7.82\r\r8.00\r\r\r\r\rAt first thought I applied a simple time series model to the data and obtained poor predictions. I then took a closer look at the actual data by plotting it and it told a different story.\nBatteryData %\u0026gt;%\rggplot(aes(x = V1, y = V2)) + geom_point() +\rstat_smooth(method = \u0026quot;lm\u0026quot;, col = \u0026quot;red\u0026quot;) +\rgeom_vline(xintercept = 4) +\rtheme_tq()\rI drew a horizontal line at 4 hours of battery life and plotted a linear regression line - quite clearly it performs badely and I needed to find a different model or better yet set a threshold and predict all observations whose battery had been charging for 4 or more hours to be fully charged.\nThe model:\nLinearPredictionModel \u0026lt;- function(TestData){\rTrainData \u0026lt;- read.table(file = url(\u0026quot;https://s3.amazonaws.com/hr-testcases/399/assets/trainingdata.txt\u0026quot;), strip.white = TRUE, sep = \u0026#39;,\u0026#39;, header = FALSE, skip = 0)\rTrainData$LessThanFour \u0026lt;- ifelse(TrainData[, 2] \u0026lt; 4, 1, 0)\rLMData \u0026lt;- TrainData %\u0026gt;%\rfilter(LessThanFour == 1)\rLinearModel \u0026lt;- lm(V1 ~ V2, data = LMData) TestData \u0026lt;- data.frame(V2 = TestData)\rSTDOUT \u0026lt;- ifelse(TestData \u0026lt; 4, predict(LinearModel, newdata = TestData), 8)\rreturn(cat(STDOUT))\r}\rThe model basically tells us that if the data is less than 4, then fit a simple linear regression model if it is greater or equal to 4 then just apply an 8 prediction.\nWe can input some new data as follows:\nTestData \u0026lt;- c(5, 8, 1, 0.2, 3.5, 5.6, 4.32)\rLinearPredictionModel(TestData)\r## 8 8 0.5 0.1 1.75 8 8\r\rProblem 2: House Price Prediction Problem using XGBoost\rIn this problem I want to train an XGBoost (Extreme Gradient Boosting) model to predict what a house is going to be based on some characteristics. There is a house price prediction problem on Hackerrank here but I used the pre-installed base R house prices data.\nlibrary(AER)\rlibrary(car)\rlibrary(dplyr)\rlibrary(xgboost)\rlibrary(tidyquant)\rlibrary(Metrics)\rLoad in the data and set factors to numeric for easier pre-processing.\ndata(\u0026quot;HousePrices\u0026quot;)\rdata \u0026lt;- HousePrices %\u0026gt;%\rmutate_if(is.factor, as.numeric)\rTable 2: House Price Data\r\r\r\rprice\r\rlotsize\r\rbedrooms\r\rbathrooms\r\rstories\r\rdriveway\r\rrecreation\r\rfullbase\r\rgasheat\r\raircon\r\rgarage\r\rprefer\r\r\r\r\r\r42000\r\r5850\r\r3\r\r1\r\r2\r\r2\r\r1\r\r2\r\r1\r\r1\r\r1\r\r1\r\r\r\r38500\r\r4000\r\r2\r\r1\r\r1\r\r2\r\r1\r\r1\r\r1\r\r1\r\r0\r\r1\r\r\r\r49500\r\r3060\r\r3\r\r1\r\r1\r\r2\r\r1\r\r1\r\r1\r\r1\r\r0\r\r1\r\r\r\r60500\r\r6650\r\r3\r\r1\r\r2\r\r2\r\r2\r\r1\r\r1\r\r1\r\r0\r\r1\r\r\r\r61000\r\r6360\r\r2\r\r1\r\r1\r\r2\r\r1\r\r1\r\r1\r\r1\r\r0\r\r1\r\r\r\r66000\r\r4160\r\r3\r\r1\r\r1\r\r2\r\r2\r\r2\r\r1\r\r2\r\r0\r\r1\r\r\r\r\rSplit the data between 80% train and 20% testing.\n####################################################################################\r# For this example split between train and test\rsmp_size \u0026lt;- floor(nrow(data) * 0.80)\rtrain_ind \u0026lt;- sample(seq_len(nrow(data)), size = smp_size)\rtrain \u0026lt;- data[train_ind, ]\rtest \u0026lt;- data[-train_ind, ]\rpaste(\u0026quot;Train Dimensions\u0026quot;); dim(train)\r## [1] \u0026quot;Train Dimensions\u0026quot;\r## [1] 436 12\rpaste(\u0026quot;Test Dimensions\u0026quot;); dim(test)\r## [1] \u0026quot;Test Dimensions\u0026quot;\r## [1] 110 12\rI create the function to take the training and testing data, train a model and output the predictions. I omit the cross-validation and hype-parameter tuning here but I will write a post detailing how I use a grid search to find the optimal parameters of an XGBoost model soon, (it takes some explaining of the functions I create).\n####################################################################################\rpredictHouseSales \u0026lt;- function(train_data, test_data){\rx_train \u0026lt;- subset(train_data, select = c(-price))\ry_train \u0026lt;- subset(train_data, select = c(price)) %\u0026gt;% pull(price)\rx_test \u0026lt;- subset(test_data, select = c(-price))\ry_test \u0026lt;- subset(test_data, select = c(price)) %\u0026gt;% pull(price)\rdtrain \u0026lt;- xgb.DMatrix(data = as.matrix(x_train), label = y_train, missing = \u0026quot;NaN\u0026quot;)\rdtest \u0026lt;- xgb.DMatrix(data = as.matrix(x_test), missing = \u0026quot;NaN\u0026quot;)\rparams \u0026lt;- list(\r\u0026quot;eta\u0026quot; = 0.1, \u0026quot;max_depth\u0026quot; = 5, \u0026quot;objective\u0026quot; = \u0026quot;reg:linear\u0026quot;,\r\u0026quot;eval_metric\u0026quot;= \u0026quot;rmse\u0026quot;\r)\rxgb.model \u0026lt;- xgb.train(params, dtrain, nrounds = 100)\rreturn(predict(xgb.model, newdata = dtest))\r}\rmyPredictions \u0026lt;- predictHouseSales(train, test)\rWe can inspect some of the predictions and compare them to the actual preditions below:\n####################################################################################\rmyPredictions %\u0026gt;%\rdata.frame() %\u0026gt;%\rsetNames(c(\u0026quot;myPreds\u0026quot;)) %\u0026gt;%\rmutate(myPreds = round(myPreds, 0)) %\u0026gt;%\rbind_cols(test) %\u0026gt;%\rselect(myPreds, price) %\u0026gt;%\rsample_n(5) %\u0026gt;%\rkable(caption = \u0026quot;Compare predictions to the observed\u0026quot;) %\u0026gt;%\rkable_styling(bootstrap_options = c(\u0026quot;striped\u0026quot;, \u0026quot;hover\u0026quot;, \u0026quot;condensed\u0026quot;, \u0026quot;responsive\u0026quot;), font_size = 12)\rTable 3: Compare predictions to the observed\r\r\r\rmyPreds\r\rprice\r\r\r\r\r\r49942\r\r39000\r\r\r\r117177\r\r115442\r\r\r\r65904\r\r34000\r\r\r\r65651\r\r42000\r\r\r\r48866\r\r65000\r\r\r\r\rCompute the Root Mean Square Error:\n####################################################################################\rmyPredictions %\u0026gt;%\rdata.frame() %\u0026gt;%\rsetNames(c(\u0026quot;myPreds\u0026quot;)) %\u0026gt;%\rmutate(myPreds = round(myPreds, 0)) %\u0026gt;%\rbind_cols(test) %\u0026gt;%\rselect(myPreds, price) %\u0026gt;%\rsummarise(rmse(myPreds, price)) %\u0026gt;%\rkable(caption = \u0026quot;Compute the RMSE\u0026quot;) %\u0026gt;%\rkable_styling(bootstrap_options = c(\u0026quot;striped\u0026quot;, \u0026quot;hover\u0026quot;, \u0026quot;condensed\u0026quot;, \u0026quot;responsive\u0026quot;), font_size = 12)\rTable 4: Compute the RMSE\r\r\r\rrmse(myPreds, price)\r\r\r\r\r\r16266.12\r\r\r\r\rWe can also plot the predictions against the observed using ggplot2:\n####################################################################################\rmyPredictions %\u0026gt;%\rdata.frame() %\u0026gt;%\rsetNames(c(\u0026quot;myPreds\u0026quot;)) %\u0026gt;%\rmutate(myPreds = round(myPreds, 0)) %\u0026gt;%\rbind_cols(test) %\u0026gt;%\rselect(myPreds, price) %\u0026gt;%\rggplot(aes(x = price, y = myPreds)) +\rgeom_point() +\rgeom_smooth(method = \u0026#39;lm\u0026#39;) +\rggtitle(\u0026quot;My predictions vs Actual Price\u0026quot;) +\rtheme_tq()\rThe model does okay without any feature engineering or parameter optimisation using a grid search method.\n\rProblem 3: Imputing missing values - cross section\rFor simplicity I load in the iris dataset and I create some random missing values since the iris data doesn’t have any.\n# Load in the data\rlibrary(missForest)\rdata(iris)\rdata \u0026lt;- iris\rTable 5: Iris dataset\r\r\r\rSepal.Length\r\rSepal.Width\r\rPetal.Length\r\rPetal.Width\r\rSpecies\r\r\r\r\r\r5.1\r\r3.5\r\r1.4\r\r0.2\r\rsetosa\r\r\r\r4.9\r\r3.0\r\r1.4\r\r0.2\r\rsetosa\r\r\r\r4.7\r\r3.2\r\r1.3\r\r0.2\r\rsetosa\r\r\r\r4.6\r\r3.1\r\r1.5\r\r0.2\r\rsetosa\r\r\r\r5.0\r\r3.6\r\r1.4\r\r0.2\r\rsetosa\r\r\r\r5.4\r\r3.9\r\r1.7\r\r0.4\r\rsetosa\r\r\r\r\rI generate some random missing data, i.e. 20% of the data is missing at random (MaR) or Missing Completely at Random (MCaR). This is an important issue for economists since much of the data we collect contains missing values, due to surveys not being filled correctly, or simply data not being very well colelcted. The below model allows us to impute the missing values using machine learning, avoiding simple averaging or simply removing the values all together.\n## [1] \u0026quot;Create some random missing data\u0026quot;\rTable 6: Iris dataset with random missing values\r\r\r\rSepal.Length\r\rSepal.Width\r\rPetal.Length\r\rPetal.Width\r\rSpecies\r\r\r\r\r\r5.1\r\r3.5\r\r1.4\r\r0.2\r\rsetosa\r\r\r\r4.9\r\r3.0\r\r1.4\r\rNA\r\rsetosa\r\r\r\rNA\r\r3.2\r\r1.3\r\r0.2\r\rsetosa\r\r\r\r4.6\r\r3.1\r\rNA\r\r0.2\r\rsetosa\r\r\r\r5.0\r\r3.6\r\rNA\r\r0.2\r\rsetosa\r\r\r\r5.4\r\r3.9\r\rNA\r\r0.4\r\rsetosa\r\r\r\r\rOkay now we can train a series of simple missing value imputation models on the data.\n\rModel 1: randomForest Imputation:\rI won’t discuss the models here but random forests uses a collection of decision trees and averages the results across all trees, which results it some powerful predictions.\n## missForest iteration 1 in progress...done!\r## missForest iteration 2 in progress...done!\r## missForest iteration 3 in progress...done!\r## missForest iteration 4 in progress...done!\r## missForest iteration 5 in progress...done!\r## missForest iteration 6 in progress...done!\r## missForest iteration 7 in progress...done!\rTable 7: Iris dataset\r\r\r\rSepal.Length\r\rSepal.Width\r\rPetal.Length\r\rPetal.Width\r\rSpecies\r\r\r\r\r\r5.100000\r\r3.5\r\r1.400000\r\r0.2000000\r\rsetosa\r\r\r\r4.900000\r\r3.0\r\r1.400000\r\r0.1415167\r\rsetosa\r\r\r\r4.722635\r\r3.2\r\r1.300000\r\r0.2000000\r\rsetosa\r\r\r\r4.600000\r\r3.1\r\r1.197250\r\r0.2000000\r\rsetosa\r\r\r\r5.000000\r\r3.6\r\r1.409930\r\r0.2000000\r\rsetosa\r\r\r\r5.400000\r\r3.9\r\r1.419667\r\r0.4000000\r\rsetosa\r\r\r\r\rLets combine all the data together, filter it down to the actual data, the missing data and the predicted data.\nFor the Sepal.Length data\rTable 8: Compare Sepal Observations\r\r\r\rPredicted_Sepal\r\rActual_Sepal\r\r\r\r\r\r6.3\r\r6.9\r\r\r\r5.1\r\r5.0\r\r\r\r7.0\r\r6.3\r\r\r\r5.7\r\r5.6\r\r\r\r5.1\r\r5.1\r\r\r\r6.2\r\r6.5\r\r\r\r4.7\r\r4.8\r\r\r\r6.0\r\r5.8\r\r\r\r6.0\r\r6.9\r\r\r\r5.6\r\r5.8\r\r\r\r\rWhich isn’t bad! given that we only had 436 observations to train on and only 110 observations to test on. Using randomForest models to impute the data is better than averaging the data on some datasets, of course we have errors the actual observations are somewhat close to the predicted data. I only analyse the Sepal.Length data but substitute the values to find the missing values for the Sepal.Width, Petal.Length, Petal.Width and Species values since missorest imputes categorical variables as well.\n\r\r","date":1569283200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1569283200,"objectID":"63b2b567c8b113d83d5ce08bc1f2f0d6","permalink":"/post/hackerrank-competitions/hackerrank-compeitions/","publishdate":"2019-09-24T00:00:00Z","relpermalink":"/post/hackerrank-competitions/hackerrank-compeitions/","section":"post","summary":"I show my solutions to a few Hackerrank competitions/problems I had completed and discuss the models and solutions.","tags":["machine learning","hackerrank","time series","xgboost"],"title":"Series of Hackerrank Competitions","type":"post"},{"authors":null,"categories":["Yahoo Finance"],"content":"\r\rlibrary(knitr)\rlibrary(kableExtra)\rlibrary(tidyquant)\rlibrary(directlabels)\rlibrary(tibble)\rlibrary(tidyr)\rlibrary(quantmod)\rI developed a model to collect financial information from Yahoo Finance, I wanted to use this model to understand a little better how to analyse comanies, what ratios are important and to see how companies performances differ from each other.\n# A function to collect fundamental data from Yahoo finance (Income Statement, Balance Sheet and Cash Flow statements, just skip past this part.)\rgetFin \u0026lt;- function(stock){\rif (\u0026quot;rvest\u0026quot; %in% installed.packages()) {\rlibrary(rvest)\r}else{\rinstall.packages(\u0026quot;rvest\u0026quot;)\rlibrary(rvest)\r}\rfor (i in 1:length(stock)) {\rtryCatch(\r{\r# Collect the Income Statement data\rlink \u0026lt;- \u0026quot;https://finance.yahoo.com/quote/\u0026quot;\rlink \u0026lt;- paste0(link, stock[i], \u0026quot;/financials?p=\u0026quot;, stock[i])\rwahis.session \u0026lt;- html_session(link)\rp \u0026lt;- wahis.session %\u0026gt;%\rhtml_nodes(xpath = \u0026#39;//*[@id=\u0026quot;Col1-1-Financials-Proxy\u0026quot;]/section/div[3]/table\u0026#39;)%\u0026gt;%\rhtml_table(fill = TRUE)\rIncomeStatement \u0026lt;- p[[1]]\rcolnames(IncomeStatement) \u0026lt;- paste(IncomeStatement[1,])\rIncomeStatement \u0026lt;- IncomeStatement[-c(1,5,12,20,25),]\rnames_row \u0026lt;- paste(IncomeStatement[,1])\rIncomeStatement \u0026lt;- IncomeStatement[,-1]\rIncomeStatement \u0026lt;- apply(IncomeStatement, 2, function(x){gsub(\u0026quot;,\u0026quot;,\u0026quot;\u0026quot;,x)})\rIncomeStatement \u0026lt;- as.data.frame(apply(IncomeStatement, 2, as.numeric))\rrownames(IncomeStatement) \u0026lt;- paste(names_row)\rtemp1 \u0026lt;- IncomeStatement\r# Collect the Balance Sheet data\rlink \u0026lt;- \u0026quot;https://finance.yahoo.com/quote/\u0026quot;\rlink \u0026lt;- paste0(link, stock[i],\u0026quot;/balance-sheet?p=\u0026quot;, stock[i])\rwahis.session \u0026lt;- html_session(link)\rp \u0026lt;- wahis.session %\u0026gt;%\rhtml_nodes(xpath = \u0026#39;//*[@id=\u0026quot;Col1-1-Financials-Proxy\u0026quot;]/section/div[3]/table\u0026#39;)%\u0026gt;%\rhtml_table(fill = TRUE)\rBalanceSheet \u0026lt;- p[[1]]\rcolnames(BalanceSheet) \u0026lt;- BalanceSheet[1,]\rBalanceSheet \u0026lt;- BalanceSheet[-c(1,2,17,28),]\rnames_row \u0026lt;- BalanceSheet[,1]\rBalanceSheet \u0026lt;- BalanceSheet[,-1]\rBalanceSheet \u0026lt;- apply(BalanceSheet, 2, function(x){gsub(\u0026quot;,\u0026quot;,\u0026quot;\u0026quot;,x)})\rBalanceSheet \u0026lt;- as.data.frame(apply(BalanceSheet, 2, as.numeric))\rrownames(BalanceSheet) \u0026lt;- paste(names_row)\rtemp2 \u0026lt;- BalanceSheet\r# Collect the Cash Flow data\rlink \u0026lt;- \u0026quot;https://finance.yahoo.com/quote/\u0026quot;\rlink \u0026lt;- paste0(link, stock[i], \u0026quot;/cash-flow?p=\u0026quot;, stock[i])\rwahis.session \u0026lt;- html_session(link)\rp \u0026lt;- wahis.session %\u0026gt;%\rhtml_nodes(xpath = \u0026#39;//*[@id=\u0026quot;Col1-1-Financials-Proxy\u0026quot;]/section/div[3]/table\u0026#39;)%\u0026gt;%\rhtml_table(fill = TRUE)\rCashFlow \u0026lt;- p[[1]]\rcolnames(CashFlow) \u0026lt;- CashFlow[1,]\rCashFlow \u0026lt;- CashFlow[-c(1,3,11,16),]\rnames_row \u0026lt;- CashFlow[,1]\rCashFlow \u0026lt;- CashFlow[,-1]\rCashFlow \u0026lt;- apply(CashFlow, 2, function(x){gsub(\u0026quot;,\u0026quot;,\u0026quot;\u0026quot;,x)})\rCashFlow \u0026lt;- as.data.frame(apply(CashFlow, 2, as.numeric))\rrownames(CashFlow) \u0026lt;- paste(names_row)\rtemp3 \u0026lt;- CashFlow\rassign(paste0(stock[i],\u0026#39;.f\u0026#39;),value = list(IncomeStatement = temp1, BalanceSheet = temp2, CashFlow = temp3), envir = parent.frame())\r},\rerror = function(cond){\rmessage(stock[i], \u0026quot;Give error \u0026quot;,cond)\r}\r)\r}\r}\rI firstly scrape the Yahoo Finance website and collect fundamental data for the Income Statement, Balance Sheet, and Cash Flows. I will analyse some well known comparable tech stocks Apple, Amazon, Google, Microsoft and Baidu and see how they all compare.\nsymbols \u0026lt;- c(\u0026quot;AAPL\u0026quot;, \u0026quot;AMZN\u0026quot;, \u0026quot;GOOG\u0026quot;, \u0026quot;MSFT\u0026quot;, \u0026quot;BIDU\u0026quot;)\rgetFin(symbols)\rsymbols.f \u0026lt;- sapply(symbols, function(x) { paste0(x, \u0026quot;.f\u0026quot;) })\rtickers \u0026lt;- list2env(mget(symbols.f))\rIS \u0026lt;- lapply(tickers, \u0026quot;[[\u0026quot;, \u0026quot;IncomeStatement\u0026quot;)\rBS \u0026lt;- lapply(tickers, \u0026quot;[[\u0026quot;, \u0026quot;BalanceSheet\u0026quot;)\rCF \u0026lt;- lapply(tickers, \u0026quot;[[\u0026quot;, \u0026quot;CashFlow\u0026quot;)\rIS \u0026lt;- as.data.frame(IS)\rBS \u0026lt;- as.data.frame(BS)\rCF \u0026lt;- as.data.frame(CF)\rHow the Income Statement looks:\rTable 1: Income Statement\r\r\r\r\rBIDU.f.12.31.2018\r\rBIDU.f.12.31.2017\r\rBIDU.f.12.31.2016\r\rBIDU.f.12.31.2015\r\rMSFT.f.6.30.2019\r\rMSFT.f.6.30.2018\r\rMSFT.f.6.30.2017\r\rMSFT.f.6.30.2016\r\rGOOG.f.12.31.2018\r\rGOOG.f.12.31.2017\r\rGOOG.f.12.31.2016\r\rGOOG.f.12.31.2015\r\rAMZN.f.12.31.2018\r\rAMZN.f.12.31.2017\r\rAMZN.f.12.31.2016\r\rAMZN.f.12.31.2015\r\rAAPL.f.9.29.2018\r\rAAPL.f.9.30.2017\r\rAAPL.f.9.24.2016\r\rAAPL.f.9.26.2015\r\r\r\r\r\rTotal Revenue\r\r103877000\r\r86709000\r\r70549000\r\r66382000\r\r125843000\r\r110360000\r\r96571000\r\r91154000\r\r136819000\r\r110855000\r\r90272000\r\r74989000\r\r232887000\r\r177866000\r\r135987000\r\r107006000\r\r265595000\r\r229234000\r\r215639000\r\r233715000\r\r\r\rCost of Revenue\r\r51744000\r\r38294000\r\r31358000\r\r22814000\r\r42910000\r\r38353000\r\r34261000\r\r32780000\r\r59549000\r\r45583000\r\r35138000\r\r28164000\r\r139156000\r\r111934000\r\r88265000\r\r71651000\r\r163756000\r\r141048000\r\r131376000\r\r140089000\r\r\r\rGross Profit\r\r52133000\r\r48415000\r\r39191000\r\r43568000\r\r82933000\r\r72007000\r\r62310000\r\r58374000\r\r77270000\r\r65272000\r\r55134000\r\r46825000\r\r93731000\r\r65932000\r\r47722000\r\r35355000\r\r101839000\r\r88186000\r\r84263000\r\r93626000\r\r\r\rResearch Development\r\r15772000\r\r12928000\r\r10151000\r\r10176000\r\r16876000\r\r14726000\r\r13037000\r\r11988000\r\r21419000\r\r16625000\r\r13948000\r\r12282000\r\r28837000\r\r22620000\r\r16085000\r\r12540000\r\r14236000\r\r11581000\r\r10045000\r\r8067000\r\r\r\rSelling General and Administrative\r\r19231000\r\r13128000\r\r15071000\r\r17076000\r\r23098000\r\r22223000\r\r19942000\r\r19198000\r\r24459000\r\r19765000\r\r17470000\r\r15183000\r\r52177000\r\r38992000\r\r27284000\r\r20411000\r\r16705000\r\r15261000\r\r14194000\r\r14329000\r\r\r\rNon Recurring\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rOthers\r\rNA\r\r4768000\r\r3920000\r\r4644000\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\r296000\r\r214000\r\r167000\r\r171000\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rTotal Operating Expenses\r\r86747000\r\r69118000\r\r60500000\r\r54710000\r\r82884000\r\r75302000\r\r67240000\r\r63966000\r\r105427000\r\r81973000\r\r66556000\r\r55629000\r\r220466000\r\r173760000\r\r131801000\r\r104773000\r\r194697000\r\r167890000\r\r155615000\r\r162485000\r\r\r\rOperating Income or Loss\r\r17130000\r\r17591000\r\r10049000\r\r11672000\r\r42959000\r\r35058000\r\r29331000\r\r27188000\r\r31392000\r\r28882000\r\r23716000\r\r19360000\r\r12421000\r\r4106000\r\r4186000\r\r2233000\r\r70898000\r\r61344000\r\r60024000\r\r71230000\r\r\r\rTotal Other Income/Expenses Net\r\r10195000\r\r3692000\r\r4460000\r\r26235000\r\r729000\r\r1416000\r\r570000\r\r-1549000\r\r3521000\r\r-1689000\r\r434000\r\r291000\r\r-1151000\r\r-304000\r\r-390000\r\r-687000\r\r2005000\r\r2745000\r\r1348000\r\r1285000\r\r\r\rEarnings Before Interest and Taxes\r\r17130000\r\r17591000\r\r10049000\r\r11672000\r\r42959000\r\r35058000\r\r29331000\r\r27188000\r\r31392000\r\r28882000\r\r23716000\r\r19360000\r\r12421000\r\r4106000\r\r4186000\r\r2233000\r\r70898000\r\r61344000\r\r60024000\r\r71230000\r\r\r\rInterest Expense\r\r-3483000\r\r-3515000\r\r-1158000\r\r-1041000\r\r-2686000\r\r-2733000\r\r-2222000\r\r-1243000\r\r-114000\r\r-109000\r\r-124000\r\r-104000\r\r-1417000\r\r-848000\r\r-484000\r\r-459000\r\r-3240000\r\r-2323000\r\r-1456000\r\r-733000\r\r\r\rIncome Before Tax\r\r27325000\r\r21283000\r\r14509000\r\r37907000\r\r43688000\r\r36474000\r\r29901000\r\r25639000\r\r34913000\r\r27193000\r\r24150000\r\r19651000\r\r11270000\r\r3802000\r\r3796000\r\r1546000\r\r72903000\r\r64089000\r\r61372000\r\r72515000\r\r\r\rIncome Tax Expense\r\r4743000\r\r2995000\r\r2913000\r\r5475000\r\r4448000\r\r19903000\r\r4412000\r\r5100000\r\r4177000\r\r14531000\r\r4672000\r\r3303000\r\r1197000\r\r769000\r\r1425000\r\r950000\r\r13372000\r\r15738000\r\r15685000\r\r19121000\r\r\r\rMinority Interest\r\r12855000\r\r15026000\r\r5469000\r\r3960053\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rNet Income From Continuing Ops\r\r22582000\r\r18288000\r\r11596000\r\r32432000\r\r39240000\r\r16571000\r\r25489000\r\r20539000\r\r30736000\r\r12662000\r\r19478000\r\r16348000\r\r10073000\r\r3033000\r\r2371000\r\r596000\r\r59531000\r\r48351000\r\r45687000\r\r53394000\r\r\r\rDiscontinued Operations\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rExtraordinary Items\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rEffect Of Accounting Changes\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rOther Items\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rNet Income\r\r27573000\r\r18301000\r\r11632000\r\r33664000\r\r39240000\r\r16571000\r\r25489000\r\r20539000\r\r30736000\r\r12662000\r\r19478000\r\r16348000\r\r10073000\r\r3033000\r\r2371000\r\r596000\r\r59531000\r\r48351000\r\r45687000\r\r53394000\r\r\r\rPreferred Stock And Other Adjustments\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rNet Income Applicable To Common Shares\r\r27443000\r\r18318000\r\r11075000\r\r33335000\r\r39240000\r\r16571000\r\r25489000\r\r20539000\r\r30736000\r\r12662000\r\r19478000\r\r16348000\r\r10073000\r\r3033000\r\r2371000\r\r596000\r\r59531000\r\r48351000\r\r45687000\r\r53394000\r\r\r\r\r\rHow the Balance Sheet looks:\rTable 2: Balance Sheet\r\r\r\r\rBIDU.f.12.31.2018\r\rBIDU.f.12.31.2017\r\rBIDU.f.12.31.2016\r\rBIDU.f.12.31.2015\r\rMSFT.f.6.30.2019\r\rMSFT.f.6.30.2018\r\rMSFT.f.6.30.2017\r\rMSFT.f.6.30.2016\r\rGOOG.f.12.31.2018\r\rGOOG.f.12.31.2017\r\rGOOG.f.12.31.2016\r\rGOOG.f.12.31.2015\r\rAMZN.f.12.31.2018\r\rAMZN.f.12.31.2017\r\rAMZN.f.12.31.2016\r\rAMZN.f.12.31.2015\r\rAAPL.f.9.29.2018\r\rAAPL.f.9.30.2017\r\rAAPL.f.9.24.2016\r\rAAPL.f.9.26.2015\r\r\r\r\r\rCash And Cash Equivalents\r\r27638000\r\r11084000\r\r10898000\r\r9959932\r\r11356000\r\r11946000\r\r7663000\r\r6510000\r\r16701000\r\r10715000\r\r12918000\r\r15409000\r\r31750000\r\r20522000\r\r19334000\r\r15890000\r\r25913000\r\r20289000\r\r20484000\r\r21120000\r\r\r\rShort Term Investments\r\r111873000\r\r107935000\r\r79183000\r\r58349394\r\r122476000\r\r121718000\r\r125238000\r\r106531000\r\r92439000\r\r91156000\r\r73415000\r\r56517000\r\r9500000\r\r10464000\r\r6647000\r\r3918000\r\r40388000\r\r53892000\r\r46671000\r\r20481000\r\r\r\rNet Receivables\r\r9107000\r\r28989000\r\r6665000\r\r6413180\r\r29524000\r\r26481000\r\r22431000\r\r18277000\r\r21193000\r\r18705000\r\r15632000\r\r13459000\r\r16259000\r\r11835000\r\r8339000\r\r5654000\r\r48995000\r\r35673000\r\r29299000\r\r30343000\r\r\r\rInventory\r\rNA\r\rNA\r\rNA\r\rNA\r\r2063000\r\r2662000\r\r2181000\r\r2251000\r\r1107000\r\r749000\r\r268000\r\r491000\r\r17174000\r\r16047000\r\r11461000\r\r10243000\r\r3956000\r\r4855000\r\r2132000\r\r2349000\r\r\r\rOther Current Assets\r\r5818000\r\r2763000\r\r2625000\r\r3168819\r\r10133000\r\r6855000\r\r5183000\r\r6091000\r\r4236000\r\r2983000\r\r3175000\r\r1590000\r\r418000\r\r1329000\r\rNA\r\rNA\r\r12087000\r\r13936000\r\r8283000\r\r14691000\r\r\r\rTotal Current Assets\r\r155094000\r\r151169000\r\r99760000\r\r78233663\r\r175552000\r\r169662000\r\r162696000\r\r139660000\r\r135676000\r\r124308000\r\r105408000\r\r90114000\r\r75101000\r\r60197000\r\r45781000\r\r35705000\r\r131339000\r\r128645000\r\r106869000\r\r89378000\r\r\r\rLong Term Investments\r\r80647000\r\r56451000\r\r45690000\r\r37958591\r\r2649000\r\r1862000\r\r6023000\r\r10438000\r\r13859000\r\r7813000\r\r5878000\r\r5183000\r\r440000\r\r441000\r\r223000\r\r16000\r\r170799000\r\r194714000\r\r170430000\r\r164065000\r\r\r\rProperty, plant and equipment\r\r17903000\r\r12475000\r\r11294000\r\r10627127\r\r43856000\r\r36146000\r\r30289000\r\r18356000\r\r59719000\r\r42383000\r\r34234000\r\r29016000\r\r61797000\r\r48866000\r\r29114000\r\r21838000\r\r41304000\r\r33783000\r\r27010000\r\r22471000\r\r\r\rGoodwill\r\r18536000\r\r15806000\r\r15342000\r\r15395573\r\r42026000\r\r35683000\r\r35122000\r\r17872000\r\r17888000\r\r16747000\r\r16468000\r\r15869000\r\r14548000\r\r13350000\r\r3784000\r\r3759000\r\rNA\r\rNA\r\r5414000\r\r5116000\r\r\r\rIntangible Assets\r\r9181000\r\r5467000\r\r3872000\r\r3334619\r\r7750000\r\r8053000\r\r10106000\r\r3733000\r\r2220000\r\r2692000\r\r3307000\r\r3847000\r\r4110000\r\r3371000\r\r854000\r\r992000\r\rNA\r\rNA\r\r3206000\r\r3893000\r\r\r\rAccumulated Amortization\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rOther Assets\r\r16205000\r\r10360000\r\r6039000\r\r2303735\r\r14723000\r\r7442000\r\r6076000\r\r3409000\r\r3430000\r\r3352000\r\r2202000\r\r3432000\r\r6652000\r\r5085000\r\r3646000\r\r2437000\r\r22283000\r\r18177000\r\r8757000\r\r5422000\r\r\r\rDeferred Long Term Asset Charges\r\r2324000\r\r1532000\r\r1100000\r\r1008174\r\r7536000\r\r1369000\r\r248000\r\r219000\r\r737000\r\r680000\r\r383000\r\r251000\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rTotal Assets\r\r297566000\r\r251728000\r\r181997000\r\r147853308\r\r286556000\r\r258848000\r\r250312000\r\r193468000\r\r232792000\r\r197295000\r\r167497000\r\r147461000\r\r162648000\r\r131310000\r\r83402000\r\r64747000\r\r365725000\r\r375319000\r\r321686000\r\r290345000\r\r\r\rAccounts Payable\r\r2966000\r\r2300000\r\r2184000\r\r1054936\r\r9382000\r\r8617000\r\r7390000\r\r6898000\r\r4378000\r\r3137000\r\r2041000\r\r1931000\r\r38192000\r\r34616000\r\r25309000\r\r20397000\r\r55888000\r\r44242000\r\r37294000\r\r35490000\r\r\r\rShort/Current Long Term Debt\r\r6955000\r\r6510000\r\r8671000\r\r974820\r\r5516000\r\r3998000\r\r1049000\r\rNA\r\rNA\r\rNA\r\rNA\r\r1000000\r\r1371000\r\r100000\r\r1056000\r\r238000\r\r8784000\r\r6496000\r\r3500000\r\r2513000\r\r\r\rOther Current Liabilities\r\r28841000\r\r60413000\r\r24742000\r\r15975724\r\r45860000\r\r38195000\r\r30879000\r\r33972000\r\r16009000\r\r10651000\r\r5851000\r\r4327000\r\r9959000\r\r8565000\r\r7168000\r\r5118000\r\r40230000\r\r38099000\r\r8243000\r\r10939000\r\r\r\rTotal Current Liabilities\r\r56853000\r\r82057000\r\r46102000\r\r26102802\r\r69420000\r\r58488000\r\r55745000\r\r59357000\r\r34620000\r\r24183000\r\r16756000\r\r19310000\r\r68391000\r\r57883000\r\r43816000\r\r33887000\r\r116866000\r\r100814000\r\r79006000\r\r80610000\r\r\r\rLong Term Debt\r\r54903000\r\r35812000\r\r34470000\r\r33941792\r\r66662000\r\r72242000\r\r76073000\r\r40557000\r\r3950000\r\r3943000\r\r3935000\r\r1995000\r\r23495000\r\r24743000\r\r7694000\r\r8227000\r\r93735000\r\r97207000\r\r75427000\r\r53329000\r\r\r\rOther Liabilities\r\r10058000\r\r3487000\r\r3682000\r\r3584563\r\r35699000\r\r35707000\r\r22986000\r\r20796000\r\r16532000\r\r16641000\r\r7770000\r\r5825000\r\r10921000\r\r7792000\r\r5088000\r\r3301000\r\r47977000\r\r43251000\r\r39004000\r\r37051000\r\r\r\rDeferred Long Term Liability Charges\r\r3700000\r\r1600000\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rMinority Interest\r\r12855000\r\r15026000\r\r5469000\r\r3960053\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rNegative Goodwill\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rTotal Liabilities\r\r121814000\r\r121356000\r\r84254000\r\r63637592\r\r184226000\r\r176130000\r\r162601000\r\r121471000\r\r55164000\r\r44793000\r\r28461000\r\r27130000\r\r119099000\r\r103601000\r\r64117000\r\r51363000\r\r258578000\r\r241272000\r\r193437000\r\r170990000\r\r\r\rMisc. Stocks Options Warrants\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rRedeemable Preferred Stock\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rPreferred Stock\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rCommon Stock\r\rNA\r\rNA\r\rNA\r\r15\r\r78520000\r\r71223000\r\r69315000\r\r68178000\r\r45049000\r\r40247000\r\r36307000\r\r32982000\r\r5000\r\r5000\r\r5000\r\r5000\r\r40201000\r\r35867000\r\r31251000\r\r27416000\r\r\r\rRetained Earnings\r\r129246000\r\r102328000\r\r85734000\r\r74659355\r\r24150000\r\r13682000\r\r17769000\r\r2282000\r\r134885000\r\r113247000\r\r105131000\r\r89223000\r\r19625000\r\r8636000\r\r4916000\r\r2545000\r\r70400000\r\r98330000\r\r96364000\r\r92284000\r\r\r\rTreasury Stock\r\r210000\r\r930000\r\r-1783000\r\r-806056\r\r-340000\r\r-2187000\r\r627000\r\r1537000\r\r-2306000\r\r-992000\r\r-2402000\r\r-1874000\r\r-2872000\r\r-2321000\r\r-2822000\r\r-2560000\r\r-3454000\r\r-150000\r\r634000\r\r-345000\r\r\r\rCapital Surplus\r\r33441000\r\r12088000\r\r8323000\r\r6402349\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\r26791000\r\r21389000\r\r17186000\r\r13394000\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rOther Stockholder Equity\r\r210000\r\r930000\r\r-1783000\r\r-806056\r\r-340000\r\r-2187000\r\r627000\r\r1537000\r\r-2306000\r\r-992000\r\r-2402000\r\r-1874000\r\r-1035000\r\r-484000\r\r-985000\r\r-723000\r\r-3454000\r\r-150000\r\r634000\r\r-345000\r\r\r\rTotal stockholders’ equity\r\r162897000\r\r115346000\r\r92274000\r\r80255663\r\r102330000\r\r82718000\r\r87711000\r\r71997000\r\r177628000\r\r152502000\r\r139036000\r\r120331000\r\r43549000\r\r27709000\r\r19285000\r\r13384000\r\r107147000\r\r134047000\r\r128249000\r\r119355000\r\r\r\rNet Tangible Assets\r\r135180000\r\r94073000\r\r73060000\r\r61525471\r\r52554000\r\r38982000\r\r42483000\r\r50392000\r\r157520000\r\r133063000\r\r119261000\r\r100615000\r\r24891000\r\r10988000\r\r14647000\r\r8633000\r\r107147000\r\r134047000\r\r119629000\r\r110346000\r\r\r\r\r\rHow the Cash Flow Statement looks:\rTable 3: Cash Flow Statements\r\r\r\r\rBIDU.f.12.31.2018\r\rBIDU.f.12.31.2017\r\rBIDU.f.12.31.2016\r\rBIDU.f.12.31.2015\r\rMSFT.f.6.30.2019\r\rMSFT.f.6.30.2018\r\rMSFT.f.6.30.2017\r\rMSFT.f.6.30.2016\r\rGOOG.f.12.31.2018\r\rGOOG.f.12.31.2017\r\rGOOG.f.12.31.2016\r\rGOOG.f.12.31.2015\r\rAMZN.f.12.31.2018\r\rAMZN.f.12.31.2017\r\rAMZN.f.12.31.2016\r\rAMZN.f.12.31.2015\r\rAAPL.f.9.29.2018\r\rAAPL.f.9.30.2017\r\rAAPL.f.9.24.2016\r\rAAPL.f.9.26.2015\r\r\r\r\r\rNet Income\r\r27573000\r\r18301000\r\r11632000\r\r33664000\r\r39240000\r\r16571000\r\r25489000\r\r20539000\r\r30736000\r\r12662000\r\r19478000\r\r16348000\r\r10073000\r\r3033000\r\r2371000\r\r596000\r\r59531000\r\r48351000\r\r45687000\r\r53394000\r\r\r\rDepreciation\r\r16187000\r\r11748000\r\r8327000\r\r5848000\r\r11600000\r\r9900000\r\r7800000\r\r5878000\r\r9029000\r\r6899000\r\r6100000\r\r5024000\r\r15341000\r\r11478000\r\r8116000\r\r5646000\r\r10903000\r\r10157000\r\r10505000\r\r11257000\r\r\r\rAdjustments To Net Income\r\r-11074000\r\r-3744000\r\r-3721000\r\r-24690000\r\r-2521000\r\r-3054000\r\r1342000\r\r6229000\r\r3298000\r\r8284000\r\r7158000\r\r5609000\r\r6352000\r\r4096000\r\r2869000\r\r2605000\r\r-27694000\r\r10640000\r\r9634000\r\r5353000\r\r\r\rChanges In Accounts Receivables\r\r-1611000\r\r-721000\r\r-238000\r\r-869000\r\r-2812000\r\r-3862000\r\r-1216000\r\r562000\r\r-2169000\r\r-3768000\r\r-2578000\r\r-2094000\r\r-4615000\r\r-4780000\r\r-3436000\r\r-1755000\r\r-5322000\r\r-2093000\r\r527000\r\r417000\r\r\r\rChanges In Liabilities\r\r4942000\r\r6113000\r\r4976000\r\r9228000\r\r4694000\r\r7070000\r\r3901000\r\r2653000\r\r1438000\r\r1121000\r\r333000\r\r246000\r\r4414000\r\r7838000\r\r6985000\r\r5586000\r\r9131000\r\r8340000\r\r563000\r\r6043000\r\r\r\rChanges In Inventories\r\rNA\r\rNA\r\rNA\r\rNA\r\r597000\r\r-465000\r\r50000\r\r600000\r\rNA\r\rNA\r\rNA\r\rNA\r\r-1314000\r\r-3583000\r\r-1426000\r\r-2187000\r\r828000\r\r-2723000\r\r217000\r\r-238000\r\r\r\rChanges In Other Operating Activities\r\r-50000\r\r1131000\r\r1504000\r\r-3423000\r\r-1542000\r\r-459000\r\r349000\r\r-2907000\r\r7890000\r\r3682000\r\r2420000\r\r1618000\r\r472000\r\r283000\r\r1724000\r\r913000\r\r30057000\r\r-8447000\r\r-902000\r\r5040000\r\r\r\rTotal Cash Flow From Operating Activities\r\r35967000\r\r32828000\r\r22480000\r\r19771000\r\r52185000\r\r43884000\r\r39507000\r\r33325000\r\r47971000\r\r37091000\r\r36036000\r\r26572000\r\r30723000\r\r18365000\r\r17203000\r\r12039000\r\r77434000\r\r64225000\r\r66231000\r\r81266000\r\r\r\rCapital Expenditure\r\r-8861000\r\r-4829000\r\r-4215000\r\r-5251000\r\r-13925000\r\r-11632000\r\r-8129000\r\r-8343000\r\r-25139000\r\r-13184000\r\r-10212000\r\r-9950000\r\r-13427000\r\r-11955000\r\r-7804000\r\r-5387000\r\r-13313000\r\r-12451000\r\r-12734000\r\r-11247000\r\r\r\rInvestments\r\r-21668000\r\r-40411000\r\r-21371000\r\r-19665000\r\r540000\r\r6557000\r\r-12511000\r\r-14417000\r\r-1972000\r\r-19448000\r\r-18229000\r\r-13635000\r\r1140000\r\r-3054000\r\r-2663000\r\r-1066000\r\r30845000\r\r-33542000\r\r-32022000\r\r-44417000\r\r\r\rOther Cash flows from Investing Activities\r\r3685000\r\r13000\r\r5000\r\r8000\r\rNA\r\r-98000\r\r-197000\r\r203000\r\rNA\r\r1419000\r\r-1978000\r\r75000\r\r2104000\r\r1897000\r\r1067000\r\r798000\r\r-745000\r\r-124000\r\r-924000\r\r-26000\r\r\r\rTotal Cash Flows From Investing Activities\r\r-34460000\r\r-76949000\r\r-35911000\r\r-31621000\r\r-15773000\r\r-6061000\r\r-46781000\r\r-23950000\r\r-28504000\r\r-31401000\r\r-31165000\r\r-23711000\r\r-12369000\r\r-27084000\r\r-9516000\r\r-6450000\r\r16066000\r\r-46446000\r\r-45977000\r\r-56274000\r\r\r\rDividends Paid\r\rNA\r\rNA\r\rNA\r\rNA\r\r-13811000\r\r-12699000\r\r-11845000\r\r-11006000\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\r-13712000\r\r-12769000\r\r-12150000\r\r-11561000\r\r\r\rSale Purchase of Stock\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rNet Borrowings\r\r20727000\r\r23579000\r\r6850000\r\r10352000\r\r-4000000\r\r-10201000\r\r31459000\r\r18283000\r\r-61000\r\r-86000\r\r-1335000\r\r-23000\r\r-7686000\r\r9928000\r\r-3716000\r\r-3882000\r\r432000\r\r29014000\r\r22057000\r\r29305000\r\r\r\rOther Cash Flows from Financing Activities\r\r-3009000\r\r22248000\r\r7421000\r\r3578000\r\r-675000\r\r-971000\r\r-190000\r\r-369000\r\r-4043000\r\r-3366000\r\r-3304000\r\r-2422000\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\rNA\r\r749000\r\r\r\rTotal Cash Flows From Financing Activities\r\r15082000\r\r44557000\r\r14447000\r\r7778000\r\r-36887000\r\r-33590000\r\r8408000\r\r-8393000\r\r-13179000\r\r-8298000\r\r-8332000\r\r-4225000\r\r-7686000\r\r9928000\r\r-3716000\r\r-3882000\r\r-87876000\r\r-17974000\r\r-20890000\r\r-17716000\r\r\r\rEffect Of Exchange Rate Changes\r\r1902000\r\r-316000\r\r144000\r\r179000\r\r-115000\r\r50000\r\r19000\r\r-67000\r\r-302000\r\r405000\r\r-170000\r\r-434000\r\r-351000\r\r713000\r\r-212000\r\r-374000\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rChange In Cash and Cash Equivalents\r\r18491000\r\r120000\r\r1160000\r\r-3893000\r\r-590000\r\r4283000\r\r1153000\r\r915000\r\r5986000\r\r-2203000\r\r-3631000\r\r-1798000\r\r10317000\r\r1922000\r\r3759000\r\r1333000\r\r5624000\r\r-195000\r\r-636000\r\r7276000\r\r\r\r\rThe data still looks a little messy and unreadable and in order to do the calculations we should have the data in a different shape. That is, I find it easier to program calculations column wise instead of rowwise. It’s also easier to combine the data instead of calculating the ratios across different data frames as we have currently.\n\rClean the data up a little bit\rISBSCF \u0026lt;- rbind(IS, BS, CF)\rISBSCF \u0026lt;- ISBSCF %\u0026gt;%\rt() %\u0026gt;%\rdata.frame() %\u0026gt;%\rrownames_to_column(\u0026#39;rn\u0026#39;) %\u0026gt;%\rseparate(rn, into = c(\u0026quot;symbol\u0026quot;, \u0026quot;year\u0026quot;),\rsep = -4, convert = TRUE)\rISBSCF$symbol \u0026lt;- gsub(\u0026quot;(f).*\u0026quot;, \u0026quot;\u0026quot;, ISBSCF$symbol)\rISBSCF$symbol \u0026lt;- gsub(\u0026#39;.$\u0026#39;, \u0026#39;\u0026#39;, ISBSCF$symbol)\rISBSCF$symbol \u0026lt;- gsub(\u0026#39;^X\u0026#39;, \u0026#39;\u0026#39;, ISBSCF$symbol)\r\rHow all the fundamentals look now:\rTable 4: Income Statement - Balance Sheet - Cash Flow\r\r\r\rsymbol\r\ryear\r\rTotal.Revenue\r\rCost.of.Revenue\r\rGross.Profit\r\rResearch.Development\r\rSelling.General.and.Administrative\r\rNon.Recurring\r\rOthers\r\rTotal.Operating.Expenses\r\rOperating.Income.or.Loss\r\rTotal.Other.Income.Expenses.Net\r\rEarnings.Before.Interest.and.Taxes\r\rInterest.Expense\r\rIncome.Before.Tax\r\rIncome.Tax.Expense\r\rMinority.Interest\r\rNet.Income.From.Continuing.Ops\r\rDiscontinued.Operations\r\rExtraordinary.Items\r\rEffect.Of.Accounting.Changes\r\rOther.Items\r\rNet.Income\r\rPreferred.Stock.And.Other.Adjustments\r\rNet.Income.Applicable.To.Common.Shares\r\rCash.And.Cash.Equivalents\r\rShort.Term.Investments\r\rNet.Receivables\r\rInventory\r\rOther.Current.Assets\r\rTotal.Current.Assets\r\rLong.Term.Investments\r\rProperty..plant.and.equipment\r\rGoodwill\r\rIntangible.Assets\r\rAccumulated.Amortization\r\rOther.Assets\r\rDeferred.Long.Term.Asset.Charges\r\rTotal.Assets\r\rAccounts.Payable\r\rShort.Current.Long.Term.Debt\r\rOther.Current.Liabilities\r\rTotal.Current.Liabilities\r\rLong.Term.Debt\r\rOther.Liabilities\r\rDeferred.Long.Term.Liability.Charges\r\rMinority.Interest1\r\rNegative.Goodwill\r\rTotal.Liabilities\r\rMisc..Stocks.Options.Warrants\r\rRedeemable.Preferred.Stock\r\rPreferred.Stock\r\rCommon.Stock\r\rRetained.Earnings\r\rTreasury.Stock\r\rCapital.Surplus\r\rOther.Stockholder.Equity\r\rTotal.stockholders..equity\r\rNet.Tangible.Assets\r\rNet.Income1\r\rDepreciation\r\rAdjustments.To.Net.Income\r\rChanges.In.Accounts.Receivables\r\rChanges.In.Liabilities\r\rChanges.In.Inventories\r\rChanges.In.Other.Operating.Activities\r\rTotal.Cash.Flow.From.Operating.Activities\r\rCapital.Expenditure\r\rInvestments\r\rOther.Cash.flows.from.Investing.Activities\r\rTotal.Cash.Flows.From.Investing.Activities\r\rDividends.Paid\r\rSale.Purchase.of.Stock\r\rNet.Borrowings\r\rOther.Cash.Flows.from.Financing.Activities\r\rTotal.Cash.Flows.From.Financing.Activities\r\rEffect.Of.Exchange.Rate.Changes\r\rChange.In.Cash.and.Cash.Equivalents\r\r\r\r\r\rBIDU\r\r2018\r\r103877000\r\r51744000\r\r52133000\r\r15772000\r\r19231000\r\rNA\r\rNA\r\r86747000\r\r17130000\r\r10195000\r\r17130000\r\r-3483000\r\r27325000\r\r4743000\r\r12855000\r\r22582000\r\rNA\r\rNA\r\rNA\r\rNA\r\r27573000\r\rNA\r\r27443000\r\r27638000\r\r111873000\r\r9107000\r\rNA\r\r5818000\r\r155094000\r\r80647000\r\r17903000\r\r18536000\r\r9181000\r\rNA\r\r16205000\r\r2324000\r\r297566000\r\r2966000\r\r6955000\r\r28841000\r\r56853000\r\r54903000\r\r10058000\r\r3700000\r\r12855000\r\rNA\r\r121814000\r\rNA\r\rNA\r\rNA\r\rNA\r\r129246000\r\r210000\r\r33441000\r\r210000\r\r162897000\r\r135180000\r\r27573000\r\r16187000\r\r-11074000\r\r-1611000\r\r4942000\r\rNA\r\r-50000\r\r35967000\r\r-8861000\r\r-21668000\r\r3685000\r\r-34460000\r\rNA\r\rNA\r\r20727000\r\r-3009000\r\r15082000\r\r1902000\r\r18491000\r\r\r\rBIDU\r\r2017\r\r86709000\r\r38294000\r\r48415000\r\r12928000\r\r13128000\r\rNA\r\r4768000\r\r69118000\r\r17591000\r\r3692000\r\r17591000\r\r-3515000\r\r21283000\r\r2995000\r\r15026000\r\r18288000\r\rNA\r\rNA\r\rNA\r\rNA\r\r18301000\r\rNA\r\r18318000\r\r11084000\r\r107935000\r\r28989000\r\rNA\r\r2763000\r\r151169000\r\r56451000\r\r12475000\r\r15806000\r\r5467000\r\rNA\r\r10360000\r\r1532000\r\r251728000\r\r2300000\r\r6510000\r\r60413000\r\r82057000\r\r35812000\r\r3487000\r\r1600000\r\r15026000\r\rNA\r\r121356000\r\rNA\r\rNA\r\rNA\r\rNA\r\r102328000\r\r930000\r\r12088000\r\r930000\r\r115346000\r\r94073000\r\r18301000\r\r11748000\r\r-3744000\r\r-721000\r\r6113000\r\rNA\r\r1131000\r\r32828000\r\r-4829000\r\r-40411000\r\r13000\r\r-76949000\r\rNA\r\rNA\r\r23579000\r\r22248000\r\r44557000\r\r-316000\r\r120000\r\r\r\rBIDU\r\r2016\r\r70549000\r\r31358000\r\r39191000\r\r10151000\r\r15071000\r\rNA\r\r3920000\r\r60500000\r\r10049000\r\r4460000\r\r10049000\r\r-1158000\r\r14509000\r\r2913000\r\r5469000\r\r11596000\r\rNA\r\rNA\r\rNA\r\rNA\r\r11632000\r\rNA\r\r11075000\r\r10898000\r\r79183000\r\r6665000\r\rNA\r\r2625000\r\r99760000\r\r45690000\r\r11294000\r\r15342000\r\r3872000\r\rNA\r\r6039000\r\r1100000\r\r181997000\r\r2184000\r\r8671000\r\r24742000\r\r46102000\r\r34470000\r\r3682000\r\rNA\r\r5469000\r\rNA\r\r84254000\r\rNA\r\rNA\r\rNA\r\rNA\r\r85734000\r\r-1783000\r\r8323000\r\r-1783000\r\r92274000\r\r73060000\r\r11632000\r\r8327000\r\r-3721000\r\r-238000\r\r4976000\r\rNA\r\r1504000\r\r22480000\r\r-4215000\r\r-21371000\r\r5000\r\r-35911000\r\rNA\r\rNA\r\r6850000\r\r7421000\r\r14447000\r\r144000\r\r1160000\r\r\r\rBIDU\r\r2015\r\r66382000\r\r22814000\r\r43568000\r\r10176000\r\r17076000\r\rNA\r\r4644000\r\r54710000\r\r11672000\r\r26235000\r\r11672000\r\r-1041000\r\r37907000\r\r5475000\r\r3960053\r\r32432000\r\rNA\r\rNA\r\rNA\r\rNA\r\r33664000\r\rNA\r\r33335000\r\r9959932\r\r58349394\r\r6413180\r\rNA\r\r3168819\r\r78233663\r\r37958591\r\r10627127\r\r15395573\r\r3334619\r\rNA\r\r2303735\r\r1008174\r\r147853308\r\r1054936\r\r974820\r\r15975724\r\r26102802\r\r33941792\r\r3584563\r\rNA\r\r3960053\r\rNA\r\r63637592\r\rNA\r\rNA\r\rNA\r\r15\r\r74659355\r\r-806056\r\r6402349\r\r-806056\r\r80255663\r\r61525471\r\r33664000\r\r5848000\r\r-24690000\r\r-869000\r\r9228000\r\rNA\r\r-3423000\r\r19771000\r\r-5251000\r\r-19665000\r\r8000\r\r-31621000\r\rNA\r\rNA\r\r10352000\r\r3578000\r\r7778000\r\r179000\r\r-3893000\r\r\r\rMSFT\r\r2019\r\r125843000\r\r42910000\r\r82933000\r\r16876000\r\r23098000\r\rNA\r\rNA\r\r82884000\r\r42959000\r\r729000\r\r42959000\r\r-2686000\r\r43688000\r\r4448000\r\rNA\r\r39240000\r\rNA\r\rNA\r\rNA\r\rNA\r\r39240000\r\rNA\r\r39240000\r\r11356000\r\r122476000\r\r29524000\r\r2063000\r\r10133000\r\r175552000\r\r2649000\r\r43856000\r\r42026000\r\r7750000\r\rNA\r\r14723000\r\r7536000\r\r286556000\r\r9382000\r\r5516000\r\r45860000\r\r69420000\r\r66662000\r\r35699000\r\rNA\r\rNA\r\rNA\r\r184226000\r\rNA\r\rNA\r\rNA\r\r78520000\r\r24150000\r\r-340000\r\rNA\r\r-340000\r\r102330000\r\r52554000\r\r39240000\r\r11600000\r\r-2521000\r\r-2812000\r\r4694000\r\r597000\r\r-1542000\r\r52185000\r\r-13925000\r\r540000\r\rNA\r\r-15773000\r\r-13811000\r\rNA\r\r-4000000\r\r-675000\r\r-36887000\r\r-115000\r\r-590000\r\r\r\rMSFT\r\r2018\r\r110360000\r\r38353000\r\r72007000\r\r14726000\r\r22223000\r\rNA\r\rNA\r\r75302000\r\r35058000\r\r1416000\r\r35058000\r\r-2733000\r\r36474000\r\r19903000\r\rNA\r\r16571000\r\rNA\r\rNA\r\rNA\r\rNA\r\r16571000\r\rNA\r\r16571000\r\r11946000\r\r121718000\r\r26481000\r\r2662000\r\r6855000\r\r169662000\r\r1862000\r\r36146000\r\r35683000\r\r8053000\r\rNA\r\r7442000\r\r1369000\r\r258848000\r\r8617000\r\r3998000\r\r38195000\r\r58488000\r\r72242000\r\r35707000\r\rNA\r\rNA\r\rNA\r\r176130000\r\rNA\r\rNA\r\rNA\r\r71223000\r\r13682000\r\r-2187000\r\rNA\r\r-2187000\r\r82718000\r\r38982000\r\r16571000\r\r9900000\r\r-3054000\r\r-3862000\r\r7070000\r\r-465000\r\r-459000\r\r43884000\r\r-11632000\r\r6557000\r\r-98000\r\r-6061000\r\r-12699000\r\rNA\r\r-10201000\r\r-971000\r\r-33590000\r\r50000\r\r4283000\r\r\r\rMSFT\r\r2017\r\r96571000\r\r34261000\r\r62310000\r\r13037000\r\r19942000\r\rNA\r\rNA\r\r67240000\r\r29331000\r\r570000\r\r29331000\r\r-2222000\r\r29901000\r\r4412000\r\rNA\r\r25489000\r\rNA\r\rNA\r\rNA\r\rNA\r\r25489000\r\rNA\r\r25489000\r\r7663000\r\r125238000\r\r22431000\r\r2181000\r\r5183000\r\r162696000\r\r6023000\r\r30289000\r\r35122000\r\r10106000\r\rNA\r\r6076000\r\r248000\r\r250312000\r\r7390000\r\r1049000\r\r30879000\r\r55745000\r\r76073000\r\r22986000\r\rNA\r\rNA\r\rNA\r\r162601000\r\rNA\r\rNA\r\rNA\r\r69315000\r\r17769000\r\r627000\r\rNA\r\r627000\r\r87711000\r\r42483000\r\r25489000\r\r7800000\r\r1342000\r\r-1216000\r\r3901000\r\r50000\r\r349000\r\r39507000\r\r-8129000\r\r-12511000\r\r-197000\r\r-46781000\r\r-11845000\r\rNA\r\r31459000\r\r-190000\r\r8408000\r\r19000\r\r1153000\r\r\r\rMSFT\r\r2016\r\r91154000\r\r32780000\r\r58374000\r\r11988000\r\r19198000\r\rNA\r\rNA\r\r63966000\r\r27188000\r\r-1549000\r\r27188000\r\r-1243000\r\r25639000\r\r5100000\r\rNA\r\r20539000\r\rNA\r\rNA\r\rNA\r\rNA\r\r20539000\r\rNA\r\r20539000\r\r6510000\r\r106531000\r\r18277000\r\r2251000\r\r6091000\r\r139660000\r\r10438000\r\r18356000\r\r17872000\r\r3733000\r\rNA\r\r3409000\r\r219000\r\r193468000\r\r6898000\r\rNA\r\r33972000\r\r59357000\r\r40557000\r\r20796000\r\rNA\r\rNA\r\rNA\r\r121471000\r\rNA\r\rNA\r\rNA\r\r68178000\r\r2282000\r\r1537000\r\rNA\r\r1537000\r\r71997000\r\r50392000\r\r20539000\r\r5878000\r\r6229000\r\r562000\r\r2653000\r\r600000\r\r-2907000\r\r33325000\r\r-8343000\r\r-14417000\r\r203000\r\r-23950000\r\r-11006000\r\rNA\r\r18283000\r\r-369000\r\r-8393000\r\r-67000\r\r915000\r\r\r\rGOOG\r\r2018\r\r136819000\r\r59549000\r\r77270000\r\r21419000\r\r24459000\r\rNA\r\rNA\r\r105427000\r\r31392000\r\r3521000\r\r31392000\r\r-114000\r\r34913000\r\r4177000\r\rNA\r\r30736000\r\rNA\r\rNA\r\rNA\r\rNA\r\r30736000\r\rNA\r\r30736000\r\r16701000\r\r92439000\r\r21193000\r\r1107000\r\r4236000\r\r135676000\r\r13859000\r\r59719000\r\r17888000\r\r2220000\r\rNA\r\r3430000\r\r737000\r\r232792000\r\r4378000\r\rNA\r\r16009000\r\r34620000\r\r3950000\r\r16532000\r\rNA\r\rNA\r\rNA\r\r55164000\r\rNA\r\rNA\r\rNA\r\r45049000\r\r134885000\r\r-2306000\r\rNA\r\r-2306000\r\r177628000\r\r157520000\r\r30736000\r\r9029000\r\r3298000\r\r-2169000\r\r1438000\r\rNA\r\r7890000\r\r47971000\r\r-25139000\r\r-1972000\r\rNA\r\r-28504000\r\rNA\r\rNA\r\r-61000\r\r-4043000\r\r-13179000\r\r-302000\r\r5986000\r\r\r\rGOOG\r\r2017\r\r110855000\r\r45583000\r\r65272000\r\r16625000\r\r19765000\r\rNA\r\rNA\r\r81973000\r\r28882000\r\r-1689000\r\r28882000\r\r-109000\r\r27193000\r\r14531000\r\rNA\r\r12662000\r\rNA\r\rNA\r\rNA\r\rNA\r\r12662000\r\rNA\r\r12662000\r\r10715000\r\r91156000\r\r18705000\r\r749000\r\r2983000\r\r124308000\r\r7813000\r\r42383000\r\r16747000\r\r2692000\r\rNA\r\r3352000\r\r680000\r\r197295000\r\r3137000\r\rNA\r\r10651000\r\r24183000\r\r3943000\r\r16641000\r\rNA\r\rNA\r\rNA\r\r44793000\r\rNA\r\rNA\r\rNA\r\r40247000\r\r113247000\r\r-992000\r\rNA\r\r-992000\r\r152502000\r\r133063000\r\r12662000\r\r6899000\r\r8284000\r\r-3768000\r\r1121000\r\rNA\r\r3682000\r\r37091000\r\r-13184000\r\r-19448000\r\r1419000\r\r-31401000\r\rNA\r\rNA\r\r-86000\r\r-3366000\r\r-8298000\r\r405000\r\r-2203000\r\r\r\rGOOG\r\r2016\r\r90272000\r\r35138000\r\r55134000\r\r13948000\r\r17470000\r\rNA\r\rNA\r\r66556000\r\r23716000\r\r434000\r\r23716000\r\r-124000\r\r24150000\r\r4672000\r\rNA\r\r19478000\r\rNA\r\rNA\r\rNA\r\rNA\r\r19478000\r\rNA\r\r19478000\r\r12918000\r\r73415000\r\r15632000\r\r268000\r\r3175000\r\r105408000\r\r5878000\r\r34234000\r\r16468000\r\r3307000\r\rNA\r\r2202000\r\r383000\r\r167497000\r\r2041000\r\rNA\r\r5851000\r\r16756000\r\r3935000\r\r7770000\r\rNA\r\rNA\r\rNA\r\r28461000\r\rNA\r\rNA\r\rNA\r\r36307000\r\r105131000\r\r-2402000\r\rNA\r\r-2402000\r\r139036000\r\r119261000\r\r19478000\r\r6100000\r\r7158000\r\r-2578000\r\r333000\r\rNA\r\r2420000\r\r36036000\r\r-10212000\r\r-18229000\r\r-1978000\r\r-31165000\r\rNA\r\rNA\r\r-1335000\r\r-3304000\r\r-8332000\r\r-170000\r\r-3631000\r\r\r\rGOOG\r\r2015\r\r74989000\r\r28164000\r\r46825000\r\r12282000\r\r15183000\r\rNA\r\rNA\r\r55629000\r\r19360000\r\r291000\r\r19360000\r\r-104000\r\r19651000\r\r3303000\r\rNA\r\r16348000\r\rNA\r\rNA\r\rNA\r\rNA\r\r16348000\r\rNA\r\r16348000\r\r15409000\r\r56517000\r\r13459000\r\r491000\r\r1590000\r\r90114000\r\r5183000\r\r29016000\r\r15869000\r\r3847000\r\rNA\r\r3432000\r\r251000\r\r147461000\r\r1931000\r\r1000000\r\r4327000\r\r19310000\r\r1995000\r\r5825000\r\rNA\r\rNA\r\rNA\r\r27130000\r\rNA\r\rNA\r\rNA\r\r32982000\r\r89223000\r\r-1874000\r\rNA\r\r-1874000\r\r120331000\r\r100615000\r\r16348000\r\r5024000\r\r5609000\r\r-2094000\r\r246000\r\rNA\r\r1618000\r\r26572000\r\r-9950000\r\r-13635000\r\r75000\r\r-23711000\r\rNA\r\rNA\r\r-23000\r\r-2422000\r\r-4225000\r\r-434000\r\r-1798000\r\r\r\rAMZN\r\r2018\r\r232887000\r\r139156000\r\r93731000\r\r28837000\r\r52177000\r\rNA\r\r296000\r\r220466000\r\r12421000\r\r-1151000\r\r12421000\r\r-1417000\r\r11270000\r\r1197000\r\rNA\r\r10073000\r\rNA\r\rNA\r\rNA\r\rNA\r\r10073000\r\rNA\r\r10073000\r\r31750000\r\r9500000\r\r16259000\r\r17174000\r\r418000\r\r75101000\r\r440000\r\r61797000\r\r14548000\r\r4110000\r\rNA\r\r6652000\r\rNA\r\r162648000\r\r38192000\r\r1371000\r\r9959000\r\r68391000\r\r23495000\r\r10921000\r\rNA\r\rNA\r\rNA\r\r119099000\r\rNA\r\rNA\r\rNA\r\r5000\r\r19625000\r\r-2872000\r\r26791000\r\r-1035000\r\r43549000\r\r24891000\r\r10073000\r\r15341000\r\r6352000\r\r-4615000\r\r4414000\r\r-1314000\r\r472000\r\r30723000\r\r-13427000\r\r1140000\r\r2104000\r\r-12369000\r\rNA\r\rNA\r\r-7686000\r\rNA\r\r-7686000\r\r-351000\r\r10317000\r\r\r\rAMZN\r\r2017\r\r177866000\r\r111934000\r\r65932000\r\r22620000\r\r38992000\r\rNA\r\r214000\r\r173760000\r\r4106000\r\r-304000\r\r4106000\r\r-848000\r\r3802000\r\r769000\r\rNA\r\r3033000\r\rNA\r\rNA\r\rNA\r\rNA\r\r3033000\r\rNA\r\r3033000\r\r20522000\r\r10464000\r\r11835000\r\r16047000\r\r1329000\r\r60197000\r\r441000\r\r48866000\r\r13350000\r\r3371000\r\rNA\r\r5085000\r\rNA\r\r131310000\r\r34616000\r\r100000\r\r8565000\r\r57883000\r\r24743000\r\r7792000\r\rNA\r\rNA\r\rNA\r\r103601000\r\rNA\r\rNA\r\rNA\r\r5000\r\r8636000\r\r-2321000\r\r21389000\r\r-484000\r\r27709000\r\r10988000\r\r3033000\r\r11478000\r\r4096000\r\r-4780000\r\r7838000\r\r-3583000\r\r283000\r\r18365000\r\r-11955000\r\r-3054000\r\r1897000\r\r-27084000\r\rNA\r\rNA\r\r9928000\r\rNA\r\r9928000\r\r713000\r\r1922000\r\r\r\rAMZN\r\r2016\r\r135987000\r\r88265000\r\r47722000\r\r16085000\r\r27284000\r\rNA\r\r167000\r\r131801000\r\r4186000\r\r-390000\r\r4186000\r\r-484000\r\r3796000\r\r1425000\r\rNA\r\r2371000\r\rNA\r\rNA\r\rNA\r\rNA\r\r2371000\r\rNA\r\r2371000\r\r19334000\r\r6647000\r\r8339000\r\r11461000\r\rNA\r\r45781000\r\r223000\r\r29114000\r\r3784000\r\r854000\r\rNA\r\r3646000\r\rNA\r\r83402000\r\r25309000\r\r1056000\r\r7168000\r\r43816000\r\r7694000\r\r5088000\r\rNA\r\rNA\r\rNA\r\r64117000\r\rNA\r\rNA\r\rNA\r\r5000\r\r4916000\r\r-2822000\r\r17186000\r\r-985000\r\r19285000\r\r14647000\r\r2371000\r\r8116000\r\r2869000\r\r-3436000\r\r6985000\r\r-1426000\r\r1724000\r\r17203000\r\r-7804000\r\r-2663000\r\r1067000\r\r-9516000\r\rNA\r\rNA\r\r-3716000\r\rNA\r\r-3716000\r\r-212000\r\r3759000\r\r\r\rAMZN\r\r2015\r\r107006000\r\r71651000\r\r35355000\r\r12540000\r\r20411000\r\rNA\r\r171000\r\r104773000\r\r2233000\r\r-687000\r\r2233000\r\r-459000\r\r1546000\r\r950000\r\rNA\r\r596000\r\rNA\r\rNA\r\rNA\r\rNA\r\r596000\r\rNA\r\r596000\r\r15890000\r\r3918000\r\r5654000\r\r10243000\r\rNA\r\r35705000\r\r16000\r\r21838000\r\r3759000\r\r992000\r\rNA\r\r2437000\r\rNA\r\r64747000\r\r20397000\r\r238000\r\r5118000\r\r33887000\r\r8227000\r\r3301000\r\rNA\r\rNA\r\rNA\r\r51363000\r\rNA\r\rNA\r\rNA\r\r5000\r\r2545000\r\r-2560000\r\r13394000\r\r-723000\r\r13384000\r\r8633000\r\r596000\r\r5646000\r\r2605000\r\r-1755000\r\r5586000\r\r-2187000\r\r913000\r\r12039000\r\r-5387000\r\r-1066000\r\r798000\r\r-6450000\r\rNA\r\rNA\r\r-3882000\r\rNA\r\r-3882000\r\r-374000\r\r1333000\r\r\r\rAAPL\r\r2018\r\r265595000\r\r163756000\r\r101839000\r\r14236000\r\r16705000\r\rNA\r\rNA\r\r194697000\r\r70898000\r\r2005000\r\r70898000\r\r-3240000\r\r72903000\r\r13372000\r\rNA\r\r59531000\r\rNA\r\rNA\r\rNA\r\rNA\r\r59531000\r\rNA\r\r59531000\r\r25913000\r\r40388000\r\r48995000\r\r3956000\r\r12087000\r\r131339000\r\r170799000\r\r41304000\r\rNA\r\rNA\r\rNA\r\r22283000\r\rNA\r\r365725000\r\r55888000\r\r8784000\r\r40230000\r\r116866000\r\r93735000\r\r47977000\r\rNA\r\rNA\r\rNA\r\r258578000\r\rNA\r\rNA\r\rNA\r\r40201000\r\r70400000\r\r-3454000\r\rNA\r\r-3454000\r\r107147000\r\r107147000\r\r59531000\r\r10903000\r\r-27694000\r\r-5322000\r\r9131000\r\r828000\r\r30057000\r\r77434000\r\r-13313000\r\r30845000\r\r-745000\r\r16066000\r\r-13712000\r\rNA\r\r432000\r\rNA\r\r-87876000\r\rNA\r\r5624000\r\r\r\rAAPL\r\r2017\r\r229234000\r\r141048000\r\r88186000\r\r11581000\r\r15261000\r\rNA\r\rNA\r\r167890000\r\r61344000\r\r2745000\r\r61344000\r\r-2323000\r\r64089000\r\r15738000\r\rNA\r\r48351000\r\rNA\r\rNA\r\rNA\r\rNA\r\r48351000\r\rNA\r\r48351000\r\r20289000\r\r53892000\r\r35673000\r\r4855000\r\r13936000\r\r128645000\r\r194714000\r\r33783000\r\rNA\r\rNA\r\rNA\r\r18177000\r\rNA\r\r375319000\r\r44242000\r\r6496000\r\r38099000\r\r100814000\r\r97207000\r\r43251000\r\rNA\r\rNA\r\rNA\r\r241272000\r\rNA\r\rNA\r\rNA\r\r35867000\r\r98330000\r\r-150000\r\rNA\r\r-150000\r\r134047000\r\r134047000\r\r48351000\r\r10157000\r\r10640000\r\r-2093000\r\r8340000\r\r-2723000\r\r-8447000\r\r64225000\r\r-12451000\r\r-33542000\r\r-124000\r\r-46446000\r\r-12769000\r\rNA\r\r29014000\r\rNA\r\r-17974000\r\rNA\r\r-195000\r\r\r\rAAPL\r\r2016\r\r215639000\r\r131376000\r\r84263000\r\r10045000\r\r14194000\r\rNA\r\rNA\r\r155615000\r\r60024000\r\r1348000\r\r60024000\r\r-1456000\r\r61372000\r\r15685000\r\rNA\r\r45687000\r\rNA\r\rNA\r\rNA\r\rNA\r\r45687000\r\rNA\r\r45687000\r\r20484000\r\r46671000\r\r29299000\r\r2132000\r\r8283000\r\r106869000\r\r170430000\r\r27010000\r\r5414000\r\r3206000\r\rNA\r\r8757000\r\rNA\r\r321686000\r\r37294000\r\r3500000\r\r8243000\r\r79006000\r\r75427000\r\r39004000\r\rNA\r\rNA\r\rNA\r\r193437000\r\rNA\r\rNA\r\rNA\r\r31251000\r\r96364000\r\r634000\r\rNA\r\r634000\r\r128249000\r\r119629000\r\r45687000\r\r10505000\r\r9634000\r\r527000\r\r563000\r\r217000\r\r-902000\r\r66231000\r\r-12734000\r\r-32022000\r\r-924000\r\r-45977000\r\r-12150000\r\rNA\r\r22057000\r\rNA\r\r-20890000\r\rNA\r\r-636000\r\r\r\rAAPL\r\r2015\r\r233715000\r\r140089000\r\r93626000\r\r8067000\r\r14329000\r\rNA\r\rNA\r\r162485000\r\r71230000\r\r1285000\r\r71230000\r\r-733000\r\r72515000\r\r19121000\r\rNA\r\r53394000\r\rNA\r\rNA\r\rNA\r\rNA\r\r53394000\r\rNA\r\r53394000\r\r21120000\r\r20481000\r\r30343000\r\r2349000\r\r14691000\r\r89378000\r\r164065000\r\r22471000\r\r5116000\r\r3893000\r\rNA\r\r5422000\r\rNA\r\r290345000\r\r35490000\r\r2513000\r\r10939000\r\r80610000\r\r53329000\r\r37051000\r\rNA\r\rNA\r\rNA\r\r170990000\r\rNA\r\rNA\r\rNA\r\r27416000\r\r92284000\r\r-345000\r\rNA\r\r-345000\r\r119355000\r\r110346000\r\r53394000\r\r11257000\r\r5353000\r\r417000\r\r6043000\r\r-238000\r\r5040000\r\r81266000\r\r-11247000\r\r-44417000\r\r-26000\r\r-56274000\r\r-11561000\r\rNA\r\r29305000\r\r749000\r\r-17716000\r\rNA\r\r7276000\r\r\r\r\rThis looks much cleaner. The data we currently have at the moment is just the Income Statement, Balance Sheet, and Cash Flow statements, but in order to make better comparisons across firms other information is needed such as Shares Outstanding which will be used in the Market Capitalisation calculation. We can use the quantmod package to pull some statistics from the Yahoo Finance statistics page.\n############################## Get stats data ##################################\rmetrics \u0026lt;- yahooQF(c(\u0026quot;Name\u0026quot;, \u0026quot;Enterprise Value\u0026quot;, \u0026quot;Enterprise Value/Revenue\u0026quot;, \u0026quot;Enterprise Value/EBITDA\u0026quot;, \u0026quot;Total Cash Per Share (mrq)\u0026quot;, \u0026quot;EBITDA\u0026quot;, \u0026quot;Volume\u0026quot;, \u0026quot;P/E Ratio\u0026quot;, \u0026quot;Dividend Yield\u0026quot;, \u0026quot;Shares Outstanding\u0026quot;, \u0026quot;Price/Book\u0026quot;))\rstats \u0026lt;- getQuote(symbols, what = metrics) %\u0026gt;%\rrownames_to_column(\u0026quot;symbol\u0026quot;)\rcolnames(stats) \u0026lt;- gsub(\u0026quot; \u0026quot;, \u0026quot;.\u0026quot;, colnames(stats))\rcolnames(stats) \u0026lt;- gsub(\u0026quot;/\u0026quot;, \u0026quot;.\u0026quot;, colnames(stats))\r\rHow the company statistics look:\rTable 5: Company Statistics\r\r\r\rsymbol\r\rTrade.Time\r\rName\r\rVolume\r\rP.E.Ratio\r\rDividend.Yield\r\rShares.Outstanding\r\rPrice.Book\r\r\r\r\r\rAAPL\r\r2019-09-25 16:00:01\r\rApple Inc. \r19675563\r\r18.767937\r\r0.0135979\r\r4519179776\r\r10.383821\r\r\r\rAMZN\r\r2019-09-25 16:00:01\r\rAmazon.com, Inc. \r3217392\r\r73.362510\r\rNA\r\r494656000\r\r16.463211\r\r\r\rGOOG\r\r2019-09-25 16:00:01\r\rAlphabet Inc. \r1345323\r\r25.164429\r\rNA\r\r347344992\r\r4.501470\r\r\r\rMSFT\r\r2019-09-25 16:00:01\r\rMicrosoft Corporation\r\r20835063\r\r27.541502\r\r0.0133935\r\r7635409920\r\r10.408545\r\r\r\rBIDU\r\r2019-09-25 16:00:01\r\rBaidu, Inc. \r3734534\r\r8.009974\r\rNA\r\r348540992\r\r1.476227\r\r\r\r\rYou can play around with downloading other statistics directly from the Yahoo Statistics pages, for instance, heres the statistics page for GOOG here. Already we have quite a bit of useful information, however not all of the statistics are able to be scraped from the Yahoo Finance statistics pages, therefore we will have to try and compute some ourselves. Moreover, we have some of the important statistics - Shares Outstanding and we can use the PE.Ratio, Dividend.Yield and Price.Book ratios to check the accuracy of our calculations later on.\nWe also need to collect the stock price data since we need the Closing Price today to compute per share statistics.\n############################## Get latest stock price data ######################\rstocks \u0026lt;- symbols %\u0026gt;%\rtq_get(get = \u0026quot;stock.prices\u0026quot;,\rfrom = \u0026quot;2018-01-01\u0026quot;,\rto = Sys.Date()) %\u0026gt;%\rselect(symbol, date, adjusted) %\u0026gt;%\rgroup_by(symbol) %\u0026gt;%\rarrange(desc(date)) %\u0026gt;%\rslice(1)\r\rHow the stock price data looks:\rTable 6: Most Recent Stock Prices\r\r\r\rsymbol\r\rdate\r\radjusted\r\r\r\r\r\rAAPL\r\r2019-09-25\r\r221.03\r\r\r\rAMZN\r\r2019-09-25\r\r1768.33\r\r\r\rBIDU\r\r2019-09-25\r\r102.80\r\r\r\rGOOG\r\r2019-09-25\r\r1246.52\r\r\r\rMSFT\r\r2019-09-25\r\r139.36\r\r\r\r\rWe have three different data sets now ISBSCF, which is our combined Income Statement, Balance Sheet and Cash Flow statements, stats which is our Yahoo Finance company statistics data and finally stock which is todays closing price of our companies.\nNow I join all the data together (we are only interested in 2018 values but we could extend it to more years).\n############################## Join all 3 datasets together ######################\rfinancials \u0026lt;- ISBSCF %\u0026gt;%\rfilter(year == 2018) %\u0026gt;%\rinner_join(stats, by = \u0026quot;symbol\u0026quot;) %\u0026gt;%\rinner_join(stocks, by = \u0026quot;symbol\u0026quot;)\r\rHow all the data looks after joining the fundamentals, stats and latest share price data:\rTable 7: All Data\r\r\r\rsymbol\r\ryear\r\rTotal.Revenue\r\rCost.of.Revenue\r\rGross.Profit\r\rResearch.Development\r\rSelling.General.and.Administrative\r\rNon.Recurring\r\rOthers\r\rTotal.Operating.Expenses\r\rOperating.Income.or.Loss\r\rTotal.Other.Income.Expenses.Net\r\rEarnings.Before.Interest.and.Taxes\r\rInterest.Expense\r\rIncome.Before.Tax\r\rIncome.Tax.Expense\r\rMinority.Interest\r\rNet.Income.From.Continuing.Ops\r\rDiscontinued.Operations\r\rExtraordinary.Items\r\rEffect.Of.Accounting.Changes\r\rOther.Items\r\rNet.Income\r\rPreferred.Stock.And.Other.Adjustments\r\rNet.Income.Applicable.To.Common.Shares\r\rCash.And.Cash.Equivalents\r\rShort.Term.Investments\r\rNet.Receivables\r\rInventory\r\rOther.Current.Assets\r\rTotal.Current.Assets\r\rLong.Term.Investments\r\rProperty..plant.and.equipment\r\rGoodwill\r\rIntangible.Assets\r\rAccumulated.Amortization\r\rOther.Assets\r\rDeferred.Long.Term.Asset.Charges\r\rTotal.Assets\r\rAccounts.Payable\r\rShort.Current.Long.Term.Debt\r\rOther.Current.Liabilities\r\rTotal.Current.Liabilities\r\rLong.Term.Debt\r\rOther.Liabilities\r\rDeferred.Long.Term.Liability.Charges\r\rMinority.Interest1\r\rNegative.Goodwill\r\rTotal.Liabilities\r\rMisc..Stocks.Options.Warrants\r\rRedeemable.Preferred.Stock\r\rPreferred.Stock\r\rCommon.Stock\r\rRetained.Earnings\r\rTreasury.Stock\r\rCapital.Surplus\r\rOther.Stockholder.Equity\r\rTotal.stockholders..equity\r\rNet.Tangible.Assets\r\rNet.Income1\r\rDepreciation\r\rAdjustments.To.Net.Income\r\rChanges.In.Accounts.Receivables\r\rChanges.In.Liabilities\r\rChanges.In.Inventories\r\rChanges.In.Other.Operating.Activities\r\rTotal.Cash.Flow.From.Operating.Activities\r\rCapital.Expenditure\r\rInvestments\r\rOther.Cash.flows.from.Investing.Activities\r\rTotal.Cash.Flows.From.Investing.Activities\r\rDividends.Paid\r\rSale.Purchase.of.Stock\r\rNet.Borrowings\r\rOther.Cash.Flows.from.Financing.Activities\r\rTotal.Cash.Flows.From.Financing.Activities\r\rEffect.Of.Exchange.Rate.Changes\r\rChange.In.Cash.and.Cash.Equivalents\r\rTrade.Time\r\rName\r\rVolume\r\rP.E.Ratio\r\rDividend.Yield\r\rShares.Outstanding\r\rPrice.Book\r\rdate\r\radjusted\r\r\r\r\r\rBIDU\r\r2018\r\r103877000\r\r51744000\r\r52133000\r\r15772000\r\r19231000\r\rNA\r\rNA\r\r86747000\r\r17130000\r\r10195000\r\r17130000\r\r-3483000\r\r27325000\r\r4743000\r\r12855000\r\r22582000\r\rNA\r\rNA\r\rNA\r\rNA\r\r27573000\r\rNA\r\r27443000\r\r27638000\r\r111873000\r\r9107000\r\rNA\r\r5818000\r\r155094000\r\r80647000\r\r17903000\r\r18536000\r\r9181000\r\rNA\r\r16205000\r\r2324000\r\r297566000\r\r2966000\r\r6955000\r\r28841000\r\r56853000\r\r54903000\r\r10058000\r\r3700000\r\r12855000\r\rNA\r\r121814000\r\rNA\r\rNA\r\rNA\r\rNA\r\r129246000\r\r210000\r\r33441000\r\r210000\r\r162897000\r\r135180000\r\r27573000\r\r16187000\r\r-11074000\r\r-1611000\r\r4942000\r\rNA\r\r-50000\r\r35967000\r\r-8861000\r\r-21668000\r\r3685000\r\r-34460000\r\rNA\r\rNA\r\r20727000\r\r-3009000\r\r15082000\r\r1902000\r\r18491000\r\r2019-09-25 16:00:01\r\rBaidu, Inc. \r3734534\r\r8.009974\r\rNA\r\r348540992\r\r1.476227\r\r2019-09-25\r\r102.80\r\r\r\rMSFT\r\r2018\r\r110360000\r\r38353000\r\r72007000\r\r14726000\r\r22223000\r\rNA\r\rNA\r\r75302000\r\r35058000\r\r1416000\r\r35058000\r\r-2733000\r\r36474000\r\r19903000\r\rNA\r\r16571000\r\rNA\r\rNA\r\rNA\r\rNA\r\r16571000\r\rNA\r\r16571000\r\r11946000\r\r121718000\r\r26481000\r\r2662000\r\r6855000\r\r169662000\r\r1862000\r\r36146000\r\r35683000\r\r8053000\r\rNA\r\r7442000\r\r1369000\r\r258848000\r\r8617000\r\r3998000\r\r38195000\r\r58488000\r\r72242000\r\r35707000\r\rNA\r\rNA\r\rNA\r\r176130000\r\rNA\r\rNA\r\rNA\r\r71223000\r\r13682000\r\r-2187000\r\rNA\r\r-2187000\r\r82718000\r\r38982000\r\r16571000\r\r9900000\r\r-3054000\r\r-3862000\r\r7070000\r\r-465000\r\r-459000\r\r43884000\r\r-11632000\r\r6557000\r\r-98000\r\r-6061000\r\r-12699000\r\rNA\r\r-10201000\r\r-971000\r\r-33590000\r\r50000\r\r4283000\r\r2019-09-25 16:00:01\r\rMicrosoft Corporation\r\r20835063\r\r27.541502\r\r0.0133935\r\r7635409920\r\r10.408545\r\r2019-09-25\r\r139.36\r\r\r\rGOOG\r\r2018\r\r136819000\r\r59549000\r\r77270000\r\r21419000\r\r24459000\r\rNA\r\rNA\r\r105427000\r\r31392000\r\r3521000\r\r31392000\r\r-114000\r\r34913000\r\r4177000\r\rNA\r\r30736000\r\rNA\r\rNA\r\rNA\r\rNA\r\r30736000\r\rNA\r\r30736000\r\r16701000\r\r92439000\r\r21193000\r\r1107000\r\r4236000\r\r135676000\r\r13859000\r\r59719000\r\r17888000\r\r2220000\r\rNA\r\r3430000\r\r737000\r\r232792000\r\r4378000\r\rNA\r\r16009000\r\r34620000\r\r3950000\r\r16532000\r\rNA\r\rNA\r\rNA\r\r55164000\r\rNA\r\rNA\r\rNA\r\r45049000\r\r134885000\r\r-2306000\r\rNA\r\r-2306000\r\r177628000\r\r157520000\r\r30736000\r\r9029000\r\r3298000\r\r-2169000\r\r1438000\r\rNA\r\r7890000\r\r47971000\r\r-25139000\r\r-1972000\r\rNA\r\r-28504000\r\rNA\r\rNA\r\r-61000\r\r-4043000\r\r-13179000\r\r-302000\r\r5986000\r\r2019-09-25 16:00:01\r\rAlphabet Inc. \r1345323\r\r25.164429\r\rNA\r\r347344992\r\r4.501470\r\r2019-09-25\r\r1246.52\r\r\r\rAMZN\r\r2018\r\r232887000\r\r139156000\r\r93731000\r\r28837000\r\r52177000\r\rNA\r\r296000\r\r220466000\r\r12421000\r\r-1151000\r\r12421000\r\r-1417000\r\r11270000\r\r1197000\r\rNA\r\r10073000\r\rNA\r\rNA\r\rNA\r\rNA\r\r10073000\r\rNA\r\r10073000\r\r31750000\r\r9500000\r\r16259000\r\r17174000\r\r418000\r\r75101000\r\r440000\r\r61797000\r\r14548000\r\r4110000\r\rNA\r\r6652000\r\rNA\r\r162648000\r\r38192000\r\r1371000\r\r9959000\r\r68391000\r\r23495000\r\r10921000\r\rNA\r\rNA\r\rNA\r\r119099000\r\rNA\r\rNA\r\rNA\r\r5000\r\r19625000\r\r-2872000\r\r26791000\r\r-1035000\r\r43549000\r\r24891000\r\r10073000\r\r15341000\r\r6352000\r\r-4615000\r\r4414000\r\r-1314000\r\r472000\r\r30723000\r\r-13427000\r\r1140000\r\r2104000\r\r-12369000\r\rNA\r\rNA\r\r-7686000\r\rNA\r\r-7686000\r\r-351000\r\r10317000\r\r2019-09-25 16:00:01\r\rAmazon.com, Inc. \r3217392\r\r73.362510\r\rNA\r\r494656000\r\r16.463211\r\r2019-09-25\r\r1768.33\r\r\r\rAAPL\r\r2018\r\r265595000\r\r163756000\r\r101839000\r\r14236000\r\r16705000\r\rNA\r\rNA\r\r194697000\r\r70898000\r\r2005000\r\r70898000\r\r-3240000\r\r72903000\r\r13372000\r\rNA\r\r59531000\r\rNA\r\rNA\r\rNA\r\rNA\r\r59531000\r\rNA\r\r59531000\r\r25913000\r\r40388000\r\r48995000\r\r3956000\r\r12087000\r\r131339000\r\r170799000\r\r41304000\r\rNA\r\rNA\r\rNA\r\r22283000\r\rNA\r\r365725000\r\r55888000\r\r8784000\r\r40230000\r\r116866000\r\r93735000\r\r47977000\r\rNA\r\rNA\r\rNA\r\r258578000\r\rNA\r\rNA\r\rNA\r\r40201000\r\r70400000\r\r-3454000\r\rNA\r\r-3454000\r\r107147000\r\r107147000\r\r59531000\r\r10903000\r\r-27694000\r\r-5322000\r\r9131000\r\r828000\r\r30057000\r\r77434000\r\r-13313000\r\r30845000\r\r-745000\r\r16066000\r\r-13712000\r\rNA\r\r432000\r\rNA\r\r-87876000\r\rNA\r\r5624000\r\r2019-09-25 16:00:01\r\rApple Inc. \r19675563\r\r18.767937\r\r0.0135979\r\r4519179776\r\r10.383821\r\r2019-09-25\r\r221.03\r\r\r\r\rNow I think we have enough information to calculate some financial ratios based on company statistics and their respective financial data. The variables we have are:\n\rWhat variables we have in the data:\rcolnames(financials) %\u0026gt;%\rdata.frame() %\u0026gt;%\rsetNames(c(\u0026quot;Fundamentals\u0026quot;)) %\u0026gt;%\rsplit(as.integer(gl(nrow(.), 14, nrow(.)))) %\u0026gt;%\rkable(caption = \u0026quot;Company Variables\u0026quot;) %\u0026gt;%\rkable_styling(bootstrap_options = c(\u0026quot;striped\u0026quot;, \u0026quot;hover\u0026quot;, \u0026quot;condensed\u0026quot;, \u0026quot;responsive\u0026quot;), font_size = 12)\rTable 8: Company Variables\r\r\r\r\r\r\r\rFundamentals\r\r\r\r\r\rsymbol\r\r\r\ryear\r\r\r\rTotal.Revenue\r\r\r\rCost.of.Revenue\r\r\r\rGross.Profit\r\r\r\rResearch.Development\r\r\r\rSelling.General.and.Administrative\r\r\r\rNon.Recurring\r\r\r\rOthers\r\r\r\rTotal.Operating.Expenses\r\r\r\rOperating.Income.or.Loss\r\r\r\rTotal.Other.Income.Expenses.Net\r\r\r\rEarnings.Before.Interest.and.Taxes\r\r\r\rInterest.Expense\r\r\r\r\r\r\r\r\r\r\rFundamentals\r\r\r\r\r\r15\r\rIncome.Before.Tax\r\r\r\r16\r\rIncome.Tax.Expense\r\r\r\r17\r\rMinority.Interest\r\r\r\r18\r\rNet.Income.From.Continuing.Ops\r\r\r\r19\r\rDiscontinued.Operations\r\r\r\r20\r\rExtraordinary.Items\r\r\r\r21\r\rEffect.Of.Accounting.Changes\r\r\r\r22\r\rOther.Items\r\r\r\r23\r\rNet.Income\r\r\r\r24\r\rPreferred.Stock.And.Other.Adjustments\r\r\r\r25\r\rNet.Income.Applicable.To.Common.Shares\r\r\r\r26\r\rCash.And.Cash.Equivalents\r\r\r\r27\r\rShort.Term.Investments\r\r\r\r28\r\rNet.Receivables\r\r\r\r\r\r\r\r\r\r\rFundamentals\r\r\r\r\r\r29\r\rInventory\r\r\r\r30\r\rOther.Current.Assets\r\r\r\r31\r\rTotal.Current.Assets\r\r\r\r32\r\rLong.Term.Investments\r\r\r\r33\r\rProperty..plant.and.equipment\r\r\r\r34\r\rGoodwill\r\r\r\r35\r\rIntangible.Assets\r\r\r\r36\r\rAccumulated.Amortization\r\r\r\r37\r\rOther.Assets\r\r\r\r38\r\rDeferred.Long.Term.Asset.Charges\r\r\r\r39\r\rTotal.Assets\r\r\r\r40\r\rAccounts.Payable\r\r\r\r41\r\rShort.Current.Long.Term.Debt\r\r\r\r42\r\rOther.Current.Liabilities\r\r\r\r\r\r\r\r\r\r\rFundamentals\r\r\r\r\r\r43\r\rTotal.Current.Liabilities\r\r\r\r44\r\rLong.Term.Debt\r\r\r\r45\r\rOther.Liabilities\r\r\r\r46\r\rDeferred.Long.Term.Liability.Charges\r\r\r\r47\r\rMinority.Interest1\r\r\r\r48\r\rNegative.Goodwill\r\r\r\r49\r\rTotal.Liabilities\r\r\r\r50\r\rMisc..Stocks.Options.Warrants\r\r\r\r51\r\rRedeemable.Preferred.Stock\r\r\r\r52\r\rPreferred.Stock\r\r\r\r53\r\rCommon.Stock\r\r\r\r54\r\rRetained.Earnings\r\r\r\r55\r\rTreasury.Stock\r\r\r\r56\r\rCapital.Surplus\r\r\r\r\r\r\r\r\r\r\rFundamentals\r\r\r\r\r\r57\r\rOther.Stockholder.Equity\r\r\r\r58\r\rTotal.stockholders..equity\r\r\r\r59\r\rNet.Tangible.Assets\r\r\r\r60\r\rNet.Income1\r\r\r\r61\r\rDepreciation\r\r\r\r62\r\rAdjustments.To.Net.Income\r\r\r\r63\r\rChanges.In.Accounts.Receivables\r\r\r\r64\r\rChanges.In.Liabilities\r\r\r\r65\r\rChanges.In.Inventories\r\r\r\r66\r\rChanges.In.Other.Operating.Activities\r\r\r\r67\r\rTotal.Cash.Flow.From.Operating.Activities\r\r\r\r68\r\rCapital.Expenditure\r\r\r\r69\r\rInvestments\r\r\r\r70\r\rOther.Cash.flows.from.Investing.Activities\r\r\r\r\r\r\r\r\r\r\rFundamentals\r\r\r\r\r\r71\r\rTotal.Cash.Flows.From.Investing.Activities\r\r\r\r72\r\rDividends.Paid\r\r\r\r73\r\rSale.Purchase.of.Stock\r\r\r\r74\r\rNet.Borrowings\r\r\r\r75\r\rOther.Cash.Flows.from.Financing.Activities\r\r\r\r76\r\rTotal.Cash.Flows.From.Financing.Activities\r\r\r\r77\r\rEffect.Of.Exchange.Rate.Changes\r\r\r\r78\r\rChange.In.Cash.and.Cash.Equivalents\r\r\r\r79\r\rTrade.Time\r\r\r\r80\r\rName\r\r\r\r81\r\rVolume\r\r\r\r82\r\rP.E.Ratio\r\r\r\r83\r\rDividend.Yield\r\r\r\r84\r\rShares.Outstanding\r\r\r\r\r\r\r\r\r\r\rFundamentals\r\r\r\r\r\r85\r\rPrice.Book\r\r\r\r86\r\rdate\r\r\r\r87\r\radjusted\r\r\r\r\r\r\r\r\rWhich is quite a lot of information. I like this method of calculating financial data since dplyr and the pipe function makes it intuitive to read and we can see what we are calculating.\n\rSome basic financial ratios:\r############################## Create some financial ratios ######################\rratios \u0026lt;- financials %\u0026gt;%\rmutate(BvE = Total.Assets - Total.Liabilities,\rBvE_per_share = BvE / (Shares.Outstanding / 1000),\rEBITDA = Earnings.Before.Interest.and.Taxes + Depreciation,\rMarket_Cap = adjusted * (Shares.Outstanding / 1000), #¡Cuidado!\rEV = (Market_Cap + Total.Liabilities) - Cash.And.Cash.Equivalents,\rMkt_Book = EV /(Total.Assets - Cash.And.Cash.Equivalents),\rPrice_Book = Market_Cap / Total.stockholders..equity,\rPrice_Sales = Market_Cap / Total.Revenue,\rPE_Ratio = Market_Cap / Net.Income,\rEV_EBITDA = EV / EBITDA,\rNI_REV = Net.Income / Total.Revenue,\rRev_TA = Total.Revenue / Total.Assets,\rTA_BvE = Total.Assets / BvE,\rROE = NI_REV * Rev_TA * TA_BvE * 100) %\u0026gt;%\rselect(symbol, date, BvE, BvE_per_share, EBITDA, Market_Cap, EV, Mkt_Book, Price_Book, Price_Sales,\rPE_Ratio, EV_EBITDA, NI_REV, Rev_TA, TA_BvE, ROE)\rTable 9: Financial Ratios\r\r\r\rsymbol\r\rdate\r\rBvE\r\rBvE_per_share\r\rEBITDA\r\rMarket_Cap\r\rEV\r\rMkt_Book\r\rPrice_Book\r\rPrice_Sales\r\rPE_Ratio\r\rEV_EBITDA\r\rNI_REV\r\rRev_TA\r\rTA_BvE\r\rROE\r\r\r\r\r\rBIDU\r\r2019-09-25\r\r175752000\r\r504.25059\r\r33317000\r\r35830015\r\r130006015\r\r0.4816322\r\r0.219955\r\r0.3449273\r\r1.29946\r\r3.902093\r\r0.2654389\r\r0.3490889\r\r1.693102\r\r15.68858\r\r\r\rMSFT\r\r2019-09-25\r\r82718000\r\r10.83347\r\r44958000\r\r1064070734\r\r1228254734\r\r4.9746650\r\r12.863835\r\r9.6418153\r\r64.21283\r\r27.320048\r\r0.1501540\r\r0.4263506\r\r3.129283\r\r20.03312\r\r\r\rGOOG\r\r2019-09-25\r\r177628000\r\r511.38783\r\r40421000\r\r432972486\r\r471435486\r\r2.1816526\r\r2.437524\r\r3.1645640\r\r14.08682\r\r11.663133\r\r0.2246472\r\r0.5877307\r\r1.310559\r\r17.30358\r\r\r\rAMZN\r\r2019-09-25\r\r43549000\r\r88.03896\r\r27762000\r\r874715023\r\r962064023\r\r7.3497229\r\r20.085766\r\r3.7559633\r\r86.83759\r\r34.653988\r\r0.0432527\r\r1.4318467\r\r3.734827\r\r23.13027\r\r\r\rAAPL\r\r2019-09-25\r\r107147000\r\r23.70939\r\r81801000\r\r998874301\r\r1231539301\r\r3.6241784\r\r9.322466\r\r3.7608927\r\r16.77906\r\r15.055309\r\r0.2241420\r\r0.7262151\r\r3.413301\r\r55.56012\r\r\r\r\rWe can check if the calculations are somewhat correct by comparing them to Yahoo Finance statistics. I select only a few ratios which we were able to get from the Yahoo statistics page.\nstats %\u0026gt;%\rleft_join(ratios, by = c(\u0026quot;symbol\u0026quot;)) %\u0026gt;%\rselect(symbol, Name, P.E.Ratio, PE_Ratio, Price.Book, Price_Book) %\u0026gt;%\rkable(caption = \u0026quot;Price Earnings, Price Book ratios\u0026quot;) %\u0026gt;%\rkable_styling(bootstrap_options = c(\u0026quot;striped\u0026quot;, \u0026quot;hover\u0026quot;, \u0026quot;condensed\u0026quot;, \u0026quot;responsive\u0026quot;), font_size = 12)\rTable 10: Price Earnings, Price Book ratios\r\r\r\rsymbol\r\rName\r\rP.E.Ratio\r\rPE_Ratio\r\rPrice.Book\r\rPrice_Book\r\r\r\r\r\rAAPL\r\rApple Inc. \r18.767937\r\r16.77906\r\r10.383821\r\r9.322466\r\r\r\rAMZN\r\rAmazon.com, Inc. \r73.362510\r\r86.83759\r\r16.463211\r\r20.085766\r\r\r\rGOOG\r\rAlphabet Inc. \r25.164429\r\r14.08682\r\r4.501470\r\r2.437524\r\r\r\rMSFT\r\rMicrosoft Corporation\r\r27.541502\r\r64.21283\r\r10.408545\r\r12.863835\r\r\r\rBIDU\r\rBaidu, Inc. \r8.009974\r\r1.29946\r\r1.476227\r\r0.219955\r\r\r\r\rThe ratios seem somewhat similar. However GOOG, MSFT and BIDU PE Ratio looks a little off. The same for BIDU’s Price_Book ratio. The problem here is that the adjusted stock price for BIDU is in USD however the financials are in CNY, so we have to be careful with foreign companies. I did develop a model which scrapes the currency information also and makes the conversion and we can better compare companies in different markets, which I will leave for another post.\nTwo things here:\nYahoo uses a number of different sources for their statistics, just check out their Footnotes side bar for Google here. They use Morningstar, Thomson Reuters, EDGAR and CapitalIQ.\n\rThe Shares Outstanding information will not be the same to the one we use. Yahoo published the more recent Shares Outstanding values but their PE ratios might use December 2018 - Net Income along with December 2018 - Market Cap, taking the Shares Outstanding and adjusted prices from December 2018. However we use September 2019 values! Historical Shares Outstanding information can be found here for Google\n\r\rWe can plot the performance of each stock to see how they did over the past year.\nsymbols %\u0026gt;%\rtq_get(get = \u0026quot;stock.prices\u0026quot;,\rfrom = \u0026quot;2018-12-31\u0026quot;,\rto = Sys.Date()) %\u0026gt;%\rselect(symbol, date, adjusted) %\u0026gt;%\rgroup_by(symbol) %\u0026gt;%\rarrange(desc(date)) %\u0026gt;%\rggplot(aes(x = date, y = adjusted))+\rgeom_line() +\rfacet_wrap(~ symbol, ncol = 2, scales = \u0026quot;free\u0026quot;) +\rtheme_tq() +\rggtitle(\u0026quot;Stock Prices since December 2018\u0026quot;)\r\rAlso using fundamental data:\rfinancials %\u0026gt;%\rggplot(aes(x = symbol)) +\rgeom_col(aes(y = Total.Assets, color = \u0026quot;blue\u0026quot;, fill = \u0026quot;blue\u0026quot;, alpha = 0.5)) +\rgeom_col(aes(y = Total.Liabilities, color = \u0026quot;red\u0026quot;, fill = \u0026quot;red\u0026quot;, alpha = 0.5)) +\rggtitle(\u0026quot;Total Assets \u0026amp; Total Liabilities\u0026quot;) +\rxlab(\u0026quot;Symbols\u0026quot;) +\rylab(\u0026quot;Total Assets \u0026amp; Total Liabilities\u0026quot;) +\rtheme_tq() +\rtheme(legend.position = \u0026quot;none\u0026quot;)\rAny errors are my own, if you find any please let me know!\n\r","date":1569110400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1569110400,"objectID":"3fb03d3147a7c5a1c6d2d1f2b444e766","permalink":"/post/financial-ratios-in-r/fundamental-financial-ratios-in-r/","publishdate":"2019-09-22T00:00:00Z","relpermalink":"/post/financial-ratios-in-r/fundamental-financial-ratios-in-r/","section":"post","summary":"An analysis of company financial statements: Book-Value-Equity, EBITDA, Enterprise Value, Market-Book, DuPont anaysis. ","tags":["yahoo finance","asset pricing","fundamental analysis","ratios"],"title":"Fundamental Financial Ratios in R","type":"post"},{"authors":["Matthew Smith"],"categories":["Statistics"],"content":"\r\rI was recently given a task to impute some time series missing values for a prediction problem. Python has the TSFRESH package which is pretty well documented but I wanted to apply something using R. I opted for a model from statistics and control theory, called Kalman Smoothing which is available in the imputeTS package in R.\nI went with smoothing over filtering since the Kalman filter takes a forward pass through the data and uses all the data upto the current time point and can be done in real time. Kalman smoothing adds a backward pass through the data and thus uses all the data. I guess it can be considered an extention to filtering.\nNote: I use stock prices here only for easy time series data collection and to just apply Kalman Smoothing to a time series problem, you cannot build a trading strategy using smoothing for the reason given. You can check out a Kalman Filtering Pairs Trading Strategy here.\nDownload some data:\rI just collect some simple data for Google and Walmart. I end up with 3 parts, the actual observations, the predicted observation and the randomly generated missing time series.\nlibrary(knitr)\rlibrary(kableExtra)\rlibrary(quantmod)\rlibrary(imputeTS)\rlibrary(Metrics)\rsymbols \u0026lt;- c(\u0026quot;GOOG\u0026quot;, \u0026quot;WMT\u0026quot;)\rmyenv \u0026lt;- new.env()\rsymnames \u0026lt;- getSymbols(symbols, env = myenv)\rli \u0026lt;- eapply(myenv, function(x) x) ts \u0026lt;- do.call(merge, eapply(myenv, Ad)[symnames])\ractual \u0026lt;-as.data.frame(ts)\rnames(actual) \u0026lt;- paste(symbols, \u0026quot;actual\u0026quot;, sep = \u0026quot;_\u0026quot;)\r\rActual observations:\rTable 1: Actual Observations\r\r\r\r\rGOOG_actual\r\rWMT_actual\r\r\r\r\r\r2007-01-03\r\r232.9220\r\r35.17886\r\r\r\r2007-01-04\r\r240.7277\r\r35.34902\r\r\r\r2007-01-05\r\r242.6853\r\r35.06050\r\r\r\r2007-01-08\r\r240.8871\r\r34.77196\r\r\r\r2007-01-09\r\r241.8435\r\r35.06050\r\r\r\r2007-01-10\r\r243.8161\r\r34.97911\r\r\r\r\rHere I create the 100 random missing values that we want to predcit /impute.\n\rCreate some NA values:\rts[sample(nrow(ts), 100), ] \u0026lt;- NA\rnames(ts) \u0026lt;- paste(symbols, \u0026quot;missing\u0026quot;, sep = \u0026quot;_\u0026quot;)\rTable 2: Data with random missing observations\r\r\r\rGOOG_missing\r\rWMT_missing\r\r\r\r\r\r232.9220\r\r35.17886\r\r\r\r240.7277\r\r35.34902\r\r\r\r242.6853\r\r35.06050\r\r\r\r240.8871\r\r34.77196\r\r\r\rNA\r\rNA\r\r\r\r243.8161\r\r34.97911\r\r\r\r\rI wrap the na_kalman into a function to apply lapply which is useful should I want to apply the model to multivariate time series data. That is you might have a data set with many explanatory variables for each time stamp and one or more variables will have missing values. The function should impute across the columns of your data frame.\nI use a state space representation of an ARIMA model here but I suggest taking a look at the auto.arima model from the forecast package for the best model.There is also a model available for a strucutred model fitted by maximum likelihood. I just use a simple ARIMA model for this example.\n\rRun the model\r# Model 1:\r# Kalman Smoothing missing value imputation in a state space representation of an ARIMA model\rKalmanSmoothing \u0026lt;- function(data){\rdf \u0026lt;- data\rarima_model \u0026lt;- arima(df[, ], order = c(1, 0, 1))$model\rKalmanImputation \u0026lt;- na_kalman(df[, ], model = arima_model)\rreturn(KalmanImputation)\r}\rresults \u0026lt;- lapply(ts, KalmanSmoothing)\rresults \u0026lt;- as.data.frame(results)\rnames(results) \u0026lt;- paste(symbols, \u0026quot;predictions\u0026quot;, sep = \u0026quot;_\u0026quot;)\rts \u0026lt;- as.data.frame(ts)\r\rCompute the RMSE for both time series:\rI subset the first 10 predictions for each observation but we will have 100 predictions (one for each NA value we randomly generated earlier).\nfinal \u0026lt;- cbind(ts, results, actual)\rGOOG_error \u0026lt;- subset(final, is.na(GOOG_missing), select = c(\u0026quot;GOOG_predictions\u0026quot;, \u0026quot;GOOG_actual\u0026quot;))\rTable 3: Predictions vs Observed\r\r\r\r\rGOOG_predictions\r\rGOOG_actual\r\r\r\r\r\r2007-01-09\r\r242.2819\r\r241.8435\r\r\r\r2007-01-29\r\r246.6176\r\r245.3155\r\r\r\r2007-03-09\r\r226.5736\r\r225.6343\r\r\r\r2007-04-23\r\r239.1593\r\r238.6455\r\r\r\r2007-05-03\r\r233.3537\r\r235.7314\r\r\r\r2007-09-17\r\r264.9737\r\r261.6692\r\r\r\r2007-10-05\r\r296.0007\r\r295.9158\r\r\r\r2007-10-22\r\r328.9113\r\r324.1600\r\r\r\r2007-11-01\r\r353.2276\r\r350.2920\r\r\r\r2008-06-05\r\r283.8127\r\r292.0553\r\r\r\r\r\rPrint the RMSE for Google\rrmse(GOOG_error$GOOG_actual, GOOG_error$GOOG_predictions)\r## [1] 7.889578\r\rApply the same to the Walmart predictions:\rWMT_error \u0026lt;- subset(final, is.na(WMT_missing), select = c(\u0026quot;WMT_predictions\u0026quot;, \u0026quot;WMT_actual\u0026quot;))\rTable 4: Predictions vs Observed\r\r\r\r\rWMT_predictions\r\rWMT_actual\r\r\r\r\r\r2007-01-09\r\r34.88928\r\r35.06050\r\r\r\r2007-01-29\r\r35.14012\r\r35.23806\r\r\r\r2007-03-09\r\r35.17471\r\r35.08268\r\r\r\r2007-04-23\r\r36.56807\r\r36.37310\r\r\r\r2007-05-03\r\r35.89254\r\r35.94939\r\r\r\r2007-09-17\r\r32.93606\r\r32.51551\r\r\r\r2007-10-05\r\r33.87928\r\r34.05422\r\r\r\r2007-10-22\r\r33.38332\r\r33.96415\r\r\r\r2007-11-01\r\r33.55119\r\r33.04843\r\r\r\r2008-06-05\r\r44.16592\r\r45.49237\r\r\r\r\r\rPrint the RMSE for Walmart\rrmse(WMT_error$WMT_actual, WMT_error$WMT_predictions)\r## [1] 0.6258724\r\r","date":1569110400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1569110400,"objectID":"451fa9157ae4bcc04640e62c92c43568","permalink":"/post/kalman-smoothing/kalman-smoothing-time-series-imputation/","publishdate":"2019-09-22T00:00:00Z","relpermalink":"/post/kalman-smoothing/kalman-smoothing-time-series-imputation/","section":"post","summary":"I use the na_kalman function from the imputeTS package to impute randomly generate missing stock prices.","tags":["time-series","missing value imputation","stock prices"],"title":"Kalman Smoothing for Time Series Missing Value Imputation","type":"post"},{"authors":["Matthew Smith"],"categories":["AWS"],"content":"\rNote: Skip to Step 5 if you want the “quick fix”.\nI will briefly document how I setup RStudio server on an Amazon AWS cloud instance. Once you have an AWS account you should be able to follow these instructions to set everything up. I suggest you follow some tutorial such as here in order to setup the Amazon ec2 instance, it’s not difficult but it is a separate topic. I am using the “Ubuntu Server 18.04 LTS (HVM), SSD Volume Type” on a “free eligible tier t2.micro” - The free version has 1GB of memory which is fine for getting to know the environment/Amazon AWS but I strongly recomend investing in a paid instance once your are familiar.\nOnce the instance is setup, you might want to follow these instructions here to set up PuTTY (for Windows users) and obtain a .pem key. Once we are logged into PuTTY we can run the following commands into the terminal:\n\r\rStep 1: Install R\nsudo apt update\rsudo apt-get install -y r-base r-base-dev\rStep 2: Download and isntall RStudio\nFind the latest RStudio version link from here and replace the link below after the wget.\nsudo apt install gdebi-core\rwget https://download2.rstudio.org/server/bionic/amd64/rstudio-server-1.2.1335-amd64.deb\rsudo gdebi rstudio-server-1.2.1335-amd64.deb\rStep 3: We can add a user to the system to log into RStudio server\nsudo chmod 777 -R /usr/local/lib/R/site-library\rsudo adduser YOURUSERNAME\rThat should be it. I was using this code a little while back. I will update the post when I install an AWS instance again in the coming months.\nStep 4: Updating R to later versions\necho \u0026quot;deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran35/\u0026quot; | sudo tee -a /etc/apt/sources.list\rsudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9\rsudo apt-get update\rsudo apt-get upgrade -y\rStep 5: Quick version\nYou can install RStudio directly as an Amazon AWS instance by using Louis Aslett’s RStudio Amazon Machine Image (AMI) here. There is also a short video here on how you can set it up painlessly!\nI recommend Louis Aslett’s AMI especially if you are not familiar with Bash or Shell commands however I was running into some compatibility problems with package versions and R versions which is why I sought a way to manually install R and have full control.\nBelow are a few additional commands, mostly for myself since I kept all these commands in a notepad and there was a reason they were kept!\nStep 6: Upgrade R\necho \u0026quot;deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran35/\u0026quot; | sudo tee -a /etc/apt/sources.list\rsudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9\rsudo apt-get update\rsudo apt-get upgrade -y\rsudo apt-get install -y r-base r-recommended r-base-dev\rStep 7: Change password for the root user\nsudo passwd root\rsu root\rStep 8: Additional\napt-get -y build-dep libcurl4-gnutls-dev\r","date":1569024000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1569024000,"objectID":"107a25f45ae12d4007cc08516c53dca8","permalink":"/post/rstudio-amazonaws/","publishdate":"2019-09-21T00:00:00Z","relpermalink":"/post/rstudio-amazonaws/","section":"post","summary":"A short read on how to install RStudio using bash commands on an Amazon AWS instance.","tags":["AWS","RStudio"],"title":"RStudio Server on Amazon Web Services","type":"post"},{"authors":["Matthew Smith"],"categories":["Yahoo Finance"],"content":"\r\rI wrote a script a while back when I was working on a project which required the analysis of IPO data, of course I used the IPO data from the bloomberg terminal but I wanted a free source also. Yahoo Finance collects IPO data for a number of worldwide markets, its not clean data but it goes as far back as the year 2000.\nI wanted to follow on from some research by J.R.Ritter here. The goal is to try and compute the money left on the table from IPO’s and extend the research up until 2018.\nQuote: In the 1980s, the average first-day return on initial public offerings (IPOs) was 7%. The average first-day return doubled to almost 15% during 1990-1998, before jumping to 65% during the internet bubble years of 1999-2000 and then reverting to 12% during 2001-2003.\nThe code is not clean and if I had to re-write it today I would do so very differently but it works. I just re-download a small sample of the data as it takes some time to process all years but changing from to the year 2000 should get you all the data.\nlibrary(rvest)\rlibrary(naniar)\rlibrary(tidyverse)\rlibrary(tidyquant)\rlibrary(lubridate)\rlibrary(knitr)\rlibrary(kableExtra)\rfrom = \u0026quot;2019-09-01\u0026quot;\rto = \u0026quot;2019-09-19\u0026quot;\rs \u0026lt;- seq(as.Date(from), as.Date(to), \u0026quot;days\u0026quot;)\rurl \u0026lt;- \u0026quot;https://finance.yahoo.com/calendar/ipo?from=\u0026quot;\rlinks \u0026lt;- gsub(\u0026quot; \u0026quot;, \u0026quot;\u0026quot;, paste(url,from,\u0026quot;\u0026amp;to=\u0026quot;,to,\u0026quot;\u0026amp;day=\u0026quot;,format(s, \u0026quot;%Y-%m-%d\u0026quot;)))\rstore \u0026lt;- NULL\rtbl \u0026lt;- NULL\rfor(i in links){\rstore[[i]] = read_html(i)\rtbl[[i]] = html_table(store[[i]])\r}\rlist \u0026lt;- unlist(tbl, recursive = FALSE)\rdf \u0026lt;- do.call(\u0026quot;rbind\u0026quot;, list)\rdf \u0026lt;- df %\u0026gt;%\rreplace_with_na_all(condition = ~.x == \u0026quot;-\u0026quot;)\rdata \u0026lt;- df[!is.na(df$Price), ]\rI get a nice data frame which looks like:\ndata %\u0026gt;%\rhead() %\u0026gt;%\rkable() %\u0026gt;%\rkable_styling(bootstrap_options = c(\u0026quot;striped\u0026quot;, \u0026quot;hover\u0026quot;, \u0026quot;condensed\u0026quot;, \u0026quot;responsive\u0026quot;))\r\r\rSymbol\r\rCompany\r\rExchange\r\rDate\r\rPrice Range\r\rPrice\r\rCurrency\r\rShares\r\rActions\r\r\r\r\r\rVG8.AX\r\rVGI Partners Asian Invests Ltd\r\rASX\r\rAug 04, 2019\r\rN/A\r\rN/A\r\rAUD\r\rN/A\r\rAmended\r\r\r\rVG8.AX\r\rVGI Partners Asian Invests Ltd\r\rASX\r\rAug 04, 2019\r\rN/A\r\rN/A\r\rAUD\r\rN/A\r\rAmended\r\r\r\rVG8.AX\r\rVGI Partners Asian Invests Ltd\r\rASX\r\rAug 04, 2019\r\rN/A\r\rN/A\r\rAUD\r\rN/A\r\rAmended\r\r\r\r\rChina Merchants Coml Reit\r\rHKSE\r\rSep 02, 2019\r\rN/A\r\rN/A\r\rUSD\r\rN/A\r\rAmended\r\r\r\r\rImmunotech Biopharm Ltd\r\rHKSE\r\rSep 02, 2019\r\rN/A\r\rN/A\r\rUSD\r\rN/A\r\rAmended\r\r\r\r\rNusantara Almazia PT\r\rJakarta\r\rAug 12, 2019\r\rN/A\r\rN/A\r\rIDR\r\r461530000\r\rAmended\r\r\r\r\rTheres lot of missing IPO price data and many duplicate results since this is just a calendar and thus reports on any news about an IPO.\nI next get the stock price information: - which can take some time so I suggest saving the results.\nsymbols \u0026lt;- df$Symbol\rsymbols \u0026lt;- symbols[symbols != \u0026quot;\u0026quot;] stocks \u0026lt;- symbols %\u0026gt;%\rtq_get(\u0026quot;stock.prices\u0026quot;,\rfrom = from,\rto = to)\rstocks %\u0026gt;%\rhead() %\u0026gt;%\rkable() %\u0026gt;%\rkable_styling(bootstrap_options = c(\u0026quot;striped\u0026quot;, \u0026quot;hover\u0026quot;, \u0026quot;condensed\u0026quot;, \u0026quot;responsive\u0026quot;))\r\r\rsymbol\r\rdate\r\ropen\r\rhigh\r\rlow\r\rclose\r\rvolume\r\radjusted\r\r\r\r\r\rSDC\r\r2019-09-12\r\r20.59\r\r21.10\r\r16.28\r\r16.67\r\r55416800\r\r16.67\r\r\r\rSDC\r\r2019-09-13\r\r16.81\r\r18.71\r\r16.81\r\r18.68\r\r19119100\r\r18.68\r\r\r\rSDC\r\r2019-09-16\r\r18.46\r\r19.00\r\r17.81\r\r18.90\r\r5573000\r\r18.90\r\r\r\rSDC\r\r2019-09-17\r\r19.00\r\r19.30\r\r18.65\r\r19.07\r\r4415200\r\r19.07\r\r\r\rSDC\r\r2019-09-18\r\r19.17\r\r19.70\r\r18.90\r\r19.48\r\r10533900\r\r19.48\r\r\r\rTXG\r\r2019-09-12\r\r54.00\r\r58.00\r\r51.00\r\r52.75\r\r7326300\r\r52.75\r\r\r\r\rNext I join the daily stock price data with the IPO data, clean it up a little and compute the returns. I also split the data into different markets such as NYSE, LSE, Frankfurt etc. and compute the average daily returns. You can find everything along with the excel file collecting IPOs since 2000 here.\nHeres how the final data looks with the calculated one day price returns:\nread.csv(\u0026quot;https://raw.githubusercontent.com/msmith01/IPO_Web_Scraping_Yahoo/master/yahoo_finance_IPOs_2000_2018.csv\u0026quot;, nrows = 10) %\u0026gt;%\rkable() %\u0026gt;%\rkable_styling(bootstrap_options = c(\u0026quot;striped\u0026quot;, \u0026quot;hover\u0026quot;, \u0026quot;condensed\u0026quot;, \u0026quot;responsive\u0026quot;))\r\r\rX\r\rsymbol\r\rcompany\r\rexchange\r\rdate.x\r\rprice\r\rcurrency\r\ractions\r\rdate.y\r\ropen\r\rclose\r\radjusted\r\rreturns\r\ryear\r\r\r\r\r\r1\r\rEVD.F\r\rCTS Eventim AG\r\rFrankfurt\r\r2000-01-31\r\r21.50\r\rEUR\r\rPriced\r\r2000-02-01\r\r6.37500\r\r6.30000\r\r4.990930\r\r-0.7069767\r\r2000\r\r\r\r2\r\rSLAB\r\rSilicon Laboratories Inc\r\rNasdaqGM\r\r2000-03-24\r\r31.00\r\rUSD\r\rPriced\r\r2000-03-24\r\r63.00000\r\r69.37500\r\r69.375000\r\r1.2379032\r\r2000\r\r\r\r3\r\r0764.HK\r\rOcean Shores Group Ltd\r\rHKSE\r\r2000-02-10\r\r1.33\r\rHKD\r\rPriced\r\r2005-09-29\r\r9984.20996\r\r9984.20996\r\r9946.558594\r\r7505.9247827\r\r2000\r\r\r\r4\r\rMTB.V\r\rMountain Boy Minerals Ltd\r\rTSXV\r\r2000-07-12\r\r0.35\r\rCAD\r\rPriced\r\r2000-07-12\r\r0.35000\r\r0.35000\r\r0.350000\r\r0.0000000\r\r2000\r\r\r\r5\r\rIAG.TO\r\rIndustrial-Alliance Life\r\rToronto\r\r2000-02-10\r\r15.75\r\rCAD\r\rPriced\r\r2000-02-10\r\r8.50000\r\r8.70000\r\r5.096976\r\r-0.4476190\r\r2000\r\r\r\r6\r\r2457.TW\r\rPhihong Enterprises Co Ltd\r\rTaiwan\r\r2000-02-15\r\r111.00\r\rTWD\r\rPriced\r\r2000-02-16\r\r55.19920\r\r55.19920\r\r28.781498\r\r-0.5027099\r\r2000\r\r\r\r7\r\rIFX.F\r\rInfineon Technologies AG\r\rFrankfurt\r\r2000-03-14\r\r35.00\r\rEUR\r\rPriced\r\r2000-03-14\r\r71.50000\r\r79.00000\r\r69.923615\r\r1.2571429\r\r2000\r\r\r\r8\r\rBRC.V\r\rBRC Development Corp\r\rTSXV\r\r2000-02-24\r\r0.50\r\rCAD\r\rPriced\r\r2000-07-20\r\r0.35000\r\r0.40000\r\r0.400000\r\r-0.2000000\r\r2000\r\r\r\r9\r\rPTR\r\rPetroChina Co Ltd\r\rNYSE\r\r2000-04-07\r\r16.44\r\rUSD\r\rPriced\r\r2000-04-06\r\r16.43750\r\r16.43750\r\r7.569896\r\r-0.0001521\r\r2000\r\r\r\r10\r\r0643.HK\r\rCarry Wealth Holdings Ltd\r\rHKSE\r\r2000-03-09\r\r1.00\r\rHKD\r\rPriced\r\r2000-03-14\r\r0.78389\r\r0.70833\r\r0.332258\r\r-0.2916700\r\r2000\r\r\r\r\rI try to recreate some of the plots on J.R.Ritters website for each of the countries.\nknitr::include_graphics(\u0026quot;Monthly_bloomberg_graphs.png\u0026quot;)\rknitr::include_graphics(\u0026quot;Monthly_bloomberg_graphs2.png\u0026quot;)\rknitr::include_graphics(\u0026quot;Monthly_bloomberg_graphs3.png\u0026quot;)\rThe returns seem reasonable given some exchanges are growth exchanges and others are mature exchanges. I would take caution here however since Yahoo is somewhat unreliable (at least in my experience of getting stock prices and fundamental data).\nReferences\rSee J.R.Ritter for other IPO data.\rSee Tim Loughran and Jay Ritter IPO returns:\n","date":1569024000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1569024000,"objectID":"ac15b304c847262db77fda90ccc3678a","permalink":"/post/yahoo-finance-ipo/","publishdate":"2019-09-21T00:00:00Z","relpermalink":"/post/yahoo-finance-ipo/","section":"post","summary":"I compute the money left on the table for companies listed on the yahoo finance IPO calendar.","tags":["time-series","finance","ipo","yahoo-finance"],"title":"Scraping Yahoo Finance IPO Data","type":"post"},{"authors":["Matthew Smith"],"categories":["AWS"],"content":"\rThere are times when I am connected remotely to an RStudio server and I want to run a time-consuming script which might take a few hours or days. As part of my PhD I had to calculate a number of large distance matrices which took considerable time since the data was quite large. Another script I developed was to download and parse 150,000 documents. It took a week to download and parse them and during this time I lost connection to the server a few times causing the code to break.\nThe free version of RStudio only allows one session open at any time and leaving the script running for a week meant that I couldn’t keep coding in R! Many of the problems I faced actually didn’t require RStudio since the models were either downloading and storing data or calculating matrices so just an R connection would be sufficient. So, I wanted to find a way to run an R file without logging off or without any interruption. I come across the nohup command in Unix operating systems.\nThe nohup or no hang-up command can execute a script and tell the system to continue running it even if the session is disconnected.\rI use it in the following way, once I have developed a model myRFile.R using RStudio, verified it works on a sample of the data etc. and saved it into a folder called myFolder. I can go to the terminal (which I usually connect to using PuTTY) and run the following:\nnohup Rscript ./myFolder/myRFile.R \u0026lt;/dev/null\u0026gt;myRFile_Output.out 2\u0026gt;myRFile_ErrorMessages.err \u0026amp;\rThis will run the .R file and store any output usually printed to the console to a text file myRFile_Ouput.out and any error messages to another text file myRFile_ErrorMessages.err where we can check on the progress whilst the script is running. I usually add progress messages in side the function such as:\nfoo \u0026lt;- function(x){\rprint(paste(\u0026quot;Year\u0026quot;, x, \u0026quot;has started \u0026quot;, Sys.time()))\rdo.something\rprint(paste(\u0026quot;Year\u0026quot;, x, \u0026quot;has ended \u0026quot;, Sys.time()))\rreturn(x)\r}\ryears \u0026lt;- seq(from = \u0026quot;2005\u0026quot;, to = \u0026quot;2018\u0026quot;)\rsapply(years, foo) \rWhich prints out the progress of the function to myRFile_Output.out, i.e. if I needed to apply a function across years.\nBy running nohup commands from the terminal allows me to free up my RStudio for other tasks also.\n","date":1569024000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1569024000,"objectID":"f0176721d0dd4612f46a19685022f0d3","permalink":"/post/nohup-r-connect/","publishdate":"2019-09-21T00:00:00Z","relpermalink":"/post/nohup-r-connect/","section":"post","summary":"I briefly discuss how I use nohup commands to run R files, save the errors and outputs to file","tags":["AWS","RStudio","nohup"],"title":"Sending nohup commands to R scripts","type":"post"},{"authors":["Matthew Smith"],"categories":["Yahoo Finance"],"content":"\r\rI had been tracking the performance of Nvidia for a while since they were reporting impressive earnings and share price growth over recent years. I conducted a study (DCF analysis) to see if Nvidia was fairly priced at this time. I had it marked down as a $141 fair value per share based on the DCF I constructed, however it was trading between a high of $280 to a low of $130 from September and to December of 2018.\nLet’s download some fundamental data for Nvida and compare it’s performance to it’s industry peers.\n# A function to collect fundamental data from Yahoo finance (Income Statement, Balance Sheet and Cash Flow statements, just skip past this part.)\rgetFin \u0026lt;- function(stock){\rif (\u0026quot;rvest\u0026quot; %in% installed.packages()) {\rlibrary(rvest)\r}else{\rinstall.packages(\u0026quot;rvest\u0026quot;)\rlibrary(rvest)\r}\rfor (i in 1:length(stock)) {\rtryCatch(\r{\r# Collect the Income Statement data\rlink \u0026lt;- \u0026quot;https://finance.yahoo.com/quote/\u0026quot;\rlink \u0026lt;- paste0(link, stock[i], \u0026quot;/financials?p=\u0026quot;, stock[i])\rwahis.session \u0026lt;- html_session(link)\rp \u0026lt;- wahis.session %\u0026gt;%\rhtml_nodes(xpath = \u0026#39;//*[@id=\u0026quot;Col1-1-Financials-Proxy\u0026quot;]/section/div[3]/table\u0026#39;)%\u0026gt;%\rhtml_table(fill = TRUE)\rIncomeStatement \u0026lt;- p[[1]]\rcolnames(IncomeStatement) \u0026lt;- paste(IncomeStatement[1,])\rIncomeStatement \u0026lt;- IncomeStatement[-c(1,5,12,20,25),]\rnames_row \u0026lt;- paste(IncomeStatement[,1])\rIncomeStatement \u0026lt;- IncomeStatement[,-1]\rIncomeStatement \u0026lt;- apply(IncomeStatement, 2, function(x){gsub(\u0026quot;,\u0026quot;,\u0026quot;\u0026quot;,x)})\rIncomeStatement \u0026lt;- as.data.frame(apply(IncomeStatement, 2, as.numeric))\rrownames(IncomeStatement) \u0026lt;- paste(names_row)\rtemp1 \u0026lt;- IncomeStatement\r# Collect the Balance Sheet data\rlink \u0026lt;- \u0026quot;https://finance.yahoo.com/quote/\u0026quot;\rlink \u0026lt;- paste0(link, stock[i],\u0026quot;/balance-sheet?p=\u0026quot;, stock[i])\rwahis.session \u0026lt;- html_session(link)\rp \u0026lt;- wahis.session %\u0026gt;%\rhtml_nodes(xpath = \u0026#39;//*[@id=\u0026quot;Col1-1-Financials-Proxy\u0026quot;]/section/div[3]/table\u0026#39;)%\u0026gt;%\rhtml_table(fill = TRUE)\rBalanceSheet \u0026lt;- p[[1]]\rcolnames(BalanceSheet) \u0026lt;- BalanceSheet[1,]\rBalanceSheet \u0026lt;- BalanceSheet[-c(1,2,17,28),]\rnames_row \u0026lt;- BalanceSheet[,1]\rBalanceSheet \u0026lt;- BalanceSheet[,-1]\rBalanceSheet \u0026lt;- apply(BalanceSheet, 2, function(x){gsub(\u0026quot;,\u0026quot;,\u0026quot;\u0026quot;,x)})\rBalanceSheet \u0026lt;- as.data.frame(apply(BalanceSheet, 2, as.numeric))\rrownames(BalanceSheet) \u0026lt;- paste(names_row)\rtemp2 \u0026lt;- BalanceSheet\r# Collect the Cash Flow data\rlink \u0026lt;- \u0026quot;https://finance.yahoo.com/quote/\u0026quot;\rlink \u0026lt;- paste0(link, stock[i], \u0026quot;/cash-flow?p=\u0026quot;, stock[i])\rwahis.session \u0026lt;- html_session(link)\rp \u0026lt;- wahis.session %\u0026gt;%\rhtml_nodes(xpath = \u0026#39;//*[@id=\u0026quot;Col1-1-Financials-Proxy\u0026quot;]/section/div[3]/table\u0026#39;)%\u0026gt;%\rhtml_table(fill = TRUE)\rCashFlow \u0026lt;- p[[1]]\rcolnames(CashFlow) \u0026lt;- CashFlow[1,]\rCashFlow \u0026lt;- CashFlow[-c(1,3,11,16),]\rnames_row \u0026lt;- CashFlow[,1]\rCashFlow \u0026lt;- CashFlow[,-1]\rCashFlow \u0026lt;- apply(CashFlow, 2, function(x){gsub(\u0026quot;,\u0026quot;,\u0026quot;\u0026quot;,x)})\rCashFlow \u0026lt;- as.data.frame(apply(CashFlow, 2, as.numeric))\rrownames(CashFlow) \u0026lt;- paste(names_row)\rtemp3 \u0026lt;- CashFlow\rassign(paste0(stock[i],\u0026#39;.f\u0026#39;),value = list(IncomeStatement = temp1, BalanceSheet = temp2, CashFlow = temp3), envir = parent.frame())\r},\rerror = function(cond){\rmessage(stock[i], \u0026quot;Give error \u0026quot;,cond)\r}\r)\r}\r}\rWe can inspect Nvidia’s recent performance by scraping Yahoo finance. The original getFinancials option from the package quantmod became defunct a little while ago, however I have been using this function without problems ever since. You can just add tickers to the symbols object to download more company financial accounts.\nsymbols \u0026lt;- c(\u0026quot;NVDA\u0026quot;)\rgetFin(symbols)\rsymbols.f \u0026lt;- sapply(symbols, function(x) { paste0(x, \u0026quot;.f\u0026quot;) })\rtickers \u0026lt;- list2env(mget(symbols.f))\rIS \u0026lt;- lapply(tickers, \u0026quot;[[\u0026quot;, \u0026quot;IncomeStatement\u0026quot;)\rBS \u0026lt;- lapply(tickers, \u0026quot;[[\u0026quot;, \u0026quot;BalanceSheet\u0026quot;)\rCF \u0026lt;- lapply(tickers, \u0026quot;[[\u0026quot;, \u0026quot;CashFlow\u0026quot;)\rIS \u0026lt;- as.data.frame(IS)\rBS \u0026lt;- as.data.frame(BS)\rCF \u0026lt;- as.data.frame(CF)\rNvidia’s Income Statement data.\rIS %\u0026gt;%\rkable() %\u0026gt;%\rkable_styling(bootstrap_options = c(\u0026quot;striped\u0026quot;, \u0026quot;hover\u0026quot;, \u0026quot;condensed\u0026quot;, \u0026quot;responsive\u0026quot;))\r\r\r\rNVDA.f.1.27.2019\r\rNVDA.f.1.28.2018\r\rNVDA.f.1.29.2017\r\rNVDA.f.1.31.2016\r\r\r\r\r\rTotal Revenue\r\r11716000\r\r9714000\r\r6910000\r\r5010000\r\r\r\rCost of Revenue\r\r4545000\r\r3892000\r\r2847000\r\r2199000\r\r\r\rGross Profit\r\r7171000\r\r5822000\r\r4063000\r\r2811000\r\r\r\rResearch Development\r\r2376000\r\r1797000\r\r1463000\r\r1331000\r\r\r\rSelling General and Administrative\r\r991000\r\r815000\r\r663000\r\r602000\r\r\r\rNon Recurring\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rOthers\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rTotal Operating Expenses\r\r7912000\r\r6504000\r\r4973000\r\r4132000\r\r\r\rOperating Income or Loss\r\r3804000\r\r3210000\r\r1937000\r\r878000\r\r\r\rTotal Other Income/Expenses Net\r\r92000\r\r-14000\r\r-32000\r\r-135000\r\r\r\rEarnings Before Interest and Taxes\r\r3804000\r\r3210000\r\r1937000\r\r878000\r\r\r\rInterest Expense\r\r-58000\r\r-61000\r\r-58000\r\r-47000\r\r\r\rIncome Before Tax\r\r3896000\r\r3196000\r\r1905000\r\r743000\r\r\r\rIncome Tax Expense\r\r-245000\r\r149000\r\r239000\r\r129000\r\r\r\rMinority Interest\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rNet Income From Continuing Ops\r\r4141000\r\r3047000\r\r1666000\r\r614000\r\r\r\rDiscontinued Operations\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rExtraordinary Items\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rEffect Of Accounting Changes\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rOther Items\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rNet Income\r\r4141000\r\r3047000\r\r1666000\r\r614000\r\r\r\rPreferred Stock And Other Adjustments\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rNet Income Applicable To Common Shares\r\r4141000\r\r3047000\r\r1666000\r\r614000\r\r\r\r\r\rNvidia’s Balance Sheet Information.\rBS %\u0026gt;%\rkable() %\u0026gt;%\rkable_styling(bootstrap_options = c(\u0026quot;striped\u0026quot;, \u0026quot;hover\u0026quot;, \u0026quot;condensed\u0026quot;, \u0026quot;responsive\u0026quot;))\r\r\r\rNVDA.f.1.27.2019\r\rNVDA.f.1.28.2018\r\rNVDA.f.1.29.2017\r\rNVDA.f.1.31.2016\r\r\r\r\r\rCash And Cash Equivalents\r\r782000\r\r4002000\r\r1766000\r\r596000\r\r\r\rShort Term Investments\r\r6640000\r\r3106000\r\r5032000\r\r4441000\r\r\r\rNet Receivables\r\r1424000\r\r1265000\r\r826000\r\r505000\r\r\r\rInventory\r\r1575000\r\r796000\r\r794000\r\r418000\r\r\r\rOther Current Assets\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rTotal Current Assets\r\r10557000\r\r9255000\r\r8536000\r\r6053000\r\r\r\rLong Term Investments\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rProperty, plant and equipment\r\r1404000\r\r997000\r\r521000\r\r466000\r\r\r\rGoodwill\r\r618000\r\r618000\r\r618000\r\r618000\r\r\r\rIntangible Assets\r\r45000\r\r52000\r\r104000\r\r166000\r\r\r\rAccumulated Amortization\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rOther Assets\r\r668000\r\r319000\r\r62000\r\r67000\r\r\r\rDeferred Long Term Asset Charges\r\r560000\r\r245000\r\rNA\r\rNA\r\r\r\rTotal Assets\r\r13292000\r\r11241000\r\r9841000\r\r7370000\r\r\r\rAccounts Payable\r\r511000\r\r596000\r\r485000\r\r296000\r\r\r\rShort/Current Long Term Debt\r\rNA\r\r15000\r\r796000\r\r1413000\r\r\r\rOther Current Liabilities\r\r588000\r\r318000\r\r325000\r\r532000\r\r\r\rTotal Current Liabilities\r\r1329000\r\r1153000\r\r1788000\r\r2351000\r\r\r\rLong Term Debt\r\r1988000\r\r1985000\r\r1983000\r\r7000\r\r\r\rOther Liabilities\r\r633000\r\r632000\r\r308000\r\r533000\r\r\r\rDeferred Long Term Liability Charges\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rMinority Interest\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rNegative Goodwill\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rTotal Liabilities\r\r3950000\r\r3770000\r\r4079000\r\r2901000\r\r\r\rMisc. Stocks Options Warrants\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rRedeemable Preferred Stock\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rPreferred Stock\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rCommon Stock\r\r1000\r\r1000\r\r1000\r\r1000\r\r\r\rRetained Earnings\r\r12565000\r\r8787000\r\r6108000\r\r4350000\r\r\r\rTreasury Stock\r\r-9275000\r\r-6668000\r\r-5055000\r\r-4052000\r\r\r\rCapital Surplus\r\r6051000\r\r5351000\r\r4708000\r\r4170000\r\r\r\rOther Stockholder Equity\r\r-12000\r\r-18000\r\r-16000\r\r-4000\r\r\r\rTotal stockholders’ equity\r\r9342000\r\r7471000\r\r5762000\r\r4469000\r\r\r\rNet Tangible Assets\r\r8679000\r\r6801000\r\r5040000\r\r3685000\r\r\r\r\r\rNvidia’s Cash Flow Statements\rCF %\u0026gt;%\rkable() %\u0026gt;%\rkable_styling(bootstrap_options = c(\u0026quot;striped\u0026quot;, \u0026quot;hover\u0026quot;, \u0026quot;condensed\u0026quot;, \u0026quot;responsive\u0026quot;))\r\r\r\rNVDA.f.1.27.2019\r\rNVDA.f.1.28.2018\r\rNVDA.f.1.29.2017\r\rNVDA.f.1.31.2016\r\r\r\r\r\rNet Income\r\r4141000\r\r3047000\r\r1666000\r\r614000\r\r\r\rDepreciation\r\r262000\r\r199000\r\r187000\r\r197000\r\r\r\rAdjustments To Net Income\r\r197000\r\r71000\r\r498000\r\r386000\r\r\r\rChanges In Accounts Receivables\r\r-149000\r\r-440000\r\r-321000\r\r-32000\r\r\r\rChanges In Liabilities\r\r-135000\r\r90000\r\r184000\r\r-11000\r\r\r\rChanges In Inventories\r\r-776000\r\r-776000\r\r-375000\r\r66000\r\r\r\rChanges In Other Operating Activities\r\r203000\r\r535000\r\r-167000\r\r-74000\r\r\r\rTotal Cash Flow From Operating Activities\r\r3743000\r\r3502000\r\r1672000\r\r1175000\r\r\r\rCapital Expenditure\r\r-600000\r\r-593000\r\r-176000\r\r-86000\r\r\r\rInvestments\r\r-3497000\r\r1869000\r\r-624000\r\r-345000\r\r\r\rOther Cash flows from Investing Activities\r\rNA\r\rNA\r\r-5000\r\r24000\r\r\r\rTotal Cash Flows From Investing Activities\r\r-4097000\r\r1278000\r\r-793000\r\r-400000\r\r\r\rDividends Paid\r\r-371000\r\r-341000\r\r-261000\r\r-213000\r\r\r\rSale Purchase of Stock\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rNet Borrowings\r\r-16000\r\r-812000\r\r1315000\r\r1315000\r\r\r\rOther Cash Flows from Financing Activities\r\r-5000\r\r-9000\r\r-15000\r\r4000\r\r\r\rTotal Cash Flows From Financing Activities\r\r-2866000\r\r-2544000\r\r291000\r\r-676000\r\r\r\rEffect Of Exchange Rate Changes\r\rNA\r\rNA\r\rNA\r\rNA\r\r\r\rChange In Cash and Cash Equivalents\r\r-3220000\r\r2236000\r\r1170000\r\r99000\r\r\r\r\rNvidia’s fundamentals looked solid after some analysis, but taking into account per share ratios, I changed my opinion. Their share price seemed overvalued compared to their business performance.\nI wanted to track their performance and compare it to Nvidia’s competitors. I downloaded price data using the tidyquant package.\n############### Collect the stock price and benchmark data #############\rnvda \u0026lt;- \u0026quot;NVDA\u0026quot; %\u0026gt;%\rtq_get(get = \u0026quot;stock.prices\u0026quot;,\rfrom = \u0026quot;2017-01-01\u0026quot;,\rto = Sys.Date())\ramd \u0026lt;- \u0026quot;AMD\u0026quot; %\u0026gt;%\rtq_get(get = \u0026quot;stock.prices\u0026quot;,\rfrom = \u0026quot;2017-01-01\u0026quot;,\rto = Sys.Date())\rtxn \u0026lt;- \u0026quot;TXN\u0026quot; %\u0026gt;%\rtq_get(get = \u0026quot;stock.prices\u0026quot;,\rfrom = \u0026quot;2017-01-01\u0026quot;,\rto = Sys.Date())\rintc \u0026lt;- \u0026quot;INTC\u0026quot; %\u0026gt;%\rtq_get(get = \u0026quot;stock.prices\u0026quot;,\rfrom = \u0026quot;2017-01-01\u0026quot;,\rto = Sys.Date())\rnasdaq \u0026lt;- \u0026quot;^IXIC\u0026quot; %\u0026gt;%\rtq_get(get = \u0026quot;stock.prices\u0026quot;,\rfrom = \u0026quot;2017-01-01\u0026quot;,\rto = Sys.Date())\rJoining all the stock price data together along with a benchmark NASDAQ:\n\rStock Price Data\r########## Join the data together ###########\r# Ra is the asset price\r# Rb is the benchmark price (NASDAQ)\rRaRb \u0026lt;- nvda %\u0026gt;%\rfull_join(., amd, by = \u0026quot;date\u0026quot;) %\u0026gt;%\rfull_join(., intc, by = \u0026quot;date\u0026quot;) %\u0026gt;%\rfull_join(., nasdaq, by = \u0026quot;date\u0026quot;) %\u0026gt;%\rselect(date, adjusted.x, adjusted.y, adjusted.x.x, adjusted.y.y) %\u0026gt;%\rsetNames(c(\u0026quot;date\u0026quot;, \u0026quot;NVDA\u0026quot;, \u0026quot;AMD\u0026quot;, \u0026quot;INTC\u0026quot;, \u0026quot;NASDAQ\u0026quot;))\rRaRb %\u0026gt;%\rhead(6) %\u0026gt;%\rkable() %\u0026gt;%\rkable_styling(bootstrap_options = c(\u0026quot;striped\u0026quot;, \u0026quot;hover\u0026quot;, \u0026quot;condensed\u0026quot;, \u0026quot;responsive\u0026quot;))\r\r\rdate\r\rNVDA\r\rAMD\r\rINTC\r\rNASDAQ\r\r\r\r\r\r2017-01-03\r\r101.0116\r\r11.43\r\r34.06019\r\r5429.08\r\r\r\r2017-01-04\r\r103.3683\r\r11.43\r\r33.88338\r\r5477.00\r\r\r\r2017-01-05\r\r100.7443\r\r11.24\r\r33.82755\r\r5487.94\r\r\r\r2017-01-06\r\r102.0910\r\r11.32\r\r33.94852\r\r5521.06\r\r\r\r2017-01-09\r\r106.2301\r\r11.49\r\r34.06950\r\r5531.82\r\r\r\r2017-01-10\r\r105.4280\r\r11.44\r\r34.00436\r\r5551.82\r\r\r\r\rIt’s still quite difficult to compare Nvidia’s performance based on the raw stock price data, so I normalise the data.\n############# Normalise the data ################## normalise_series \u0026lt;- function(xdat) xdat / coredata(xdat)[1]\rnormalised_RaRb \u0026lt;- RaRb %\u0026gt;%\rmutate(NVDA = normalise_series(NVDA),\rAMD = normalise_series(AMD),\rINTC = normalise_series(INTC),\rNASDAQ = normalise_series(NASDAQ))\rThe first few observations normalised\rnormalised_RaRb %\u0026gt;%\rhead() %\u0026gt;%\rkable() %\u0026gt;%\rkable_styling(bootstrap_options = c(\u0026quot;striped\u0026quot;, \u0026quot;hover\u0026quot;, \u0026quot;condensed\u0026quot;, \u0026quot;responsive\u0026quot;))\r\r\rdate\r\rNVDA\r\rAMD\r\rINTC\r\rNASDAQ\r\r\r\r\r\r2017-01-03\r\r1.0000000\r\r1.0000000\r\r1.0000000\r\r1.000000\r\r\r\r2017-01-04\r\r1.0233309\r\r1.0000000\r\r0.9948089\r\r1.008827\r\r\r\r2017-01-05\r\r0.9973533\r\r0.9833771\r\r0.9931697\r\r1.010842\r\r\r\r2017-01-06\r\r1.0106853\r\r0.9903762\r\r0.9967214\r\r1.016942\r\r\r\r2017-01-09\r\r1.0516616\r\r1.0052493\r\r1.0002734\r\r1.018924\r\r\r\r2017-01-10\r\r1.0437212\r\r1.0008749\r\r0.9983608\r\r1.022608\r\r\r\r\r\rThe last few observations normalised\rnormalised_RaRb %\u0026gt;%\rtail() %\u0026gt;%\rkable() %\u0026gt;%\rkable_styling(bootstrap_options = c(\u0026quot;striped\u0026quot;, \u0026quot;hover\u0026quot;, \u0026quot;condensed\u0026quot;, \u0026quot;responsive\u0026quot;))\r\r\rdate\r\rNVDA\r\rAMD\r\rINTC\r\rNASDAQ\r\r\r\r\r\r2019-09-18\r\r1.781775\r\r2.661417\r\r1.519076\r\r1.506220\r\r\r\r2019-09-19\r\r1.751679\r\r2.650044\r\r1.514084\r\r1.507231\r\r\r\r2019-09-20\r\r1.709605\r\r2.629046\r\r1.489129\r\r1.495220\r\r\r\r2019-09-23\r\r1.730890\r\r2.680665\r\r1.494413\r\r1.494260\r\r\r\r2019-09-24\r\r1.708021\r\r2.582677\r\r1.462705\r\r1.472373\r\r\r\r2019-09-25\r\r1.764450\r\r2.584427\r\r1.497936\r\r1.487800\r\r\r\r\rThe data looks a lot more comparable. I plot the results in ggplot2\nnormalised_RaRb %\u0026gt;%\rmelt(id = \u0026quot;date\u0026quot;) %\u0026gt;%\rggplot(aes(x = date, y = value, color = variable)) +\rgeom_line(aes(linetype = variable)) +\r#scale_color_manual(values=c(\u0026quot;red\u0026quot;, \u0026quot;black\u0026quot;, \u0026quot;darkblue\u0026quot;, \u0026quot;yellow\u0026quot;, \u0026quot;green\u0026quot;)) +\rlabs(title = \u0026quot;Normalised NVDA, AMD, INTC and NASDAQ Benchmark\u0026quot;,\rx = \u0026quot;\u0026quot;, subtitle = \u0026quot;From January 2017 - to Sys.Date()\u0026quot;, y = \u0026quot;Normalised Price US$\u0026quot;, color = \u0026quot;\u0026quot;) +\rscale_y_continuous(labels = scales::dollar) +\rtheme_tq(base_size = 8) +\rgeom_dl(aes(label = variable), method = list(dl.combine(\u0026quot;last.points\u0026quot;), cex = 1)) +\rscale_color_manual(values = c(NASDAQ = \u0026#39;black\u0026#39;,\rNVDA = \u0026#39;darkgreen\u0026#39;,\rAMD = \u0026#39;red\u0026#39;,\rINTC = \u0026#39;blue\u0026#39;)) +\rtheme(legend.position = \u0026quot;none\u0026quot;)\rSo $1 invested in Nvidia back in Jan 2017 would have given you aprox $2.75 return if you sold at the back end of 2018, however the price today would be around $1.60. Compare that with AMD you would have got the same return of $2.75 if you sold at the same time as Nvidia but today your return would be more or less the same at aprox $2.75 despite a drop in AMD’s share price at the same time as NVDA.\n\r\r","date":1569024000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1569024000,"objectID":"c2aa200a1e4f62d114380c7ef46581d6","permalink":"/post/nvidia-share-price/","publishdate":"2019-09-21T00:00:00Z","relpermalink":"/post/nvidia-share-price/","section":"post","summary":"Nvidia's stock was outperforming it's industry peers during 2017 - 2019. I analyse their performance.","tags":["fundamentals","finance","yahoo-finance"],"title":"Tracking NVDA's share price","type":"post"},{"authors":["Matthew Smith"],"categories":null,"content":" Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.   Supplementary notes can be added here, including code and math.\n","date":1554595200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554595200,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"/publication/preprint/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/preprint/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example preprint / working paper","type":"publication"},{"authors":[],"categories":[],"content":" Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = \\;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \nA fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears  Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view   Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links   night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links  Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}  Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Academic's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":"","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"d1311ddf745551c9e117aa4bb7e28516","permalink":"/project/external-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/external-project/","section":"project","summary":"An example of linking directly to an external project website using `external_link`.","tags":["Demo"],"title":"External Project","type":"project"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"8f66d660a9a2edc2d08e68cc30f701f7","permalink":"/project/internal-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/internal-project/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Internal Project","type":"project"},{"authors":["Matthew Smith","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.   Supplementary notes can be added here, including code and math.\n","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441065600,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"/publication/journal-article/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/journal-article/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example journal article","type":"publication"},{"authors":["Matthew Smith","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.   Supplementary notes can be added here, including code and math.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"/publication/conference-paper/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/conference-paper/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example conference paper","type":"publication"}]